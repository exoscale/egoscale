{
  "openapi" : "3.0.0",
  "info" : {
    "version" : "2.0.0",
    "termsOfService" : "https://exoscale.com/terms",
    "contact" : {
      "email" : "api@exoscale.com",
      "name" : "API support",
      "url" : "https://portal.exoscale.com/tickets"
    },
    "title" : "Exoscale Public API",
    "description" : "\nInfrastructure automation API, allowing programmatic access to all Exoscale products and services.\n\nThe [OpenAPI Specification](http://spec.openapis.org/oas/v3.0.3.html) source of this documentation can be obtained here:\n\n* [JSON format](https://openapi-v2.exoscale.com/source.json)\n* [YAML format](https://openapi-v2.exoscale.com/source.yaml)"
  },
  "tags" : [ {
    "description" : "\nSecurity Groups are groups of firewall rules that regulate network traffic to and from your Compute instances.\n\n[Read more](https://community.exoscale.com/documentation/compute/security-groups/)",
    "externalDocs" : {
      "description" : "Read more",
      "url" : "https://community.exoscale.com/documentation/compute/security-groups/"
    },
    "name" : "security-groups"
  }, {
    "description" : "\nAn Instance Type is a resource describing the amount of CPU, RAM and eventually GPUs your Compute instance will run on.\n\n[Read more](https://www.exoscale.com/pricing/)",
    "externalDocs" : {
      "description" : "Read more",
      "url" : "https://www.exoscale.com/pricing/"
    },
    "name" : "instance-types"
  }, {
    "description" : "\nA Network Load Balancer (NLB) is a Layer 4 (TCP/UDP) load balancer that distributes incoming traffic to Compute instances managed by an Instance Pool.\n\n[Read more](https://community.exoscale.com/documentation/compute/network-load-balancer/)\n",
    "externalDocs" : {
      "description" : "Read more",
      "url" : "https://community.exoscale.com/documentation/compute/network-load-balancer/"
    },
    "name" : "network-load-balancer"
  }, {
    "description" : "\nInstance Pools is an Exoscale service allowing users to provision managed groups of identical Compute instances automatically.\n\n[Read more](https://community.exoscale.com/documentation/compute/instance-pools/)",
    "externalDocs" : {
      "description" : "Read more",
      "url" : "https://community.exoscale.com/documentation/compute/instance-pools/"
    },
    "name" : "instance-pools"
  }, {
    "description" : "\nEvents form the basis of the Exoscale audit-trail, a mechanism to query past events\nperforming mutations on resources which happened on an organization",
    "externalDocs" : {
      "description" : "Read more",
      "url" : "https://www.exoscale.com/support/"
    },
    "name" : "event"
  }, {
    "description" : "\nInstances are the virtual machines at the core of the Exoscale Compute service.",
    "externalDocs" : {
      "description" : "Read more",
      "url" : "https://www.exoscale.com/compute/"
    },
    "name" : "instances"
  }, {
    "description" : "\nSnapshots provide a way to get point-in-time recovery for your Compute instance.\n\n[Read more](https://community.exoscale.com/documentation/compute/snapshots/)",
    "externalDocs" : {
      "description" : "Read more",
      "url" : "https://community.exoscale.com/documentation/compute/snapshots/"
    },
    "name" : "snapshots"
  }, {
    "description" : "\nA Zone represents an independent datacenter in which Exoscale infrastructure is deployed into.\n\n[Read more](https://www.exoscale.com/datacenters/)",
    "externalDocs" : {
      "description" : "Read more",
      "url" : "https://www.exoscale.com/datacenters/"
    },
    "name" : "zones"
  }, {
    "description" : "\nSSH Keypairs\n\n[Read more](https://community.exoscale.com/documentation/compute/ssh-keypairs/)",
    "externalDocs" : {
      "description" : "Read more",
      "url" : "https://community.exoscale.com/documentation/compute/ssh-keypairs/"
    },
    "name" : "ssh-keypair"
  }, {
    "description" : "\nOperations describe the current state of an asynchronous operation.",
    "externalDocs" : {
      "description" : "Read more",
      "url" : "https://community.exoscale.com/"
    },
    "name" : "operations"
  }, {
    "description" : "\nTemplates contain the OS and the initial setup of a Compute instance.",
    "externalDocs" : {
      "description" : "Read more",
      "url" : "https://www.exoscale.com/templates/"
    },
    "name" : "templates"
  }, {
    "description" : "\nSKS is Exoscale's scalable Kubernetes service which provides managed Kubernetes\ncontrol planes with integrated support for Exoscale instance pools ands network load\nbalancers.\n[Read more](https://www.exoscale.com/scalable-kubernetes-service/)",
    "externalDocs" : {
      "description" : "Read more",
      "url" : "https://www.exoscale.com/scalable-kubernetes-service/"
    },
    "name" : "sks"
  } ],
  "components" : {
    "schemas" : {
      "dbaas-node-state" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Name of the service node"
          },
          "progress-updates" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/dbaas-node-state-progress-update"
            },
            "description" : "Extra information regarding the progress for current state"
          },
          "role" : {
            "type" : "string",
            "enum" : [ "standby", "master", "read-replica" ],
            "description" : "Role of this node. Only returned for a subset of service types"
          },
          "state" : {
            "type" : "string",
            "enum" : [ "leaving", "running", "syncing_data", "setting_up_vm", "unknown" ],
            "description" : "Current state of the service node"
          }
        },
        "required" : [ "name", "state" ],
        "description" : "Automatic maintenance settings"
      },
      "resource" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "description" : "Resource ID"
          },
          "name" : {
            "type" : "string",
            "description" : "Resource name"
          }
        },
        "description" : "Resource"
      },
      "dbaas-kafka-topic-acl-entry" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "$ref" : "#/components/schemas/dbaas-kafka-acl-id",
            "description" : "Kafka ACL ID"
          },
          "username" : {
            "type" : "string",
            "maxLength" : 64,
            "minLength" : 1,
            "description" : "Kafka username or username pattern"
          },
          "topic" : {
            "type" : "string",
            "maxLength" : 249,
            "minLength" : 1,
            "description" : "Kafka topic name or pattern"
          },
          "permission" : {
            "type" : "string",
            "enum" : [ "admin", "read", "readwrite", "write" ],
            "description" : "Kafka permission"
          }
        },
        "required" : [ "username", "topic", "permission" ]
      },
      "dbaas-pg-pool-size" : {
        "type" : "integer",
        "format" : "int64",
        "minimum" : 1,
        "maximum" : 1000,
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false
      },
      "security-group-rule" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 1,
            "description" : "Security Group rule description"
          },
          "start-port" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 1,
            "maximum" : 65535,
            "exclusiveMinimum" : false,
            "exclusiveMaximum" : false,
            "description" : "Start port of the range"
          },
          "protocol" : {
            "type" : "string",
            "enum" : [ "tcp", "esp", "icmp", "udp", "gre", "ah", "ipip", "icmpv6" ],
            "description" : "Network protocol"
          },
          "icmp" : {
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "integer",
                "format" : "int64",
                "minimum" : -1,
                "maximum" : 254,
                "exclusiveMinimum" : false,
                "exclusiveMaximum" : false
              },
              "type" : {
                "type" : "integer",
                "format" : "int64",
                "minimum" : -1,
                "maximum" : 254,
                "exclusiveMinimum" : false,
                "exclusiveMaximum" : false
              }
            },
            "description" : "ICMP details"
          },
          "end-port" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 1,
            "maximum" : 65535,
            "exclusiveMinimum" : false,
            "exclusiveMaximum" : false,
            "description" : "End port of the range"
          },
          "security-group" : {
            "$ref" : "#/components/schemas/security-group-resource",
            "description" : "Security Group allowed"
          },
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "readOnly" : true,
            "description" : "Security Group rule ID"
          },
          "network" : {
            "type" : "string",
            "description" : "CIDR-formatted network allowed"
          },
          "flow-direction" : {
            "type" : "string",
            "enum" : [ "ingress", "egress" ],
            "description" : "Network flow direction to match"
          }
        },
        "description" : "Security Group rule"
      },
      "enum-component-route" : {
        "type" : "string",
        "enum" : [ "dynamic", "private", "public", "privatelink" ]
      },
      "dbaas-service-type" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "$ref" : "#/components/schemas/dbaas-service-type-name",
            "readOnly" : true,
            "description" : "DbaaS service name"
          },
          "available-versions" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "readOnly" : true,
            "description" : "DbaaS service available versions"
          },
          "default-version" : {
            "type" : "string",
            "readOnly" : true,
            "description" : "DbaaS service default version"
          },
          "description" : {
            "type" : "string",
            "readOnly" : true,
            "description" : "DbaaS service description"
          },
          "plans" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/dbaas-plan"
            },
            "readOnly" : true,
            "description" : "DbaaS service plans"
          }
        },
        "description" : "DBaaS service"
      },
      "private-network" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "readOnly" : true,
            "description" : "Private Network ID"
          },
          "name" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 1,
            "description" : "Private Network name"
          },
          "description" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 1,
            "description" : "Private Network description"
          },
          "netmask" : {
            "type" : "string",
            "format" : "ipv4",
            "description" : "Private Network netmask"
          },
          "start-ip" : {
            "type" : "string",
            "format" : "ipv4",
            "description" : "Private Network start IP address"
          },
          "end-ip" : {
            "type" : "string",
            "format" : "ipv4",
            "description" : "Private Network end IP address"
          },
          "leases" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/private-network-lease"
            },
            "readOnly" : true,
            "description" : "Private Network leased IP addresses"
          },
          "labels" : {
            "$ref" : "#/components/schemas/labels",
            "description" : "Private Network labels"
          }
        },
        "description" : "Private Network"
      },
      "enum-component-usage" : {
        "type" : "string",
        "enum" : [ "primary", "replica" ]
      },
      "dbaas-service-logs" : {
        "type" : "object",
        "properties" : {
          "offset" : {
            "type" : "string"
          },
          "first-log-offset" : {
            "type" : "string"
          },
          "logs" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "unit" : {
                  "type" : "string"
                },
                "time" : {
                  "type" : "string"
                },
                "message" : {
                  "type" : "string"
                },
                "node" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      },
      "instance-password" : {
        "type" : "object",
        "properties" : {
          "password" : {
            "type" : "string",
            "readOnly" : true,
            "description" : "Password"
          }
        },
        "description" : "Instance password"
      },
      "load-balancer" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "readOnly" : true,
            "description" : "Load Balancer ID"
          },
          "description" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 1,
            "description" : "Load Balancer description"
          },
          "name" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 1,
            "description" : "Load Balancer name"
          },
          "state" : {
            "type" : "string",
            "enum" : [ "creating", "migrated", "deleting", "running", "migrating", "error" ],
            "readOnly" : true,
            "description" : "Load Balancer state"
          },
          "created-at" : {
            "type" : "string",
            "format" : "date-time",
            "readOnly" : true,
            "description" : "Load Balancer creation date"
          },
          "ip" : {
            "type" : "string",
            "format" : "ipv4",
            "readOnly" : true,
            "description" : "Load Balancer public IP"
          },
          "services" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/load-balancer-service"
            },
            "description" : "Load Balancer Services"
          },
          "labels" : {
            "$ref" : "#/components/schemas/labels",
            "description" : "Load Balancer Labels"
          }
        },
        "description" : "Load Balancer"
      },
      "sks-cluster-deprecated-resource" : {
        "type" : "object",
        "additionalProperties" : {
          "type" : "string"
        }
      },
      "elastic-ip" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "readOnly" : true,
            "description" : "Elastic IP ID"
          },
          "ip" : {
            "type" : "string",
            "readOnly" : true,
            "description" : "Elastic IP address"
          },
          "addressfamily" : {
            "type" : "string",
            "enum" : [ "inet4", "inet6" ],
            "readOnly" : true,
            "description" : "Elastic IP address family"
          },
          "cidr" : {
            "type" : "string",
            "readOnly" : true,
            "description" : "Elastic IP cidr"
          },
          "description" : {
            "type" : "string",
            "maxLength" : 255,
            "description" : "Elastic IP description"
          },
          "healthcheck" : {
            "$ref" : "#/components/schemas/elastic-ip-healthcheck",
            "description" : "Elastic IP healthcheck"
          },
          "labels" : {
            "$ref" : "#/components/schemas/labels",
            "description" : "Elastic IP labels"
          }
        },
        "description" : "Elastic IP"
      },
      "domain-name" : {
        "type" : "string",
        "maxLength" : 253,
        "minLength" : 1
      },
      "access-key-resource" : {
        "type" : "object",
        "properties" : {
          "domain" : {
            "type" : "string",
            "enum" : [ "partner", "sos" ],
            "description" : "Resource domain"
          },
          "resource-type" : {
            "type" : "string",
            "enum" : [ "product", "bucket" ],
            "description" : "Resource type"
          },
          "resource-name" : {
            "type" : "string",
            "description" : "Resource name"
          }
        },
        "description" : "Access key resource"
      },
      "dns-domain" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "readOnly" : true,
            "description" : "DNS domain ID"
          },
          "created-at" : {
            "type" : "string",
            "format" : "date-time",
            "readOnly" : true,
            "description" : "DNS domain creation date"
          },
          "unicode-name" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 1,
            "description" : "DNS domain unicode name"
          }
        },
        "description" : "DNS domain"
      },
      "sks-kubeconfig-request" : {
        "type" : "object",
        "properties" : {
          "ttl" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : true,
            "description" : "Validity in seconds of the Kubeconfig user certificate (default: 30 days)"
          },
          "user" : {
            "type" : "string",
            "description" : "User name in the generated Kubeconfig. The certificate present in the Kubeconfig will also have this name set for the CN field."
          },
          "groups" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "List of roles. The certificate present in the Kubeconfig will have these roles set in the Org field."
          }
        },
        "description" : "Kubeconfig request for a SKS cluster"
      },
      "dbaas-service-notification" : {
        "type" : "object",
        "properties" : {
          "level" : {
            "type" : "string",
            "enum" : [ "warning", "notice" ],
            "description" : "Notification level"
          },
          "message" : {
            "type" : "string",
            "maxLength" : 1024,
            "minLength" : 1,
            "description" : "Human notification message"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "service_powered_off_removal", "service_end_of_life" ],
            "description" : "Notification type"
          },
          "metadata" : {
            "type" : "object",
            "description" : "Notification type"
          }
        },
        "required" : [ "level", "message", "type", "metadata" ],
        "description" : "Service notifications"
      },
      "dbaas-pg-database-name" : {
        "type" : "string",
        "maxLength" : 40,
        "minLength" : 1
      },
      "instance-type" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "readOnly" : true,
            "description" : "Instance type ID"
          },
          "size" : {
            "type" : "string",
            "enum" : [ "large", "huge", "jumbo", "medium", "mega", "small", "extra-large", "titan", "micro", "colossus", "tiny" ],
            "readOnly" : true,
            "description" : "Instance type size"
          },
          "family" : {
            "type" : "string",
            "enum" : [ "gpu3", "gpu2", "gpu", "memory", "storage", "standard", "colossus", "cpu" ],
            "readOnly" : true,
            "description" : "Instance type family"
          },
          "cpus" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : true,
            "readOnly" : true,
            "description" : "CPU count"
          },
          "gpus" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : true,
            "readOnly" : true,
            "description" : "GPU count"
          },
          "authorized" : {
            "type" : "boolean",
            "readOnly" : true,
            "description" : "Requires authorization or publicly available"
          },
          "memory" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : true,
            "readOnly" : true,
            "description" : "Available memory"
          },
          "zones" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/zone-name"
            },
            "readOnly" : true,
            "description" : "Instance Type available zones"
          }
        },
        "description" : "Compute instance type"
      },
      "load-balancer-server-status" : {
        "type" : "object",
        "properties" : {
          "public-ip" : {
            "type" : "string",
            "format" : "ipv4",
            "description" : "Backend server public IP"
          },
          "status" : {
            "type" : "string",
            "enum" : [ "failure", "success" ],
            "description" : "Status of the instance's healthcheck"
          }
        },
        "description" : "Load Balancer Service status"
      },
      "dbaas-service-mysql" : {
        "type" : "object",
        "properties" : {
          "updated-at" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "Service last update timestamp (ISO 8601)"
          },
          "node-count" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : false,
            "description" : "Number of service nodes in the active plan"
          },
          "connection-info" : {
            "type" : "object",
            "properties" : {
              "uri" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "params" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "string"
                  }
                }
              },
              "standby" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            },
            "description" : "MySQL connection information properties"
          },
          "backup-schedule" : {
            "type" : "object",
            "properties" : {
              "backup-hour" : {
                "type" : "integer",
                "format" : "int64",
                "minimum" : 0,
                "maximum" : 23,
                "exclusiveMinimum" : false,
                "exclusiveMaximum" : false,
                "description" : "The hour of day (in UTC) when backup for the service is started. New backup is only started if previous backup has already completed."
              },
              "backup-minute" : {
                "type" : "integer",
                "format" : "int64",
                "minimum" : 0,
                "maximum" : 59,
                "exclusiveMinimum" : false,
                "exclusiveMaximum" : false,
                "description" : "The minute of an hour when backup for the service is started. New backup is only started if previous backup has already completed."
              }
            },
            "description" : "Backup schedule"
          },
          "node-cpu-count" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : false,
            "description" : "Number of CPUs for each node"
          },
          "integrations" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/dbaas-integration"
            },
            "description" : "Service integrations"
          },
          "node-states" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/dbaas-node-state"
            },
            "description" : "State of individual service nodes"
          },
          "name" : {
            "$ref" : "#/components/schemas/dbaas-service-name",
            "description" : "Service name"
          },
          "type" : {
            "$ref" : "#/components/schemas/dbaas-service-type-name",
            "description" : "Service type code"
          },
          "state" : {
            "$ref" : "#/components/schemas/enum-service-state",
            "description" : "State of the service"
          },
          "ip-filter" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "Allowed CIDR address blocks for incoming connections"
          },
          "backups" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/dbaas-service-backup"
            },
            "description" : "List of backups for the service"
          },
          "termination-protection" : {
            "type" : "boolean",
            "description" : "Service is protected against termination and powering off"
          },
          "notifications" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/dbaas-service-notification"
            },
            "description" : "Service notifications"
          },
          "components" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "component" : {
                  "type" : "string",
                  "description" : "Service component name"
                },
                "host" : {
                  "type" : "string",
                  "description" : "DNS name for connecting to the service component"
                },
                "port" : {
                  "type" : "integer",
                  "format" : "int64",
                  "minimum" : 0,
                  "maximum" : 65535,
                  "exclusiveMinimum" : false,
                  "exclusiveMaximum" : false,
                  "description" : "Port number for connecting to the service component"
                },
                "route" : {
                  "$ref" : "#/components/schemas/enum-component-route",
                  "description" : "Network access route"
                },
                "usage" : {
                  "$ref" : "#/components/schemas/enum-component-usage",
                  "description" : "DNS usage name"
                }
              },
              "required" : [ "component", "host", "port", "route", "usage" ]
            },
            "description" : "Service component information objects"
          },
          "mysql-settings" : {
            "type" : "object",
            "description" : "MySQL-specific settings"
          },
          "maintenance" : {
            "$ref" : "#/components/schemas/dbaas-service-maintenance",
            "description" : "Automatic maintenance settings"
          },
          "disk-size" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : false,
            "description" : "TODO UNIT disk space for data storage"
          },
          "node-memory" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : false,
            "description" : "TODO UNIT of memory for each node"
          },
          "uri" : {
            "type" : "string",
            "description" : "URI for connecting to the service (may be absent)"
          },
          "uri-params" : {
            "type" : "object",
            "description" : "service_uri parameterized into key-value pairs"
          },
          "version" : {
            "type" : "string",
            "description" : "MySQL version"
          },
          "created-at" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "Service creation timestamp (ISO 8601)"
          },
          "plan" : {
            "type" : "string",
            "description" : "Subscription plan"
          },
          "users" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "type" : {
                  "type" : "string"
                },
                "username" : {
                  "type" : "string"
                },
                "password" : {
                  "type" : "string"
                },
                "authentication" : {
                  "type" : "string"
                }
              }
            },
            "description" : "List of service users"
          }
        },
        "required" : [ "name", "plan", "type" ]
      },
      "dbaas-service-kafka" : {
        "type" : "object",
        "properties" : {
          "updated-at" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "Service last update timestamp (ISO 8601)"
          },
          "authentication-methods" : {
            "type" : "object",
            "properties" : {
              "certificate" : {
                "type" : "boolean",
                "description" : "Whether certificate/SSL authentication is enabled"
              },
              "sasl" : {
                "type" : "boolean",
                "description" : "Whether SASL authentication is enabled"
              }
            },
            "description" : "Kafka authentication methods"
          },
          "node-count" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : false,
            "description" : "Number of service nodes in the active plan"
          },
          "connection-info" : {
            "type" : "object",
            "properties" : {
              "nodes" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "access-cert" : {
                "type" : "string"
              },
              "access-key" : {
                "type" : "string"
              },
              "connect-uri" : {
                "type" : "string"
              },
              "rest-uri" : {
                "type" : "string"
              },
              "registry-uri" : {
                "type" : "string"
              }
            },
            "description" : "Kafka connection information properties"
          },
          "node-cpu-count" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : false,
            "description" : "Number of CPUs for each node"
          },
          "kafka-rest-enabled" : {
            "type" : "boolean",
            "description" : "Whether Kafka REST is enabled"
          },
          "integrations" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/dbaas-integration"
            },
            "description" : "Service integrations"
          },
          "node-states" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/dbaas-node-state"
            },
            "description" : "State of individual service nodes"
          },
          "name" : {
            "$ref" : "#/components/schemas/dbaas-service-name",
            "description" : "Service name"
          },
          "kafka-connect-enabled" : {
            "type" : "boolean",
            "description" : "Whether Kafka Connect is enabled"
          },
          "type" : {
            "$ref" : "#/components/schemas/dbaas-service-type-name",
            "description" : "Service type code"
          },
          "state" : {
            "$ref" : "#/components/schemas/enum-service-state",
            "description" : "State of the service"
          },
          "ip-filter" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'"
          },
          "schema-registry-settings" : {
            "type" : "object",
            "description" : "Schema Registry configuration"
          },
          "backups" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/dbaas-service-backup"
            },
            "description" : "List of backups for the service"
          },
          "kafka-rest-settings" : {
            "type" : "object",
            "description" : "Kafka REST configuration"
          },
          "termination-protection" : {
            "type" : "boolean",
            "description" : "Service is protected against termination and powering off"
          },
          "notifications" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/dbaas-service-notification"
            },
            "description" : "Service notifications"
          },
          "kafka-connect-settings" : {
            "type" : "object",
            "description" : "Kafka Connect configuration values"
          },
          "components" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "component" : {
                  "type" : "string",
                  "description" : "Service component name"
                },
                "host" : {
                  "type" : "string",
                  "description" : "DNS name for connecting to the service component"
                },
                "kafka-authentication-method" : {
                  "$ref" : "#/components/schemas/enum-kafka-auth-method",
                  "description" : "Kafka authentication method. This is a value specific to the 'kafka' service component"
                },
                "port" : {
                  "type" : "integer",
                  "format" : "int64",
                  "minimum" : 0,
                  "maximum" : 65535,
                  "exclusiveMinimum" : false,
                  "exclusiveMaximum" : false,
                  "description" : "Port number for connecting to the service component"
                },
                "route" : {
                  "$ref" : "#/components/schemas/enum-component-route",
                  "description" : "Network access route"
                },
                "usage" : {
                  "$ref" : "#/components/schemas/enum-component-usage",
                  "description" : "DNS usage name"
                }
              },
              "required" : [ "component", "host", "port", "route", "usage" ]
            },
            "description" : "Service component information objects"
          },
          "maintenance" : {
            "$ref" : "#/components/schemas/dbaas-service-maintenance",
            "description" : "Automatic maintenance settings"
          },
          "kafka-settings" : {
            "type" : "object",
            "description" : "Kafka-specific settings"
          },
          "disk-size" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : false,
            "description" : "TODO UNIT disk space for data storage"
          },
          "node-memory" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : false,
            "description" : "TODO UNIT of memory for each node"
          },
          "uri" : {
            "type" : "string",
            "description" : "URI for connecting to the service (may be absent)"
          },
          "uri-params" : {
            "type" : "object",
            "description" : "service_uri parameterized into key-value pairs"
          },
          "schema-registry-enabled" : {
            "type" : "boolean",
            "description" : "Whether Schema-Registry is enabled"
          },
          "version" : {
            "type" : "string",
            "description" : "Kafka version"
          },
          "created-at" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "Service creation timestamp (ISO 8601)"
          },
          "plan" : {
            "type" : "string",
            "description" : "Subscription plan"
          },
          "users" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "type" : {
                  "type" : "string"
                },
                "username" : {
                  "type" : "string"
                },
                "password" : {
                  "type" : "string"
                },
                "access-cert" : {
                  "type" : "string"
                },
                "access-cert-expiry" : {
                  "type" : "string",
                  "format" : "date-time"
                },
                "access-key" : {
                  "type" : "string"
                }
              }
            },
            "description" : "List of service users"
          }
        },
        "required" : [ "name", "plan", "type" ]
      },
      "dbaas-user-password" : {
        "type" : "string",
        "maxLength" : 256,
        "minLength" : 8
      },
      "dbaas-service-connection-pools" : {
        "type" : "object",
        "properties" : {
          "connection-uri" : {
            "type" : "string",
            "description" : "Connection URI for the DB pool"
          },
          "database" : {
            "type" : "string",
            "maxLength" : 40,
            "minLength" : 1,
            "description" : "Service database name"
          },
          "pool-mode" : {
            "type" : "string",
            "enum" : [ "transaction", "statement", "session" ],
            "description" : "PGBouncer pool mode"
          },
          "pool-name" : {
            "type" : "string",
            "maxLength" : 60,
            "minLength" : 1,
            "description" : "Connection pool name"
          },
          "pool-size" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 1,
            "maximum" : 1000,
            "exclusiveMinimum" : false,
            "exclusiveMaximum" : false,
            "description" : "Size of PGBouncer's PostgreSQL side connection pool"
          },
          "username" : {
            "type" : "string",
            "maxLength" : 64,
            "minLength" : 1,
            "description" : "Pool username"
          }
        },
        "required" : [ "connection-uri", "database", "pool-mode", "pool-name", "pool-size", "username" ],
        "description" : "PostgreSQL PGBouncer connection pools"
      },
      "quota" : {
        "type" : "object",
        "properties" : {
          "resource" : {
            "type" : "string",
            "description" : "Resource Name"
          },
          "usage" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Resource Usage"
          },
          "limit" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Resource Limit. -1 for Unlimited"
          }
        },
        "description" : "Organization Quota"
      },
      "dbaas-pg-pool-name" : {
        "type" : "string",
        "maxLength" : 63,
        "minLength" : 1
      },
      "private-network-lease" : {
        "type" : "object",
        "properties" : {
          "ip" : {
            "type" : "string",
            "format" : "ipv4",
            "readOnly" : true,
            "description" : "Private Network IP address"
          },
          "instance-id" : {
            "type" : "string",
            "format" : "uuid",
            "readOnly" : true,
            "description" : "Attached instance ID"
          }
        },
        "description" : "Private Network leased IP address"
      },
      "sks-nodepool-taint" : {
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 1,
            "description" : "Nodepool taint value"
          },
          "effect" : {
            "type" : "string",
            "enum" : [ "NoExecute", "NoSchedule", "PreferNoSchedule" ],
            "description" : "Nodepool taint effect"
          }
        },
        "required" : [ "value", "effect" ],
        "description" : "Nodepool taint"
      },
      "deploy-target" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "description" : "Deploy Target ID"
          },
          "name" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 1,
            "description" : "Deploy Target name"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "edge", "dedicated" ],
            "description" : "Deploy Target type"
          },
          "description" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 1,
            "description" : "Deploy Target description"
          }
        },
        "required" : [ "id" ],
        "description" : "Deploy target"
      },
      "snapshot" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "readOnly" : true,
            "description" : "Snapshot ID"
          },
          "name" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 1,
            "description" : "Snapshot name"
          },
          "created-at" : {
            "type" : "string",
            "format" : "date-time",
            "readOnly" : true,
            "description" : "Snapshot creation date"
          },
          "state" : {
            "type" : "string",
            "enum" : [ "snapshotting", "deleted", "exporting", "ready", "deleting", "error", "exported" ],
            "description" : "Snapshot state"
          },
          "size" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 10,
            "maximum" : 50000,
            "exclusiveMinimum" : false,
            "exclusiveMaximum" : false,
            "readOnly" : true,
            "description" : "Snapshot size in GB"
          },
          "export" : {
            "type" : "object",
            "properties" : {
              "presigned-url" : {
                "type" : "string",
                "description" : "Exported snapshot disk file pre-signed URL"
              },
              "md5sum" : {
                "type" : "string",
                "description" : "Exported snapshot disk file MD5 checksum"
              }
            },
            "description" : "Exported snapshot information"
          },
          "instance" : {
            "$ref" : "#/components/schemas/instance",
            "description" : "Compute Instance snapshotted"
          }
        },
        "description" : "Snapshot"
      },
      "event" : {
        "type" : "object",
        "properties" : {
          "request-id" : {
            "type" : "string",
            "description" : "Operation unique identifier"
          },
          "zone" : {
            "type" : "string",
            "description" : "Operation targeted zone"
          },
          "remote-addr" : {
            "type" : "string",
            "description" : "Client IP address"
          },
          "get-params" : {
            "type" : "object",
            "description" : "Query string parameters (free form map)"
          },
          "body-params" : {
            "type" : "object",
            "description" : "Body parameters (free form map)"
          },
          "status" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : true,
            "description" : "Operation HTTP status"
          },
          "uri" : {
            "type" : "string",
            "description" : "Operation request URI"
          },
          "elapsed-ms" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : true,
            "description" : "Operation processing time"
          },
          "timestamp" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "Time at which the event happened, millisecond resolution"
          },
          "path-params" : {
            "type" : "object",
            "description" : "URI path parameters (free form map)"
          },
          "handler" : {
            "type" : "string",
            "description" : "Operation handler name"
          },
          "message" : {
            "type" : "string",
            "description" : "Operation message"
          }
        },
        "description" : "A notable Mutation Event which happened on the infrastructure"
      },
      "iam-api-key" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "IAM API Key name"
          },
          "key" : {
            "type" : "string",
            "description" : "IAM API Key"
          },
          "role-id" : {
            "type" : "string",
            "format" : "uuid",
            "description" : "IAM API Key Role ID"
          }
        },
        "description" : "IAM API Key"
      },
      "public-ip-assignment" : {
        "type" : "string",
        "enum" : [ "inet4", "dual", "none" ]
      },
      "elastic-ip-healthcheck" : {
        "type" : "object",
        "properties" : {
          "strikes-ok" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 1,
            "maximum" : 20,
            "exclusiveMinimum" : false,
            "exclusiveMaximum" : false,
            "description" : "Number of attempts before considering the target healthy (default: 2)"
          },
          "tls-skip-verify" : {
            "type" : "boolean",
            "description" : "Skip TLS verification"
          },
          "tls-sni" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 1,
            "description" : "An optional domain or subdomain to check TLS against"
          },
          "strikes-fail" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 1,
            "maximum" : 20,
            "exclusiveMinimum" : false,
            "exclusiveMaximum" : false,
            "description" : "Number of attempts before considering the target unhealthy (default: 3)"
          },
          "mode" : {
            "type" : "string",
            "enum" : [ "tcp", "http", "https" ],
            "description" : "Health check mode"
          },
          "port" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 1,
            "maximum" : 65535,
            "exclusiveMinimum" : false,
            "exclusiveMaximum" : false,
            "description" : "Health check port"
          },
          "uri" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 1,
            "description" : "An endpoint to use for the health check, for example '/status'"
          },
          "interval" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 5,
            "maximum" : 300,
            "exclusiveMinimum" : false,
            "exclusiveMaximum" : false,
            "description" : "Interval between the checks in seconds (default: 10)"
          },
          "timeout" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 2,
            "maximum" : 60,
            "exclusiveMinimum" : false,
            "exclusiveMaximum" : false,
            "description" : "Health check timeout value in seconds (default: 2)"
          }
        },
        "required" : [ "mode", "port" ],
        "description" : "Elastic IP address healthcheck"
      },
      "dbaas-kafka-schema-registry-acl-entry" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "$ref" : "#/components/schemas/dbaas-kafka-acl-id",
            "description" : "Kafka ACL ID"
          },
          "username" : {
            "type" : "string",
            "maxLength" : 64,
            "minLength" : 1,
            "description" : "Kafka username or username pattern"
          },
          "resource" : {
            "type" : "string",
            "maxLength" : 249,
            "minLength" : 1,
            "description" : "Kafka Schema Registry name or pattern"
          },
          "permission" : {
            "type" : "string",
            "enum" : [ "schema_registry_read", "schema_registry_write" ],
            "description" : "Kafka Schema Registry permission"
          }
        },
        "required" : [ "username", "resource", "permission" ]
      },
      "enum-mysql-authentication-plugin" : {
        "type" : "string",
        "enum" : [ "caching_sha2_password", "mysql_native_password" ]
      },
      "load-balancer-service-healthcheck" : {
        "type" : "object",
        "properties" : {
          "mode" : {
            "type" : "string",
            "enum" : [ "tcp", "http", "https" ],
            "description" : "Healthcheck mode"
          },
          "interval" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 5,
            "maximum" : 300,
            "exclusiveMinimum" : false,
            "exclusiveMaximum" : false,
            "description" : "Healthcheck interval (default: 10)"
          },
          "uri" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 1,
            "description" : "Healthcheck URI"
          },
          "port" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 1,
            "maximum" : 65535,
            "exclusiveMinimum" : false,
            "exclusiveMaximum" : false,
            "description" : "Healthcheck port"
          },
          "timeout" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 2,
            "maximum" : 60,
            "exclusiveMinimum" : false,
            "exclusiveMaximum" : false,
            "description" : "Healthcheck timeout value (default: 2)"
          },
          "retries" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 1,
            "maximum" : 20,
            "exclusiveMinimum" : false,
            "exclusiveMaximum" : false,
            "description" : "Number of retries before considering a Service failed"
          },
          "tls-sni" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 1,
            "description" : "SNI domain for HTTPS healthchecks"
          }
        },
        "description" : "Load Balancer Service healthcheck"
      },
      "access-key-operation" : {
        "type" : "object",
        "properties" : {
          "operation" : {
            "type" : "string",
            "description" : "Name of the operation"
          },
          "tags" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "Tags associated with the operation"
          }
        },
        "description" : "Access key operation"
      },
      "ssh-key" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 1,
            "description" : "SSH key name"
          },
          "fingerprint" : {
            "type" : "string",
            "readOnly" : true,
            "description" : "SSH key fingerprint"
          }
        },
        "description" : "SSH key"
      },
      "load-balancer-service" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 1,
            "description" : "Load Balancer Service description"
          },
          "protocol" : {
            "type" : "string",
            "enum" : [ "tcp", "udp" ],
            "description" : "Network traffic protocol"
          },
          "name" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 1,
            "description" : "Load Balancer Service name"
          },
          "state" : {
            "type" : "string",
            "enum" : [ "creating", "deleting", "running", "updating", "error" ],
            "readOnly" : true,
            "description" : "Load Balancer Service state"
          },
          "target-port" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : true,
            "description" : "Port on which the network traffic will be forwarded to on the receiving instance"
          },
          "port" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : true,
            "description" : "Port exposed on the Load Balancer's public IP"
          },
          "instance-pool" : {
            "$ref" : "#/components/schemas/instance-pool",
            "description" : "Instance Pool to forward network traffic to"
          },
          "strategy" : {
            "type" : "string",
            "enum" : [ "round-robin", "source-hash" ],
            "description" : "Load balancing strategy"
          },
          "healthcheck" : {
            "$ref" : "#/components/schemas/load-balancer-service-healthcheck",
            "description" : "Healthcheck configuration"
          },
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "readOnly" : true,
            "description" : "Load Balancer Service ID"
          },
          "healthcheck-status" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/load-balancer-server-status"
            },
            "readOnly" : true,
            "description" : "Healthcheck status per backend server"
          }
        },
        "description" : "Load Balancer Service"
      },
      "access-key" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "IAM Access Key name"
          },
          "key" : {
            "type" : "string",
            "description" : "IAM Access Key"
          },
          "secret" : {
            "type" : "string",
            "readOnly" : true,
            "description" : "IAM Access Key Secret"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "restricted", "unrestricted" ],
            "readOnly" : true,
            "description" : "IAM Access Key type"
          },
          "version" : {
            "type" : "string",
            "enum" : [ "v2", "v1" ],
            "description" : "IAM Access Key version"
          },
          "tags" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "IAM Access Key tags"
          },
          "operations" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "IAM Access Key operations"
          },
          "resources" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/access-key-resource"
            },
            "description" : "IAM Access Key Resources"
          }
        },
        "description" : "IAM Access Key"
      },
      "dbaas-service-update" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "Description of the update"
          },
          "deadline" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "Deadline for installing the update"
          },
          "start-after" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "The earliest time the update will be automatically applied"
          },
          "start-at" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "The time when the update will be automatically applied"
          }
        },
        "description" : "Update waiting to be installed"
      },
      "enum-kafka-auth-method" : {
        "type" : "string",
        "enum" : [ "certificate", "sasl" ]
      },
      "dbaas-plan" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "readOnly" : true,
            "description" : "DBaaS plan name"
          },
          "node-count" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : true,
            "readOnly" : true,
            "description" : "DBaaS plan node count"
          },
          "node-cpu-count" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : true,
            "readOnly" : true,
            "description" : "DBaaS plan CPU count per node"
          },
          "disk-space" : {
            "type" : "integer",
            "format" : "int64",
            "readOnly" : true,
            "description" : "DBaaS plan disk space"
          },
          "node-memory" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : true,
            "readOnly" : true,
            "description" : "DBaaS plan memory count per node"
          },
          "max-memory-percent" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : true,
            "readOnly" : true,
            "description" : "DBaaS plan max memory allocated percentage"
          },
          "backup-config" : {
            "$ref" : "#/components/schemas/dbaas-backup-config",
            "readOnly" : true,
            "description" : "DBaaS plan backup config"
          },
          "authorized" : {
            "type" : "boolean",
            "readOnly" : true,
            "description" : "Requires authorization or publicly available"
          }
        },
        "description" : "DBaaS plan"
      },
      "labels" : {
        "type" : "object",
        "additionalProperties" : {
          "type" : "string"
        }
      },
      "dbaas-service-maintenance" : {
        "type" : "object",
        "properties" : {
          "dow" : {
            "type" : "string",
            "enum" : [ "saturday", "tuesday", "never", "wednesday", "sunday", "friday", "monday", "thursday" ],
            "description" : "Day of week for installing updates"
          },
          "time" : {
            "type" : "string",
            "maxLength" : 8,
            "minLength" : 8,
            "description" : "Time for installing updates, UTC"
          },
          "updates" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/dbaas-service-update"
            },
            "description" : "List of updates waiting to be installed"
          }
        },
        "required" : [ "dow", "time", "updates" ],
        "description" : "Automatic maintenance settings"
      },
      "enum-service-state" : {
        "type" : "string",
        "enum" : [ "running", "rebuilding", "rebalancing", "poweroff" ]
      },
      "dbaas-kafka-acls" : {
        "type" : "object",
        "properties" : {
          "topic-acl" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/dbaas-kafka-topic-acl-entry"
            }
          },
          "schema-registry-acl" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/dbaas-kafka-schema-registry-acl-entry"
            }
          }
        }
      },
      "dbaas-service-pg" : {
        "type" : "object",
        "properties" : {
          "pgbouncer-settings" : {
            "type" : "object",
            "description" : "PGBouncer connection pooling settings"
          },
          "updated-at" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "Service last update timestamp (ISO 8601)"
          },
          "node-count" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : false,
            "description" : "Number of service nodes in the active plan"
          },
          "connection-info" : {
            "type" : "object",
            "properties" : {
              "uri" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "params" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "string"
                  }
                }
              },
              "standby" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "syncing" : {
                "type" : "array",
                "items" : {
                  "type" : "object"
                }
              }
            },
            "description" : "PG connection information properties"
          },
          "backup-schedule" : {
            "type" : "object",
            "properties" : {
              "backup-hour" : {
                "type" : "integer",
                "format" : "int64",
                "minimum" : 0,
                "maximum" : 23,
                "exclusiveMinimum" : false,
                "exclusiveMaximum" : false,
                "description" : "The hour of day (in UTC) when backup for the service is started. New backup is only started if previous backup has already completed."
              },
              "backup-minute" : {
                "type" : "integer",
                "format" : "int64",
                "minimum" : 0,
                "maximum" : 59,
                "exclusiveMinimum" : false,
                "exclusiveMaximum" : false,
                "description" : "The minute of an hour when backup for the service is started. New backup is only started if previous backup has already completed."
              }
            },
            "description" : "Backup schedule"
          },
          "node-cpu-count" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : false,
            "description" : "Number of CPUs for each node"
          },
          "integrations" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/dbaas-integration"
            },
            "description" : "Service integrations"
          },
          "node-states" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/dbaas-node-state"
            },
            "description" : "State of individual service nodes"
          },
          "name" : {
            "$ref" : "#/components/schemas/dbaas-service-name",
            "description" : "Service name"
          },
          "connection-pools" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "connection-uri" : {
                  "type" : "string",
                  "description" : "Connection URI for the DB pool"
                },
                "database" : {
                  "$ref" : "#/components/schemas/dbaas-pg-database-name",
                  "description" : "Service database name"
                },
                "mode" : {
                  "$ref" : "#/components/schemas/enum-pg-pool-mode",
                  "description" : "PGBouncer pool mode"
                },
                "name" : {
                  "$ref" : "#/components/schemas/dbaas-pg-pool-name",
                  "description" : "Connection pool name"
                },
                "size" : {
                  "$ref" : "#/components/schemas/dbaas-pg-pool-size",
                  "description" : "Size of PGBouncer's PostgreSQL side connection pool"
                },
                "username" : {
                  "$ref" : "#/components/schemas/dbaas-pg-pool-username",
                  "description" : "Pool username"
                }
              },
              "required" : [ "connection-uri", "database", "mode", "name", "size", "username" ]
            },
            "description" : "PostgreSQL PGBouncer connection pools"
          },
          "type" : {
            "$ref" : "#/components/schemas/dbaas-service-type-name",
            "description" : "Service type code"
          },
          "state" : {
            "$ref" : "#/components/schemas/enum-service-state",
            "description" : "State of the service"
          },
          "timescaledb-settings" : {
            "type" : "object",
            "description" : "TimescaleDB extension configuration values"
          },
          "databases" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/dbaas-pg-database-name"
            },
            "description" : "List of PostgreSQL databases"
          },
          "ip-filter" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "Allowed CIDR address blocks for incoming connections"
          },
          "backups" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/dbaas-service-backup"
            },
            "description" : "List of backups for the service"
          },
          "termination-protection" : {
            "type" : "boolean",
            "description" : "Service is protected against termination and powering off"
          },
          "notifications" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/dbaas-service-notification"
            },
            "description" : "Service notifications"
          },
          "components" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "component" : {
                  "type" : "string",
                  "description" : "Service component name"
                },
                "host" : {
                  "type" : "string",
                  "description" : "DNS name for connecting to the service component"
                },
                "port" : {
                  "type" : "integer",
                  "format" : "int64",
                  "minimum" : 0,
                  "maximum" : 65535,
                  "exclusiveMinimum" : false,
                  "exclusiveMaximum" : false,
                  "description" : "Port number for connecting to the service component"
                },
                "route" : {
                  "$ref" : "#/components/schemas/enum-component-route",
                  "description" : "Network access route"
                },
                "usage" : {
                  "$ref" : "#/components/schemas/enum-component-usage",
                  "description" : "DNS usage name"
                }
              },
              "required" : [ "component", "host", "port", "route", "usage" ]
            },
            "description" : "Service component information objects"
          },
          "synchronous-replication" : {
            "$ref" : "#/components/schemas/enum-pg-synchronous-replication",
            "description" : "Synchronous replication type. Note that the service plan also needs to support synchronous replication."
          },
          "pglookout-settings" : {
            "type" : "object",
            "description" : "PGLookout settings"
          },
          "maintenance" : {
            "$ref" : "#/components/schemas/dbaas-service-maintenance",
            "description" : "Automatic maintenance settings"
          },
          "disk-size" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : false,
            "description" : "TODO UNIT disk space for data storage"
          },
          "node-memory" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : false,
            "description" : "TODO UNIT of memory for each node"
          },
          "uri" : {
            "type" : "string",
            "description" : "URI for connecting to the service (may be absent)"
          },
          "uri-params" : {
            "type" : "object",
            "description" : "service_uri parameterized into key-value pairs"
          },
          "version" : {
            "type" : "string",
            "description" : "PostgreSQL version"
          },
          "created-at" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "Service creation timestamp (ISO 8601)"
          },
          "plan" : {
            "type" : "string",
            "description" : "Subscription plan"
          },
          "work-mem" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 1,
            "maximum" : 1024,
            "exclusiveMinimum" : false,
            "exclusiveMaximum" : false,
            "description" : "Sets the maximum amount of memory to be used by a query operation (such as a sort or hash table) before writing to temporary disk files, in MB. Default is 1MB + 0.075% of total RAM (up to 32MB)."
          },
          "shared-buffers-percentage" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 20,
            "maximum" : 60,
            "exclusiveMinimum" : false,
            "exclusiveMaximum" : false,
            "description" : "Percentage of total RAM that the database server uses for shared memory buffers. Valid range is 20-60 (float), which corresponds to 20% - 60%. This setting adjusts the shared_buffers configuration value."
          },
          "pg-settings" : {
            "type" : "object",
            "description" : "PostgreSQL-specific settings"
          },
          "max-connections" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : true,
            "description" : "Maximum number of connections allowed to an instance"
          },
          "users" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "type" : {
                  "type" : "string",
                  "description" : "Account type"
                },
                "username" : {
                  "type" : "string",
                  "description" : "Account username"
                },
                "password" : {
                  "type" : "string",
                  "description" : "Account password. A missing field indicates a user overridden password."
                },
                "allow-replication" : {
                  "type" : "boolean"
                }
              },
              "required" : [ "type", "username" ],
              "description" : "List of service users"
            },
            "description" : "List of service users"
          }
        },
        "required" : [ "name", "plan", "type" ]
      },
      "dbaas-integration" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "Description of the integration"
          },
          "settings" : {
            "type" : "object",
            "description" : "Integration settings"
          },
          "type" : {
            "type" : "string",
            "description" : "Integration type"
          },
          "is-enabled" : {
            "type" : "boolean",
            "description" : "Whether the integration is enabled or not"
          },
          "source" : {
            "type" : "string",
            "description" : "Source service name"
          },
          "is-active" : {
            "type" : "boolean",
            "description" : "Whether the integration is active or not"
          },
          "status" : {
            "type" : "string",
            "description" : "Integration status"
          },
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "description" : "Integration id"
          },
          "dest" : {
            "type" : "string",
            "description" : "Destination service name"
          }
        }
      },
      "sks-oidc" : {
        "type" : "object",
        "properties" : {
          "client-id" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 1,
            "description" : "OpenID client ID"
          },
          "issuer-url" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 1,
            "description" : "OpenID provider URL"
          },
          "username-claim" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 1,
            "description" : "JWT claim to use as the user name"
          },
          "username-prefix" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 1,
            "description" : "Prefix prepended to username claims"
          },
          "groups-claim" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 1,
            "description" : "JWT claim to use as the user's group"
          },
          "groups-prefix" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 1,
            "description" : "Prefix prepended to group claims"
          },
          "required-claim" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "A key value map that describes a required claim in the ID Token"
          }
        },
        "required" : [ "client-id", "issuer-url" ],
        "description" : "SKS Cluster OpenID config map"
      },
      "operation" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "readOnly" : true,
            "description" : "Operation ID"
          },
          "reason" : {
            "type" : "string",
            "enum" : [ "incorrect", "unknown", "unavailable", "forbidden", "busy", "fault", "partial", "not-found", "interrupted", "unsupported", "conflict" ],
            "readOnly" : true,
            "description" : "Operation failure reason"
          },
          "reference" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "format" : "uuid",
                "description" : "Reference ID"
              },
              "link" : {
                "type" : "string",
                "readOnly" : true,
                "description" : "Link to the referenced resource"
              },
              "command" : {
                "type" : "string",
                "description" : "Command name"
              }
            },
            "description" : "Related resource reference",
            "readOnly" : true
          },
          "message" : {
            "type" : "string",
            "readOnly" : true,
            "description" : "Operation message"
          },
          "state" : {
            "type" : "string",
            "enum" : [ "failure", "pending", "success", "timeout" ],
            "readOnly" : true,
            "description" : "Operation status"
          }
        },
        "description" : "Operation"
      },
      "iam-api-key-created" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "IAM API Key name"
          },
          "key" : {
            "type" : "string",
            "description" : "IAM API Key"
          },
          "secret" : {
            "type" : "string",
            "readOnly" : true,
            "description" : "IAM API Key Secret"
          },
          "role-id" : {
            "type" : "string",
            "format" : "uuid",
            "description" : "IAM API Key Role ID"
          }
        },
        "description" : "IAM API Key"
      },
      "iam-policy" : {
        "type" : "object",
        "properties" : {
          "default-service-strategy" : {
            "type" : "string",
            "enum" : [ "allow", "deny" ],
            "description" : "IAM default service strategy"
          },
          "services" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/iam-service-policy"
            },
            "description" : "IAM services"
          }
        },
        "required" : [ "default-service-strategy", "services" ],
        "description" : "Policy"
      },
      "reverse-dns-record" : {
        "type" : "object",
        "properties" : {
          "domain-name" : {
            "$ref" : "#/components/schemas/domain-name"
          }
        }
      },
      "security-group-resource" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "readOnly" : true,
            "description" : "Security Group ID"
          },
          "name" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 1,
            "description" : "Security Group name"
          },
          "visibility" : {
            "type" : "string",
            "enum" : [ "private", "public" ],
            "description" : "Whether this points to a public security group. This is only valid when in the context of\n                   a rule addition which uses a public security group as a source or destination."
          }
        },
        "description" : "Security Group"
      },
      "dbaas-migration-status" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "string",
            "description" : "Error message in case that migration has failed"
          },
          "master-last-io-seconds-ago" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Redis only: how many seconds since last I/O with redis master"
          },
          "master-link-status" : {
            "$ref" : "#/components/schemas/enum-master-link-status",
            "description" : "Redis only: replication master link status"
          },
          "method" : {
            "type" : "string",
            "description" : "Migration method. Empty in case of multiple methods or error"
          },
          "status" : {
            "type" : "string",
            "description" : "Migration status"
          },
          "details" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "dbname" : {
                  "type" : "string",
                  "description" : "Migrated db name (PG) or number (Redis)"
                },
                "error" : {
                  "type" : "string",
                  "description" : "Error message in case that migration has failed"
                },
                "method" : {
                  "type" : "string",
                  "description" : "Migration method"
                },
                "status" : {
                  "$ref" : "#/components/schemas/enum-migration-status",
                  "description" : "Migration status"
                }
              }
            },
            "description" : "Migration status per database"
          }
        }
      },
      "enum-pg-pool-mode" : {
        "type" : "string",
        "enum" : [ "transaction", "statement", "session" ]
      },
      "sos-bucket-usage" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "SOS Bucket name"
          },
          "created-at" : {
            "type" : "string",
            "format" : "date-time",
            "readOnly" : true,
            "description" : "SOS Bucket creation date"
          },
          "zone-name" : {
            "$ref" : "#/components/schemas/zone-name",
            "readOnly" : true,
            "description" : "SOS Bucket zone"
          },
          "size" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : false,
            "readOnly" : true,
            "description" : "SOS Bucket size in B"
          }
        },
        "description" : "SOS Bucket usage"
      },
      "instance" : {
        "type" : "object",
        "properties" : {
          "anti-affinity-groups" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/anti-affinity-group"
            },
            "description" : "Instance Anti-affinity Groups"
          },
          "public-ip-assignment" : {
            "$ref" : "#/components/schemas/public-ip-assignment",
            "description" : "Instance public IP assignment"
          },
          "labels" : {
            "$ref" : "#/components/schemas/labels",
            "description" : "Instance Labels"
          },
          "security-groups" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/security-group"
            },
            "description" : "Instance Security Groups"
          },
          "elastic-ips" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/elastic-ip"
            },
            "description" : "Instance Elastic IPs"
          },
          "name" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 1,
            "description" : "Instance name"
          },
          "instance-type" : {
            "$ref" : "#/components/schemas/instance-type",
            "description" : "Instance Type"
          },
          "private-networks" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/private-network"
            },
            "description" : "Instance Private Networks"
          },
          "template" : {
            "$ref" : "#/components/schemas/template",
            "description" : "Instance Template"
          },
          "state" : {
            "type" : "string",
            "enum" : [ "expunging", "starting", "destroying", "running", "stopping", "stopped", "migrating", "error", "destroyed" ],
            "readOnly" : true,
            "description" : "Instance state"
          },
          "ssh-key" : {
            "$ref" : "#/components/schemas/ssh-key",
            "description" : "Instance SSH Key"
          },
          "user-data" : {
            "type" : "string",
            "minLength" : 1,
            "description" : "Instance Cloud-init user-data (base64 encoded)"
          },
          "manager" : {
            "$ref" : "#/components/schemas/manager",
            "readOnly" : true,
            "description" : "Instance manager"
          },
          "deploy-target" : {
            "$ref" : "#/components/schemas/deploy-target",
            "description" : "Instance Deploy Target"
          },
          "ipv6-address" : {
            "type" : "string",
            "readOnly" : true,
            "description" : "Instance IPv6 address"
          },
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "readOnly" : true,
            "description" : "Instance ID"
          },
          "snapshots" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/snapshot"
            },
            "description" : "Instance Snapshots"
          },
          "disk-size" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 10,
            "maximum" : 50000,
            "exclusiveMinimum" : false,
            "exclusiveMaximum" : false,
            "description" : "Instance disk size in GB"
          },
          "ssh-keys" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ssh-key"
            },
            "description" : "Instance SSH Keys"
          },
          "created-at" : {
            "type" : "string",
            "format" : "date-time",
            "readOnly" : true,
            "description" : "Instance creation date"
          },
          "public-ip" : {
            "type" : "string",
            "format" : "ipv4",
            "readOnly" : true,
            "description" : "Instance public IPv4 address"
          }
        },
        "description" : "Instance"
      },
      "dbaas-service-integration" : {
        "type" : "object",
        "properties" : {
          "integration-status" : {
            "type" : "object",
            "description" : "Integration status"
          },
          "description" : {
            "type" : "string",
            "description" : "Description of the integration"
          },
          "source-service-type" : {
            "$ref" : "#/components/schemas/dbaas-service-type-name",
            "description" : "Service type code"
          },
          "source-endpoint" : {
            "type" : "string",
            "description" : "Source endpoint name"
          },
          "dest-service-type" : {
            "$ref" : "#/components/schemas/dbaas-service-type-name",
            "description" : "Service type code"
          },
          "integration-type" : {
            "type" : "string",
            "description" : "Type of the integration"
          },
          "dest-endpoint" : {
            "type" : "string",
            "description" : "Destination endpoint name"
          },
          "user-config" : {
            "type" : "object",
            "description" : "Service integration settings"
          },
          "dest-endpoint-id" : {
            "type" : "string",
            "description" : "Destination endpoint id"
          },
          "service-integration-id" : {
            "type" : "string",
            "description" : "Integration ID"
          },
          "dest-service" : {
            "type" : "string",
            "description" : "Destination service name"
          },
          "active" : {
            "type" : "boolean",
            "description" : "True when integration is active"
          },
          "source-endpoint-id" : {
            "type" : "string",
            "description" : "Source endpoint ID"
          },
          "source-service" : {
            "type" : "string",
            "description" : "Source service name"
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "True when integration is enabled"
          }
        },
        "required" : [ "active", "description", "dest-service", "dest-service-type", "enabled", "integration-type", "service-integration-id", "source-service", "source-service-type" ],
        "description" : "Integrations with other services"
      },
      "dbaas-pg-pool-username" : {
        "type" : "string",
        "maxLength" : 64,
        "minLength" : 1
      },
      "dbaas-service-name" : {
        "type" : "string",
        "maxLength" : 63,
        "minLength" : 0
      },
      "sks-cluster" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 1,
            "description" : "Cluster description"
          },
          "labels" : {
            "$ref" : "#/components/schemas/labels",
            "description" : "Cluster labels"
          },
          "cni" : {
            "type" : "string",
            "enum" : [ "calico", "cilium" ],
            "description" : "Cluster CNI"
          },
          "auto-upgrade" : {
            "type" : "boolean",
            "description" : "Enable auto upgrade of the control plane to the latest patch version available"
          },
          "name" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 1,
            "description" : "Cluster name"
          },
          "state" : {
            "type" : "string",
            "enum" : [ "rotating-ccm-credentials", "creating", "upgrading", "deleting", "running", "suspending", "updating", "error" ],
            "readOnly" : true,
            "description" : "Cluster state"
          },
          "nodepools" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/sks-nodepool"
            },
            "readOnly" : true,
            "description" : "Cluster Nodepools"
          },
          "level" : {
            "type" : "string",
            "enum" : [ "starter", "pro" ],
            "description" : "Cluster level"
          },
          "addons" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "exoscale-cloud-controller", "metrics-server" ]
            },
            "uniqueItems" : true,
            "description" : "Cluster addons"
          },
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "readOnly" : true,
            "description" : "Cluster ID"
          },
          "version" : {
            "type" : "string",
            "description" : "Control plane Kubernetes version"
          },
          "created-at" : {
            "type" : "string",
            "format" : "date-time",
            "readOnly" : true,
            "description" : "Cluster creation date"
          },
          "endpoint" : {
            "type" : "string",
            "readOnly" : true,
            "description" : "Cluster endpoint"
          }
        },
        "description" : "SKS Cluster"
      },
      "instance-pool" : {
        "type" : "object",
        "properties" : {
          "anti-affinity-groups" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/anti-affinity-group"
            },
            "description" : "Instance Pool Anti-affinity Groups"
          },
          "description" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 1,
            "description" : "Instance Pool description"
          },
          "public-ip-assignment" : {
            "$ref" : "#/components/schemas/public-ip-assignment",
            "description" : "Instance Pool public IP assignment"
          },
          "labels" : {
            "$ref" : "#/components/schemas/labels",
            "description" : "Instance Pool Labels"
          },
          "security-groups" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/security-group"
            },
            "description" : "Instance Pool Security Groups"
          },
          "elastic-ips" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/elastic-ip"
            },
            "description" : "Instances Elastic IPs"
          },
          "name" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 1,
            "description" : "Instance Pool name"
          },
          "instance-type" : {
            "$ref" : "#/components/schemas/instance-type",
            "description" : "Instances type"
          },
          "min-available" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : false,
            "description" : "Minimum number of running instances"
          },
          "private-networks" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/private-network"
            },
            "description" : "Instance Pool Private Networks"
          },
          "template" : {
            "$ref" : "#/components/schemas/template",
            "description" : "Instances template"
          },
          "state" : {
            "type" : "string",
            "enum" : [ "scaling-up", "scaling-down", "destroying", "creating", "suspended", "running" ],
            "readOnly" : true,
            "description" : "Instance Pool state"
          },
          "size" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : true,
            "description" : "Number of instances"
          },
          "ssh-key" : {
            "$ref" : "#/components/schemas/ssh-key",
            "description" : "Instances SSH key"
          },
          "instance-prefix" : {
            "type" : "string",
            "maxLength" : 30,
            "minLength" : 1,
            "description" : "The instances created by the Instance Pool will be prefixed with this value (default: pool)"
          },
          "user-data" : {
            "type" : "string",
            "minLength" : 1,
            "description" : "Instances Cloud-init user-data"
          },
          "manager" : {
            "$ref" : "#/components/schemas/manager",
            "readOnly" : true,
            "description" : "Instance Pool manager"
          },
          "instances" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/instance"
            },
            "readOnly" : true,
            "description" : "Instances"
          },
          "deploy-target" : {
            "$ref" : "#/components/schemas/deploy-target",
            "description" : "Instance Pool Deploy Target"
          },
          "ipv6-enabled" : {
            "type" : "boolean",
            "description" : "Enable IPv6 for instances"
          },
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "readOnly" : true,
            "description" : "Instance Pool ID"
          },
          "disk-size" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 10,
            "maximum" : 50000,
            "exclusiveMinimum" : false,
            "exclusiveMaximum" : false,
            "description" : "Instances disk size in GB"
          },
          "ssh-keys" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ssh-key"
            },
            "description" : "Instances SSH keys"
          }
        },
        "description" : "Instance Pool"
      },
      "dbaas-opensearch-acl" : {
        "type" : "object",
        "properties" : {
          "rules" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/dbaas-opensearch-rule"
            }
          },
          "username" : {
            "$ref" : "#/components/schemas/dbaas-user-username"
          }
        }
      },
      "dbaas-integration-type" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "description" : "The type of the integration."
          },
          "source-description" : {
            "type" : "string",
            "description" : "The description of the source service types."
          },
          "source-service-types" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "A list of the source service types the integration supports."
          },
          "dest-description" : {
            "type" : "string",
            "description" : "The description of the destination service types."
          },
          "dest-service-types" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "A list of the destination service types the integration supports."
          },
          "settings" : {
            "type" : "object",
            "properties" : {
              "properties" : {
                "type" : "object"
              },
              "additionalProperties" : {
                "type" : "boolean"
              },
              "type" : {
                "type" : "string"
              },
              "title" : {
                "type" : "string"
              }
            },
            "description" : "A JSON schema of additional settings of the integration."
          }
        }
      },
      "sks-nodepool" : {
        "type" : "object",
        "properties" : {
          "anti-affinity-groups" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/anti-affinity-group"
            },
            "description" : "Nodepool Anti-affinity Groups"
          },
          "description" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 1,
            "description" : "Nodepool description"
          },
          "labels" : {
            "$ref" : "#/components/schemas/labels",
            "description" : "Nodepool labels"
          },
          "taints" : {
            "$ref" : "#/components/schemas/sks-nodepool-taints",
            "description" : "Nodepool taints"
          },
          "security-groups" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/security-group"
            },
            "description" : "Nodepool Security Groups"
          },
          "name" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 1,
            "description" : "Nodepool name"
          },
          "instance-type" : {
            "$ref" : "#/components/schemas/instance-type",
            "description" : "Nodepool Instances type"
          },
          "private-networks" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/private-network"
            },
            "description" : "Nodepool Private Networks"
          },
          "template" : {
            "$ref" : "#/components/schemas/template",
            "readOnly" : true,
            "description" : "Nodepool Instance template"
          },
          "state" : {
            "type" : "string",
            "enum" : [ "renewing-token", "creating", "deleting", "running", "updating", "error" ],
            "readOnly" : true,
            "description" : "Nodepool state"
          },
          "size" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : true,
            "description" : "Number of instances"
          },
          "instance-pool" : {
            "$ref" : "#/components/schemas/instance-pool",
            "readOnly" : true,
            "description" : "Instance Pool managed by the Nodepool"
          },
          "instance-prefix" : {
            "type" : "string",
            "maxLength" : 30,
            "minLength" : 1,
            "description" : "The instances created by the Nodepool will be prefixed with this value (default: pool)"
          },
          "deploy-target" : {
            "$ref" : "#/components/schemas/deploy-target",
            "description" : "Instance Pool Deploy Target"
          },
          "addons" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "storage-lvm" ]
            },
            "uniqueItems" : true,
            "description" : "Nodepool addons"
          },
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "readOnly" : true,
            "description" : "Nodepool ID"
          },
          "disk-size" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 20,
            "maximum" : 50000,
            "exclusiveMinimum" : false,
            "exclusiveMaximum" : false,
            "description" : "Nodepool instances disk size in GB"
          },
          "version" : {
            "type" : "string",
            "readOnly" : true,
            "description" : "Nodepool version"
          },
          "created-at" : {
            "type" : "string",
            "format" : "date-time",
            "readOnly" : true,
            "description" : "Nodepool creation date"
          }
        },
        "description" : "SKS Nodepool"
      },
      "enum-integration-types" : {
        "type" : "string",
        "enum" : [ "datasource", "read_replica", "metrics" ]
      },
      "template" : {
        "type" : "object",
        "properties" : {
          "maintainer" : {
            "type" : "string",
            "readOnly" : true,
            "description" : "Template maintainer"
          },
          "description" : {
            "type" : "string",
            "maxLength" : 255,
            "description" : "Template description"
          },
          "ssh-key-enabled" : {
            "type" : "boolean",
            "description" : "Enable SSH key-based login"
          },
          "family" : {
            "type" : "string",
            "readOnly" : true,
            "description" : "Template family"
          },
          "name" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 1,
            "description" : "Template name"
          },
          "default-user" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 1,
            "description" : "Template default user"
          },
          "size" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : true,
            "description" : "Template size"
          },
          "password-enabled" : {
            "type" : "boolean",
            "description" : "Enable password-based login"
          },
          "build" : {
            "type" : "string",
            "readOnly" : true,
            "description" : "Template build"
          },
          "checksum" : {
            "type" : "string",
            "description" : "Template MD5 checksum"
          },
          "boot-mode" : {
            "type" : "string",
            "enum" : [ "legacy", "uefi" ],
            "description" : "Boot mode (default: legacy)"
          },
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "readOnly" : true,
            "description" : "Template ID"
          },
          "zones" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/zone-name"
            },
            "description" : "Zones availability"
          },
          "url" : {
            "type" : "string",
            "description" : "Template source URL"
          },
          "version" : {
            "type" : "string",
            "readOnly" : true,
            "description" : "Template version"
          },
          "created-at" : {
            "type" : "string",
            "format" : "date-time",
            "readOnly" : true,
            "description" : "Template creation date"
          },
          "visibility" : {
            "type" : "string",
            "enum" : [ "private", "public" ],
            "readOnly" : true,
            "description" : "Template visibility"
          }
        },
        "description" : "Instance template"
      },
      "enum-migration-status" : {
        "type" : "string",
        "enum" : [ "running", "syncing", "failed", "done" ]
      },
      "enum-opensearch-rule-permission" : {
        "type" : "string",
        "enum" : [ "admin", "read", "deny", "readwrite", "write" ]
      },
      "security-group" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "readOnly" : true,
            "description" : "Security Group ID"
          },
          "name" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 1,
            "description" : "Security Group name"
          },
          "description" : {
            "type" : "string",
            "maxLength" : 255,
            "description" : "Security Group description"
          },
          "external-sources" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "uniqueItems" : true,
            "description" : "Security Group external sources"
          },
          "rules" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/security-group-rule"
            },
            "uniqueItems" : true,
            "writeOnly" : true,
            "description" : "Security Group rules"
          }
        },
        "description" : "Security Group"
      },
      "zone" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "$ref" : "#/components/schemas/zone-name",
            "readOnly" : true,
            "description" : "Zone short name"
          }
        },
        "description" : "Zone"
      },
      "dbaas-opensearch-acl-config" : {
        "type" : "object",
        "properties" : {
          "acls" : {
            "$ref" : "#/components/schemas/dbaas-opensearch-acls",
            "description" : "List of OpenSearch ACLs"
          },
          "acl-enabled" : {
            "type" : "boolean",
            "description" : "Enable OpenSearch ACLs. When disabled authenticated service users have unrestricted access."
          },
          "extended-acl-enabled" : {
            "type" : "boolean",
            "description" : "Enable to enforce index rules in a limited fashion for requests that use the _mget, _msearch, and _bulk APIs"
          }
        }
      },
      "dbaas-backup-config" : {
        "type" : "object",
        "properties" : {
          "max-count" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : false,
            "readOnly" : true,
            "description" : "Maximum number of backups to keep. Zero when no backups are created."
          },
          "interval" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : true,
            "readOnly" : true,
            "description" : "The interval, in hours, at which backups are generated.\n                                            For some services, like PostgreSQL, this is the interval\n                                            at which full snapshots are taken and continuous incremental\n                                            backup stream is maintained in addition to that."
          },
          "recovery-mode" : {
            "type" : "string",
            "readOnly" : true,
            "description" : "Mechanism how backups can be restored. 'regular'\n                                            means a backup is restored as is so that the system\n                                            is restored to the state it was when the backup was generated.\n                                            'pitr' means point-in-time-recovery, which allows restoring\n                                            the system to any state since the first available full snapshot."
          },
          "frequent-interval-minutes" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : false,
            "readOnly" : true,
            "description" : "Interval of taking a frequent backup in service types supporting different backup schedules"
          },
          "frequent-oldest-age-minutes" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : false,
            "readOnly" : true,
            "description" : "Maximum age of the oldest frequent backup in service types supporting different backup schedules"
          },
          "infrequent-interval-minutes" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : false,
            "readOnly" : true,
            "description" : "Interval of taking a frequent backup in service types supporting different backup schedules"
          },
          "infrequent-oldest-age-minutes" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : false,
            "readOnly" : true,
            "description" : "Maximum age of the oldest infrequent backup in service types supporting different backup schedules"
          }
        },
        "description" : "DBaaS plan backup config"
      },
      "dbaas-service-redis" : {
        "type" : "object",
        "properties" : {
          "updated-at" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "Service last update timestamp (ISO 8601)"
          },
          "node-count" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : false,
            "description" : "Number of service nodes in the active plan"
          },
          "connection-info" : {
            "type" : "object",
            "properties" : {
              "uri" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "password" : {
                "type" : "string"
              },
              "slave" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            },
            "description" : "Redis connection information properties"
          },
          "node-cpu-count" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : false,
            "description" : "Number of CPUs for each node"
          },
          "integrations" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/dbaas-integration"
            },
            "description" : "Service integrations"
          },
          "node-states" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/dbaas-node-state"
            },
            "description" : "State of individual service nodes"
          },
          "name" : {
            "$ref" : "#/components/schemas/dbaas-service-name",
            "description" : "Service name"
          },
          "redis-settings" : {
            "type" : "object",
            "description" : "Redis-specific settings"
          },
          "type" : {
            "$ref" : "#/components/schemas/dbaas-service-type-name",
            "description" : "Service type code"
          },
          "state" : {
            "$ref" : "#/components/schemas/enum-service-state",
            "description" : "State of the service"
          },
          "ip-filter" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "Allowed CIDR address blocks for incoming connections"
          },
          "backups" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/dbaas-service-backup"
            },
            "description" : "List of backups for the service"
          },
          "termination-protection" : {
            "type" : "boolean",
            "description" : "Service is protected against termination and powering off"
          },
          "notifications" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/dbaas-service-notification"
            },
            "description" : "Service notifications"
          },
          "components" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "component" : {
                  "type" : "string",
                  "description" : "Service component name"
                },
                "host" : {
                  "type" : "string",
                  "description" : "DNS name for connecting to the service component"
                },
                "port" : {
                  "type" : "integer",
                  "format" : "int64",
                  "minimum" : 0,
                  "maximum" : 65535,
                  "exclusiveMinimum" : false,
                  "exclusiveMaximum" : false,
                  "description" : "Port number for connecting to the service component"
                },
                "route" : {
                  "$ref" : "#/components/schemas/enum-component-route",
                  "description" : "Network access route"
                },
                "ssl" : {
                  "type" : "boolean",
                  "description" : "Whether the endpoint is encrypted or accepts plaintext.\n             By default endpoints are always encrypted and\n             this property is only included for service components that may disable encryption."
                },
                "usage" : {
                  "$ref" : "#/components/schemas/enum-component-usage",
                  "description" : "DNS usage name"
                }
              },
              "required" : [ "component", "host", "port", "route", "usage" ]
            },
            "description" : "Service component information objects"
          },
          "maintenance" : {
            "$ref" : "#/components/schemas/dbaas-service-maintenance",
            "description" : "Automatic maintenance settings"
          },
          "disk-size" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : false,
            "description" : "TODO UNIT disk space for data storage"
          },
          "node-memory" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : false,
            "description" : "TODO UNIT of memory for each node"
          },
          "uri" : {
            "type" : "string",
            "description" : "URI for connecting to the service (may be absent)"
          },
          "uri-params" : {
            "type" : "object",
            "description" : "service_uri parameterized into key-value pairs"
          },
          "version" : {
            "type" : "string",
            "description" : "Redis version"
          },
          "created-at" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "Service creation timestamp (ISO 8601)"
          },
          "plan" : {
            "type" : "string",
            "description" : "Subscription plan"
          },
          "users" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "type" : {
                  "type" : "string"
                },
                "username" : {
                  "type" : "string"
                },
                "password" : {
                  "type" : "string"
                },
                "access-control" : {
                  "type" : "object",
                  "properties" : {
                    "categories" : {
                      "type" : "array",
                      "items" : {
                        "type" : "string"
                      }
                    },
                    "channels" : {
                      "type" : "array",
                      "items" : {
                        "type" : "string"
                      }
                    },
                    "commands" : {
                      "type" : "array",
                      "items" : {
                        "type" : "string"
                      }
                    },
                    "keys" : {
                      "type" : "array",
                      "items" : {
                        "type" : "string"
                      }
                    }
                  }
                }
              }
            },
            "description" : "List of service users"
          }
        },
        "required" : [ "name", "plan", "type" ]
      },
      "zone-name" : {
        "type" : "string",
        "enum" : [ "ch-dk-2", "de-muc-1", "ch-gva-2", "at-vie-1", "de-fra-1", "bg-sof-1", "at-vie-2" ]
      },
      "cdn-configuration" : {
        "type" : "object",
        "properties" : {
          "bucket" : {
            "type" : "string",
            "description" : "CDN configuration bucket name"
          },
          "status" : {
            "type" : "string",
            "enum" : [ "deactivated", "pending", "activated" ],
            "readOnly" : true,
            "description" : "CDN configuration status"
          },
          "fqdn" : {
            "type" : "string",
            "readOnly" : true,
            "description" : "FQDN that serves the bucket contents"
          }
        },
        "description" : "CDN configuration"
      },
      "dbaas-kafka-acl-id" : {
        "type" : "string",
        "maxLength" : 40,
        "minLength" : 1
      },
      "dbaas-service-opensearch" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "DbaaS service description"
          },
          "max-index-count" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : false,
            "description" : "Maximum number of indexes to keep before deleting the oldest one"
          },
          "updated-at" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "Service last update timestamp (ISO 8601)"
          },
          "node-count" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : false,
            "description" : "Number of service nodes in the active plan"
          },
          "connection-info" : {
            "type" : "object",
            "properties" : {
              "uri" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "username" : {
                "type" : "string"
              },
              "password" : {
                "type" : "string"
              },
              "dashboard-uri" : {
                "type" : "string"
              }
            },
            "description" : "Opensearch connection information properties"
          },
          "node-cpu-count" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : false,
            "description" : "Number of CPUs for each node"
          },
          "integrations" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/dbaas-integration"
            },
            "description" : "Service integrations"
          },
          "node-states" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/dbaas-node-state"
            },
            "description" : "State of individual service nodes"
          },
          "name" : {
            "$ref" : "#/components/schemas/dbaas-service-name",
            "description" : "Service name"
          },
          "keep-index-refresh-interval" : {
            "type" : "boolean",
            "description" : "Aiven automation resets index.refresh_interval to default value for every index to be sure that indices are always visible to search. If it doesn't fit your case, you can disable this by setting up this flag to true."
          },
          "type" : {
            "$ref" : "#/components/schemas/dbaas-service-type-name",
            "description" : "Service type code"
          },
          "state" : {
            "$ref" : "#/components/schemas/enum-service-state",
            "description" : "State of the service"
          },
          "ip-filter" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "Allowed CIDR address blocks for incoming connections"
          },
          "backups" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/dbaas-service-backup"
            },
            "description" : "List of backups for the service"
          },
          "termination-protection" : {
            "type" : "boolean",
            "description" : "Service is protected against termination and powering off"
          },
          "notifications" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/dbaas-service-notification"
            },
            "description" : "Service notifications"
          },
          "components" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "component" : {
                  "type" : "string",
                  "description" : "Service component name"
                },
                "host" : {
                  "type" : "string",
                  "description" : "DNS name for connecting to the service component"
                },
                "port" : {
                  "type" : "integer",
                  "format" : "int64",
                  "minimum" : 0,
                  "maximum" : 65535,
                  "exclusiveMinimum" : false,
                  "exclusiveMaximum" : false,
                  "description" : "Port number for connecting to the service component"
                },
                "route" : {
                  "$ref" : "#/components/schemas/enum-component-route",
                  "description" : "Network access route"
                },
                "usage" : {
                  "$ref" : "#/components/schemas/enum-component-usage",
                  "description" : "DNS usage name"
                }
              },
              "required" : [ "component", "host", "port", "route", "usage" ]
            },
            "description" : "Service component information objects"
          },
          "index-patterns" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "max-index-count" : {
                  "type" : "integer",
                  "format" : "int64",
                  "minimum" : 0,
                  "exclusiveMinimum" : false,
                  "description" : "Maximum number of indexes to keep"
                },
                "sorting-algorithm" : {
                  "type" : "string",
                  "enum" : [ "alphabetical", "creation_date" ],
                  "description" : "Deletion sorting algorithm"
                },
                "pattern" : {
                  "type" : "string",
                  "maxLength" : 1024,
                  "description" : "fnmatch pattern"
                }
              }
            },
            "description" : "Allows you to create glob style patterns and set a max number of indexes matching this pattern you want to keep. Creating indexes exceeding this value will cause the oldest one to get deleted. You could for example create a pattern looking like 'logs.?' and then create index logs.1, logs.2 etc, it will delete logs.1 once you create logs.6. Do note 'logs.?' does not apply to logs.10. Note: Setting max_index_count to 0 will do nothing and the pattern gets ignored."
          },
          "maintenance" : {
            "$ref" : "#/components/schemas/dbaas-service-maintenance",
            "description" : "Automatic maintenance settings"
          },
          "index-template" : {
            "type" : "object",
            "properties" : {
              "mapping-nested-objects-limit" : {
                "type" : "integer",
                "format" : "int64",
                "minimum" : 0,
                "maximum" : 100000,
                "exclusiveMinimum" : false,
                "exclusiveMaximum" : false,
                "description" : "The maximum number of nested JSON objects that a single document can contain across all nested types. This limit helps to prevent out of memory errors when a document contains too many nested objects. Default is 10000."
              },
              "number-of-replicas" : {
                "type" : "integer",
                "format" : "int64",
                "minimum" : 0,
                "maximum" : 29,
                "exclusiveMinimum" : false,
                "exclusiveMaximum" : false,
                "description" : "The number of replicas each primary shard has."
              },
              "number-of-shards" : {
                "type" : "integer",
                "format" : "int64",
                "minimum" : 1,
                "maximum" : 1024,
                "exclusiveMinimum" : false,
                "exclusiveMaximum" : false,
                "description" : "The number of primary shards that an index should have."
              }
            },
            "description" : "Template settings for all new indexes"
          },
          "disk-size" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : false,
            "description" : "TODO UNIT disk space for data storage"
          },
          "node-memory" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : false,
            "description" : "TODO UNIT of memory for each node"
          },
          "uri" : {
            "type" : "string",
            "description" : "URI for connecting to the service (may be absent)"
          },
          "opensearch-settings" : {
            "type" : "object",
            "description" : "OpenSearch-specific settings"
          },
          "uri-params" : {
            "type" : "object",
            "description" : "service_uri parameterized into key-value pairs"
          },
          "version" : {
            "type" : "string",
            "description" : "OpenSearch version"
          },
          "created-at" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "Service creation timestamp (ISO 8601)"
          },
          "plan" : {
            "type" : "string",
            "description" : "Subscription plan"
          },
          "opensearch-dashboards" : {
            "type" : "object",
            "properties" : {
              "opensearch-request-timeout" : {
                "type" : "integer",
                "format" : "int64",
                "minimum" : 5000,
                "maximum" : 120000,
                "exclusiveMinimum" : false,
                "exclusiveMaximum" : false,
                "description" : "Timeout in milliseconds for requests made by OpenSearch Dashboards towards OpenSearch (default: 30000)"
              },
              "enabled" : {
                "type" : "boolean",
                "description" : "Enable or disable OpenSearch Dashboards (default: true)"
              },
              "max-old-space-size" : {
                "type" : "integer",
                "format" : "int64",
                "minimum" : 64,
                "maximum" : 1024,
                "exclusiveMinimum" : false,
                "exclusiveMaximum" : false,
                "description" : "Limits the maximum amount of memory (in MiB) the OpenSearch Dashboards process can use. This sets the max_old_space_size option of the nodejs running the OpenSearch Dashboards. Note: the memory reserved by OpenSearch Dashboards is not available for OpenSearch. (default: 128)"
              }
            },
            "description" : "OpenSearch Dashboards settings"
          },
          "users" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "type" : {
                  "type" : "string"
                },
                "username" : {
                  "type" : "string"
                },
                "password" : {
                  "type" : "string"
                }
              }
            },
            "description" : "List of service users"
          }
        },
        "required" : [ "name", "plan", "type" ]
      },
      "manager" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "description" : "Manager ID"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "sks-nodepool", "instance-pool" ],
            "description" : "Manager type"
          }
        },
        "description" : "Resource manager"
      },
      "dbaas-node-state-progress-update" : {
        "type" : "object",
        "properties" : {
          "completed" : {
            "type" : "boolean",
            "description" : "Indicates whether this phase has been completed or not"
          },
          "current" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : false,
            "description" : "Current progress for this phase. May be missing or null."
          },
          "max" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : false,
            "description" : "Maximum progress value for this phase. May be missing or null. May change."
          },
          "min" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : false,
            "description" : "Minimum progress value for this phase. May be missing or null."
          },
          "phase" : {
            "type" : "string",
            "enum" : [ "stream", "basebackup", "prepare", "finalize" ],
            "description" : "Key identifying this phase"
          },
          "unit" : {
            "type" : "string",
            "description" : "Unit for current/min/max values. New units may be added.\n                        If null should be treated as generic unit"
          }
        },
        "required" : [ "completed", "phase" ],
        "description" : "Extra information regarding the progress for current state"
      },
      "sks-nodepool-taints" : {
        "type" : "object",
        "additionalProperties" : {
          "$ref" : "#/components/schemas/sks-nodepool-taint"
        }
      },
      "enum-master-link-status" : {
        "type" : "string",
        "enum" : [ "up", "down" ]
      },
      "anti-affinity-group" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "readOnly" : true,
            "description" : "Anti-affinity Group ID"
          },
          "name" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 1,
            "description" : "Anti-affinity Group name"
          },
          "description" : {
            "type" : "string",
            "maxLength" : 255,
            "description" : "Anti-affinity Group description"
          },
          "instances" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/instance"
            },
            "readOnly" : true,
            "description" : "Anti-affinity Group instances"
          }
        },
        "description" : "Anti-affinity Group"
      },
      "dbaas-opensearch-acls" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/dbaas-opensearch-acl"
        }
      },
      "dbaas-opensearch-rule" : {
        "type" : "object",
        "properties" : {
          "index" : {
            "type" : "string",
            "maxLength" : 249,
            "minLength" : 1,
            "description" : "OpenSearch index pattern"
          },
          "permission" : {
            "$ref" : "#/components/schemas/enum-opensearch-rule-permission",
            "description" : "OpenSearch permission"
          }
        }
      },
      "dbaas-service-type-name" : {
        "type" : "string",
        "maxLength" : 64,
        "minLength" : 0
      },
      "iam-service-policy-rule" : {
        "type" : "object",
        "properties" : {
          "action" : {
            "type" : "string",
            "enum" : [ "allow", "deny" ]
          },
          "expression" : {
            "type" : "string"
          },
          "resources" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "iam-role" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "readOnly" : true,
            "description" : "IAM Role ID"
          },
          "name" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 1,
            "description" : "IAM Role name"
          },
          "description" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 1,
            "description" : "IAM Role description"
          },
          "labels" : {
            "$ref" : "#/components/schemas/labels",
            "description" : "IAM Role Labels"
          },
          "editable" : {
            "type" : "boolean",
            "description" : "IAM Role mutability"
          },
          "policy" : {
            "$ref" : "#/components/schemas/iam-policy",
            "description" : "IAM Role Policy"
          }
        },
        "description" : "IAM Role"
      },
      "dbaas-service-common" : {
        "type" : "object",
        "properties" : {
          "updated-at" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "Service last update timestamp (ISO 8601)"
          },
          "node-count" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : false,
            "description" : "Number of service nodes in the active plan"
          },
          "node-cpu-count" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : false,
            "description" : "Number of CPUs for each node"
          },
          "integrations" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/dbaas-integration"
            },
            "description" : "Service integrations"
          },
          "name" : {
            "$ref" : "#/components/schemas/dbaas-service-name",
            "description" : "Service name"
          },
          "type" : {
            "$ref" : "#/components/schemas/dbaas-service-type-name",
            "description" : "Service type code"
          },
          "state" : {
            "$ref" : "#/components/schemas/enum-service-state",
            "description" : "State of the service"
          },
          "termination-protection" : {
            "type" : "boolean",
            "description" : "Service is protected against termination and powering off"
          },
          "notifications" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/dbaas-service-notification"
            },
            "description" : "Service notifications"
          },
          "disk-size" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : false,
            "description" : "TODO UNIT disk space for data storage"
          },
          "node-memory" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : false,
            "description" : "TODO UNIT of memory for each node"
          },
          "created-at" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "Service creation timestamp (ISO 8601)"
          },
          "plan" : {
            "type" : "string",
            "description" : "Subscription plan"
          }
        },
        "required" : [ "name", "plan", "type" ]
      },
      "snapshot-export" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "readOnly" : true,
            "description" : "Snapshot export ID"
          },
          "presigned-url" : {
            "type" : "string",
            "description" : "Snapshot export presigned url"
          },
          "md5sum" : {
            "type" : "string",
            "description" : "Snapshot export md5 checksum"
          }
        },
        "description" : "Snapshot export information. This data is transient."
      },
      "dbaas-postgres-users" : {
        "type" : "object",
        "properties" : {
          "users" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "username" : {
                  "$ref" : "#/components/schemas/dbaas-user-username",
                  "description" : "Username"
                },
                "allow-replication" : {
                  "type" : "boolean"
                }
              },
              "required" : [ "username" ]
            }
          }
        }
      },
      "dns-domain-record" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "readOnly" : true,
            "description" : "DNS domain record ID"
          },
          "priority" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : false,
            "description" : "DNS domain record priority"
          },
          "content" : {
            "type" : "string",
            "description" : "DNS domain record content"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "NS", "CAA", "NAPTR", "CDNSKEY", "POOL", "A", "HINFO", "CNAME", "SOA", "SSHFP", "SRV", "AAAA", "MX", "DNSKEY", "TXT", "DS", "PTR", "ALIAS", "URL", "CDS", "SPF" ],
            "description" : "DNS domain record type"
          },
          "ttl" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : false,
            "description" : "DNS domain record TTL"
          },
          "name" : {
            "type" : "string",
            "description" : "DNS domain record name"
          },
          "created-at" : {
            "type" : "string",
            "format" : "date-time",
            "readOnly" : true,
            "description" : "DNS domain record creation date"
          },
          "updated-at" : {
            "type" : "string",
            "format" : "date-time",
            "readOnly" : true,
            "description" : "DNS domain record update date"
          }
        },
        "description" : "DNS domain record"
      },
      "dbaas-service-components" : {
        "type" : "object",
        "properties" : {
          "component" : {
            "type" : "string",
            "description" : "Service component name"
          },
          "host" : {
            "type" : "string",
            "description" : "DNS name for connecting to the service component"
          },
          "kafka-authentication-method" : {
            "$ref" : "#/components/schemas/enum-kafka-auth-method",
            "description" : "Kafka authentication method. This is a value specific to the 'kafka' service component"
          },
          "path" : {
            "type" : "string",
            "description" : "Path component of the service URL (useful only if service component is HTTP or HTTPS endpoint)"
          },
          "port" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "maximum" : 65535,
            "exclusiveMinimum" : false,
            "exclusiveMaximum" : false,
            "description" : "Port number for connecting to the service component"
          },
          "route" : {
            "type" : "string",
            "enum" : [ "dynamic", "private", "public", "privatelink" ],
            "description" : "Network access route"
          },
          "ssl" : {
            "type" : "boolean",
            "description" : "Whether the endpoint is encrypted or accepts plaintext.\n                                           By default endpoints are always encrypted and\n                                           this property is only included for service components that may disable encryption."
          },
          "usage" : {
            "type" : "string",
            "enum" : [ "primary", "replica" ],
            "description" : "DNS usage name"
          }
        },
        "required" : [ "component", "host", "port", "route", "usage" ],
        "description" : "Service component information objects"
      },
      "dbaas-user-username" : {
        "type" : "string",
        "maxLength" : 64,
        "minLength" : 1
      },
      "enum-pg-synchronous-replication" : {
        "type" : "string",
        "enum" : [ "quorum", "off" ]
      },
      "enum-migration-method" : {
        "type" : "string",
        "enum" : [ "dump", "replication" ]
      },
      "enum-sort-order" : {
        "type" : "string",
        "enum" : [ "desc", "asc" ]
      },
      "enum-pg-variant" : {
        "type" : "string",
        "enum" : [ "timescale", "aiven" ]
      },
      "dbaas-service-backup" : {
        "type" : "object",
        "properties" : {
          "backup-name" : {
            "type" : "string",
            "description" : "Internal name of this backup"
          },
          "backup-time" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "Backup timestamp (ISO 8601)"
          },
          "data-size" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : false,
            "description" : "Backup's original size before compression"
          }
        },
        "required" : [ "backup-name", "backup-time", "data-size" ],
        "description" : "List of backups for the service"
      },
      "iam-service-policy" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "rules", "allow", "deny" ]
          },
          "rules" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/iam-service-policy-rule"
            }
          }
        }
      }
    }
  },
  "servers" : [ {
    "url" : "https://api-{zone}.exoscale.com/v2",
    "variables" : {
      "zone" : {
        "default" : "ch-gva-2",
        "enum" : [ "ch-gva-2", "ch-zrh-1", "de-fra-1", "de-muc-1", "at-vie-1", "bg-sof-1" ]
      }
    }
  }, {
    "url" : "https://ppapi-{zone}.exoscale.com/v2",
    "variables" : {
      "zone" : {
        "default" : "ch-gva-2",
        "enum" : [ "ch-gva-2", "ch-zrh-1", "de-fra-1", "at-vie-1" ]
      }
    }
  } ],
  "paths" : {
    "/load-balancer/{id}/service/{service-id}" : {
      "delete" : {
        "tags" : [ "network-load-balancer" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "in" : "path",
          "required" : true,
          "name" : "service-id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Delete a Load Balancer Service",
        "operationId" : "delete-load-balancer-service"
      },
      "put" : {
        "tags" : [ "network-load-balancer" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "in" : "path",
          "required" : true,
          "name" : "service-id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Update a Load Balancer Service",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string",
                    "maxLength" : 255,
                    "description" : "Load Balancer Service name"
                  },
                  "description" : {
                    "type" : "string",
                    "maxLength" : 255,
                    "nullable" : true,
                    "description" : "Load Balancer Service description"
                  },
                  "protocol" : {
                    "type" : "string",
                    "enum" : [ "tcp", "udp" ],
                    "description" : "Network traffic protocol"
                  },
                  "strategy" : {
                    "type" : "string",
                    "enum" : [ "round-robin", "source-hash" ],
                    "description" : "Load balancing strategy"
                  },
                  "port" : {
                    "type" : "integer",
                    "format" : "int64",
                    "minimum" : 0,
                    "exclusiveMinimum" : true,
                    "description" : "Port exposed on the Load Balancer's public IP"
                  },
                  "target-port" : {
                    "type" : "integer",
                    "format" : "int64",
                    "minimum" : 0,
                    "exclusiveMinimum" : true,
                    "description" : "Port on which the network traffic will be forwarded to on the receiving instance"
                  },
                  "healthcheck" : {
                    "$ref" : "#/components/schemas/load-balancer-service-healthcheck",
                    "description" : "Healthcheck configuration"
                  }
                }
              }
            }
          }
        },
        "operationId" : "update-load-balancer-service"
      },
      "get" : {
        "tags" : [ "network-load-balancer" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/load-balancer-service"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "in" : "path",
          "required" : true,
          "name" : "service-id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Retrieve Load Balancer Service details",
        "operationId" : "get-load-balancer-service"
      }
    },
    "/instance-pool/{id}:scale" : {
      "put" : {
        "tags" : [ "instance-pool" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Scale an Instance Pool",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "size" : {
                    "type" : "integer",
                    "format" : "int64",
                    "minimum" : 0,
                    "exclusiveMinimum" : true,
                    "description" : "Number of managed Instances"
                  }
                },
                "required" : [ "size" ]
              }
            }
          }
        },
        "operationId" : "scale-instance-pool"
      }
    },
    "/instance/{id}:create-snapshot" : {
      "post" : {
        "tags" : [ "instance", "snapshot" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Create a Snapshot of a Compute instance",
        "operationId" : "create-snapshot"
      }
    },
    "/reverse-dns/elastic-ip/{id}" : {
      "get" : {
        "tags" : [ "reverse-dns" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/reverse-dns-record"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Query the PTR DNS records for an elastic IP",
        "operationId" : "get-reverse-dns-elastic-ip"
      },
      "post" : {
        "tags" : [ "reverse-dns" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Update/Create the PTR DNS record for an elastic IP",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "domain-name" : {
                    "type" : "string",
                    "maxLength" : 253,
                    "minLength" : 1
                  }
                }
              }
            }
          }
        },
        "operationId" : "update-reverse-dns-elastic-ip"
      },
      "delete" : {
        "tags" : [ "reverse-dns" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Delete the PTR DNS record for an elastic IP",
        "operationId" : "delete-reverse-dns-elastic-ip"
      }
    },
    "/anti-affinity-group" : {
      "get" : {
        "tags" : [ "anti-affinity-group" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "anti-affinity-groups" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/anti-affinity-group"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ ],
        "summary" : "List Anti-affinity Groups",
        "operationId" : "list-anti-affinity-groups"
      },
      "post" : {
        "tags" : [ "anti-affinity-group" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ ],
        "summary" : "Create an Anti-affinity Group",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string",
                    "maxLength" : 255,
                    "minLength" : 1,
                    "description" : "Anti-affinity Group name"
                  },
                  "description" : {
                    "type" : "string",
                    "maxLength" : 255,
                    "description" : "Anti-affinity Group description"
                  }
                },
                "required" : [ "name" ]
              }
            }
          }
        },
        "operationId" : "create-anti-affinity-group"
      }
    },
    "/event" : {
      "get" : {
        "tags" : [ "event" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/event"
                  }
                }
              }
            }
          }
        },
        "description" : "Retrieve Mutation Events for a given date range. Defaults to retrieving Events for the past 24 hours. \n         Both a `from` and `to` arguments can be specified to filter Events over a specific period.\n         Events will be the the most descriptive possible but not all fields are mandatory",
        "parameters" : [ {
          "in" : "query",
          "required" : false,
          "name" : "from",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "in" : "query",
          "required" : false,
          "name" : "to",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        } ],
        "summary" : "List Events",
        "operationId" : "list-events"
      }
    },
    "/security-group/{id}/rules/{rule-id}" : {
      "delete" : {
        "tags" : [ "security-group" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "in" : "path",
          "required" : true,
          "name" : "rule-id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Delete a Security Group rule",
        "operationId" : "delete-rule-from-security-group"
      }
    },
    "/access-key/{key}" : {
      "delete" : {
        "tags" : [ "iam" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "This operation revokes the specified IAM Access Key. Access Keys created by the revoked Access Key will not be revoked.",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "key",
          "schema" : {
            "type" : "string"
          }
        } ],
        "summary" : "Revoke an IAM Access Key",
        "operationId" : "revoke-access-key"
      },
      "get" : {
        "tags" : [ "iam" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/access-key"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "key",
          "schema" : {
            "type" : "string"
          }
        } ],
        "summary" : "Retrieve IAM Access Key details",
        "operationId" : "get-access-key"
      }
    },
    "/load-balancer" : {
      "post" : {
        "tags" : [ "network-load-balancer" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ ],
        "summary" : "Create a Load Balancer",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "description" : {
                    "type" : "string",
                    "maxLength" : 255,
                    "minLength" : 1,
                    "description" : "Load Balancer description"
                  },
                  "name" : {
                    "type" : "string",
                    "maxLength" : 255,
                    "minLength" : 1,
                    "description" : "Load Balancer name"
                  },
                  "labels" : {
                    "$ref" : "#/components/schemas/labels",
                    "description" : "Load balancer labels"
                  }
                },
                "required" : [ "name" ]
              }
            }
          }
        },
        "operationId" : "create-load-balancer"
      },
      "get" : {
        "tags" : [ "network-load-balancer" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "load-balancers" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/load-balancer"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ ],
        "summary" : "List Load Balancers",
        "operationId" : "list-load-balancers"
      }
    },
    "/security-group" : {
      "post" : {
        "tags" : [ "security-group" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ ],
        "summary" : "Create a Security Group",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string",
                    "maxLength" : 255,
                    "minLength" : 1,
                    "description" : "Security Group name"
                  },
                  "description" : {
                    "type" : "string",
                    "maxLength" : 255,
                    "description" : "Security Group description"
                  }
                },
                "required" : [ "name" ]
              }
            }
          }
        },
        "operationId" : "create-security-group"
      },
      "get" : {
        "tags" : [ "security-group" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "security-groups" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/security-group"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description" : "Lists security groups. When visibility is set to public, lists public security groups.\nPublic security groups are objects maintained by Exoscale which contain source addresses for\nrelevant services hosted by Exoscale. They can be used a source in ingress rules and as a destination\nin egress rules.",
        "parameters" : [ {
          "in" : "query",
          "required" : false,
          "name" : "visibility",
          "schema" : {
            "type" : "string",
            "enum" : [ "private", "public" ]
          }
        } ],
        "summary" : "List Security Groups.",
        "operationId" : "list-security-groups"
      }
    },
    "/dbaas-mysql/{name}" : {
      "put" : {
        "tags" : [ "dbaas" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "Update a DBaaS MySQL service",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "name",
          "schema" : {
            "$ref" : "#/components/schemas/dbaas-service-name"
          }
        } ],
        "summary" : "Update a DBaaS MySQL service",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "maintenance" : {
                    "type" : "object",
                    "properties" : {
                      "dow" : {
                        "type" : "string",
                        "enum" : [ "saturday", "tuesday", "never", "wednesday", "sunday", "friday", "monday", "thursday" ],
                        "description" : "Day of week for installing updates"
                      },
                      "time" : {
                        "type" : "string",
                        "maxLength" : 8,
                        "minLength" : 8,
                        "description" : "Time for installing updates, UTC"
                      }
                    },
                    "required" : [ "dow", "time" ],
                    "description" : "Automatic maintenance settings"
                  },
                  "plan" : {
                    "type" : "string",
                    "maxLength" : 128,
                    "minLength" : 1,
                    "description" : "Subscription plan"
                  },
                  "termination-protection" : {
                    "type" : "boolean",
                    "description" : "Service is protected against termination and powering off"
                  },
                  "ip-filter" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    },
                    "description" : "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'"
                  },
                  "mysql-settings" : {
                    "type" : "object",
                    "description" : "MySQL-specific settings"
                  },
                  "migration" : {
                    "type" : "object",
                    "properties" : {
                      "host" : {
                        "type" : "string",
                        "maxLength" : 255,
                        "minLength" : 1,
                        "description" : "Hostname or IP address of the server where to migrate data from"
                      },
                      "port" : {
                        "type" : "integer",
                        "format" : "int64",
                        "minimum" : 1,
                        "maximum" : 65535,
                        "exclusiveMinimum" : false,
                        "exclusiveMaximum" : false,
                        "description" : "Port number of the server where to migrate data from"
                      },
                      "password" : {
                        "type" : "string",
                        "maxLength" : 255,
                        "minLength" : 1,
                        "description" : "Password for authentication with the server where to migrate data from"
                      },
                      "ssl" : {
                        "type" : "boolean",
                        "description" : "The server where to migrate data from is secured with SSL"
                      },
                      "username" : {
                        "type" : "string",
                        "maxLength" : 255,
                        "minLength" : 1,
                        "description" : "User name for authentication with the server where to migrate data from"
                      },
                      "dbname" : {
                        "type" : "string",
                        "maxLength" : 63,
                        "minLength" : 1,
                        "description" : "Database name for bootstrapping the initial connection"
                      },
                      "ignore-dbs" : {
                        "type" : "string",
                        "maxLength" : 2048,
                        "minLength" : 1,
                        "description" : "Comma-separated list of databases, which should be ignored during migration (supported by MySQL only at the moment)"
                      },
                      "method" : {
                        "$ref" : "#/components/schemas/enum-migration-method",
                        "description" : "The migration method to be used"
                      }
                    },
                    "required" : [ "host", "port" ],
                    "description" : "Migrate data from existing server"
                  },
                  "binlog-retention-period" : {
                    "type" : "integer",
                    "format" : "int64",
                    "minimum" : 600,
                    "maximum" : 86400,
                    "exclusiveMinimum" : false,
                    "exclusiveMaximum" : false,
                    "description" : "The minimum amount of time in seconds to keep binlog entries before deletion. This may be extended for services that require binlog entries for longer than the default for example if using the MySQL Debezium Kafka connector."
                  },
                  "backup-schedule" : {
                    "type" : "object",
                    "properties" : {
                      "backup-hour" : {
                        "type" : "integer",
                        "format" : "int64",
                        "minimum" : 0,
                        "maximum" : 23,
                        "exclusiveMinimum" : false,
                        "exclusiveMaximum" : false,
                        "description" : "The hour of day (in UTC) when backup for the service is started. New backup is only started if previous backup has already completed."
                      },
                      "backup-minute" : {
                        "type" : "integer",
                        "format" : "int64",
                        "minimum" : 0,
                        "maximum" : 59,
                        "exclusiveMinimum" : false,
                        "exclusiveMaximum" : false,
                        "description" : "The minute of an hour when backup for the service is started. New backup is only started if previous backup has already completed."
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId" : "update-dbaas-service-mysql"
      },
      "get" : {
        "tags" : [ "dbaas" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/dbaas-service-mysql"
                }
              }
            }
          }
        },
        "description" : "Get a DBaaS MySQL service",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "name",
          "schema" : {
            "$ref" : "#/components/schemas/dbaas-service-name"
          }
        } ],
        "summary" : "Get a DBaaS MySQL service",
        "operationId" : "get-dbaas-service-mysql"
      },
      "post" : {
        "tags" : [ "dbaas" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "Create a DBaaS MySQL service",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "name",
          "schema" : {
            "$ref" : "#/components/schemas/dbaas-service-name"
          }
        } ],
        "summary" : "Create a DBaaS MySQL service",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "backup-schedule" : {
                    "type" : "object",
                    "properties" : {
                      "backup-hour" : {
                        "type" : "integer",
                        "format" : "int64",
                        "minimum" : 0,
                        "maximum" : 23,
                        "exclusiveMinimum" : false,
                        "exclusiveMaximum" : false,
                        "description" : "The hour of day (in UTC) when backup for the service is started. New backup is only started if previous backup has already completed."
                      },
                      "backup-minute" : {
                        "type" : "integer",
                        "format" : "int64",
                        "minimum" : 0,
                        "maximum" : 59,
                        "exclusiveMinimum" : false,
                        "exclusiveMaximum" : false,
                        "description" : "The minute of an hour when backup for the service is started. New backup is only started if previous backup has already completed."
                      }
                    }
                  },
                  "integrations" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "$ref" : "#/components/schemas/enum-integration-types",
                          "description" : "Integration type"
                        },
                        "source-service" : {
                          "$ref" : "#/components/schemas/dbaas-service-name",
                          "description" : "A source service"
                        },
                        "dest-service" : {
                          "$ref" : "#/components/schemas/dbaas-service-name",
                          "description" : "A destination service"
                        },
                        "settings" : {
                          "type" : "object",
                          "description" : "Integration settings"
                        }
                      },
                      "required" : [ "type" ]
                    },
                    "description" : "Service integrations to enable for the service. Some integration types affect how a service is created and they must be provided as part of the creation call instead of being defined later."
                  },
                  "ip-filter" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    },
                    "description" : "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'"
                  },
                  "termination-protection" : {
                    "type" : "boolean",
                    "description" : "Service is protected against termination and powering off"
                  },
                  "fork-from-service" : {
                    "$ref" : "#/components/schemas/dbaas-service-name",
                    "description" : "Service to fork from"
                  },
                  "recovery-backup-time" : {
                    "type" : "string",
                    "minLength" : 1,
                    "description" : "ISO time of a backup to recover from for services that support arbitrary times"
                  },
                  "mysql-settings" : {
                    "type" : "object",
                    "description" : "MySQL-specific settings"
                  },
                  "maintenance" : {
                    "type" : "object",
                    "properties" : {
                      "dow" : {
                        "type" : "string",
                        "enum" : [ "saturday", "tuesday", "never", "wednesday", "sunday", "friday", "monday", "thursday" ],
                        "description" : "Day of week for installing updates"
                      },
                      "time" : {
                        "type" : "string",
                        "maxLength" : 8,
                        "minLength" : 8,
                        "description" : "Time for installing updates, UTC"
                      }
                    },
                    "required" : [ "dow", "time" ],
                    "description" : "Automatic maintenance settings"
                  },
                  "admin-username" : {
                    "type" : "string",
                    "maxLength" : 64,
                    "minLength" : 1,
                    "pattern" : "^[_A-Za-z0-9][-._A-Za-z0-9]{0,63}$",
                    "description" : "Custom username for admin user. This must be set only when a new service is being created."
                  },
                  "version" : {
                    "type" : "string",
                    "minLength" : 1,
                    "description" : "MySQL major version"
                  },
                  "plan" : {
                    "type" : "string",
                    "maxLength" : 128,
                    "minLength" : 1,
                    "description" : "Subscription plan"
                  },
                  "admin-password" : {
                    "type" : "string",
                    "maxLength" : 256,
                    "minLength" : 8,
                    "pattern" : "^[a-zA-Z0-9-_]+$",
                    "description" : "Custom password for admin user. Defaults to random string. This must be set only when a new service is being created."
                  },
                  "migration" : {
                    "type" : "object",
                    "properties" : {
                      "host" : {
                        "type" : "string",
                        "maxLength" : 255,
                        "minLength" : 1,
                        "description" : "Hostname or IP address of the server where to migrate data from"
                      },
                      "port" : {
                        "type" : "integer",
                        "format" : "int64",
                        "minimum" : 1,
                        "maximum" : 65535,
                        "exclusiveMinimum" : false,
                        "exclusiveMaximum" : false,
                        "description" : "Port number of the server where to migrate data from"
                      },
                      "password" : {
                        "type" : "string",
                        "maxLength" : 255,
                        "minLength" : 1,
                        "description" : "Password for authentication with the server where to migrate data from"
                      },
                      "ssl" : {
                        "type" : "boolean",
                        "description" : "The server where to migrate data from is secured with SSL"
                      },
                      "username" : {
                        "type" : "string",
                        "maxLength" : 255,
                        "minLength" : 1,
                        "description" : "User name for authentication with the server where to migrate data from"
                      },
                      "dbname" : {
                        "type" : "string",
                        "maxLength" : 63,
                        "minLength" : 1,
                        "description" : "Database name for bootstrapping the initial connection"
                      },
                      "ignore-dbs" : {
                        "type" : "string",
                        "maxLength" : 2048,
                        "minLength" : 1,
                        "description" : "Comma-separated list of databases, which should be ignored during migration (supported by MySQL only at the moment)"
                      },
                      "method" : {
                        "$ref" : "#/components/schemas/enum-migration-method",
                        "description" : "The migration method to be used"
                      }
                    },
                    "required" : [ "host", "port" ],
                    "description" : "Migrate data from existing server"
                  },
                  "binlog-retention-period" : {
                    "type" : "integer",
                    "format" : "int64",
                    "minimum" : 600,
                    "maximum" : 86400,
                    "exclusiveMinimum" : false,
                    "exclusiveMaximum" : false,
                    "description" : "The minimum amount of time in seconds to keep binlog entries before deletion. This may be extended for services that require binlog entries for longer than the default for example if using the MySQL Debezium Kafka connector."
                  }
                },
                "required" : [ "plan" ]
              }
            }
          }
        },
        "operationId" : "create-dbaas-service-mysql"
      }
    },
    "/private-network/{id}:attach" : {
      "put" : {
        "tags" : [ "private-network" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Attach a Compute instance to a Private Network",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "ip" : {
                    "type" : "string",
                    "format" : "ipv4",
                    "description" : "Static IP address lease for the corresponding network interface"
                  },
                  "instance" : {
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "string",
                        "format" : "uuid",
                        "description" : "Instance ID"
                      }
                    },
                    "description" : "Compute instance"
                  }
                },
                "required" : [ "instance" ]
              }
            }
          }
        },
        "operationId" : "attach-instance-to-private-network"
      }
    },
    "/dbaas-service-type" : {
      "get" : {
        "tags" : [ "dbaas" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "dbaas-service-types" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/dbaas-service-type"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description" : "List available service types for DBaaS",
        "parameters" : [ ],
        "summary" : "DBaaS Service Types",
        "operationId" : "list-dbaas-service-types"
      }
    },
    "/instance-type/{id}" : {
      "get" : {
        "tags" : [ "instance-type" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/instance-type"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Retrieve Instance Type details",
        "operationId" : "get-instance-type"
      }
    },
    "/instance/{id}:password" : {
      "get" : {
        "tags" : [ "instance" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/instance-password"
                }
              }
            }
          }
        },
        "description" : "Reveal the password used during instance creation or the latest password reset.\n            This is only available for VMs created against templates having the `password-enabled`\n            property set to `true`.\n\n            Passwords are transiently stored for at most 24 hours and intended to be retrieved shortly after\n            creation or resets.",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Reveal the password used during instance creation or the latest password reset.",
        "operationId" : "reveal-instance-password"
      }
    },
    "/instance/{id}:resize-disk" : {
      "put" : {
        "tags" : [ "instance" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "This operation resizes a Compute instance's disk volume. Note: the disk can only grow, cannot be shrunk.",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Resize a Compute instance disk",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "disk-size" : {
                    "type" : "integer",
                    "format" : "int64",
                    "minimum" : 10,
                    "maximum" : 50000,
                    "exclusiveMinimum" : false,
                    "exclusiveMaximum" : false,
                    "description" : "Instance disk size in GB"
                  }
                },
                "required" : [ "disk-size" ]
              }
            }
          }
        },
        "operationId" : "resize-instance-disk"
      }
    },
    "/dbaas-service" : {
      "get" : {
        "tags" : [ "dbaas" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "dbaas-services" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/dbaas-service-common"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description" : "List DBaaS services",
        "parameters" : [ ],
        "summary" : "List DBaaS services",
        "operationId" : "list-dbaas-services"
      }
    },
    "/elastic-ip" : {
      "post" : {
        "tags" : [ "elastic-ip" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ ],
        "summary" : "Create an Elastic IP",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "addressfamily" : {
                    "type" : "string",
                    "enum" : [ "inet4", "inet6" ],
                    "description" : "Elastic IP address family (default: :inet4)"
                  },
                  "description" : {
                    "type" : "string",
                    "maxLength" : 255,
                    "description" : "Elastic IP description"
                  },
                  "healthcheck" : {
                    "$ref" : "#/components/schemas/elastic-ip-healthcheck",
                    "description" : "Elastic IP healthcheck"
                  },
                  "labels" : {
                    "$ref" : "#/components/schemas/labels",
                    "description" : "Elastic IP labels"
                  }
                }
              }
            }
          }
        },
        "operationId" : "create-elastic-ip"
      },
      "get" : {
        "tags" : [ "elastic-ip" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "elastic-ips" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/elastic-ip"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ ],
        "summary" : "List Elastic IPs",
        "operationId" : "list-elastic-ips"
      }
    },
    "/zone" : {
      "get" : {
        "tags" : [ "zone" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "zones" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/zone"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ ],
        "summary" : "List Zones",
        "operationId" : "list-zones"
      }
    },
    "/instance-pool" : {
      "get" : {
        "tags" : [ "instance-pool" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "instance-pools" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/instance-pool"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ ],
        "summary" : "List Instance Pools",
        "operationId" : "list-instance-pools"
      },
      "post" : {
        "tags" : [ "instance-pool" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ ],
        "summary" : "Create an Instance Pool",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "anti-affinity-groups" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/anti-affinity-group"
                    },
                    "uniqueItems" : true,
                    "description" : "Instance Pool Anti-affinity Groups"
                  },
                  "description" : {
                    "type" : "string",
                    "maxLength" : 255,
                    "minLength" : 1,
                    "description" : "Instance Pool description"
                  },
                  "public-ip-assignment" : {
                    "$ref" : "#/components/schemas/public-ip-assignment",
                    "description" : "Assign public IP to Instances"
                  },
                  "labels" : {
                    "$ref" : "#/components/schemas/labels",
                    "description" : "Instance Pool Labels"
                  },
                  "security-groups" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/security-group"
                    },
                    "uniqueItems" : true,
                    "description" : "Instance Pool Security Groups"
                  },
                  "elastic-ips" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/elastic-ip"
                    },
                    "uniqueItems" : true,
                    "description" : "Instances Elastic IPs"
                  },
                  "name" : {
                    "type" : "string",
                    "maxLength" : 255,
                    "minLength" : 1,
                    "description" : "Instance Pool name"
                  },
                  "instance-type" : {
                    "$ref" : "#/components/schemas/instance-type",
                    "description" : "Instances type"
                  },
                  "min-available" : {
                    "type" : "integer",
                    "format" : "int64",
                    "minimum" : 0,
                    "exclusiveMinimum" : false,
                    "description" : "Minimum number of running Instances"
                  },
                  "private-networks" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/private-network"
                    },
                    "uniqueItems" : true,
                    "description" : "Instance Pool Private Networks"
                  },
                  "template" : {
                    "$ref" : "#/components/schemas/template",
                    "description" : "Instances template"
                  },
                  "size" : {
                    "type" : "integer",
                    "format" : "int64",
                    "minimum" : 0,
                    "exclusiveMinimum" : true,
                    "description" : "Number of Instances"
                  },
                  "ssh-key" : {
                    "$ref" : "#/components/schemas/ssh-key",
                    "description" : "Instances SSH key"
                  },
                  "instance-prefix" : {
                    "type" : "string",
                    "maxLength" : 30,
                    "minLength" : 1,
                    "description" : "Prefix to apply to Instances names (default: pool)"
                  },
                  "user-data" : {
                    "type" : "string",
                    "minLength" : 1,
                    "description" : "Instances Cloud-init user-data"
                  },
                  "deploy-target" : {
                    "$ref" : "#/components/schemas/deploy-target",
                    "description" : "Deploy Target to deploy Instances on"
                  },
                  "ipv6-enabled" : {
                    "type" : "boolean",
                    "description" : "Enable IPv6. DEPRECATED: use `public-ip-assignments`."
                  },
                  "disk-size" : {
                    "type" : "integer",
                    "format" : "int64",
                    "minimum" : 10,
                    "maximum" : 50000,
                    "exclusiveMinimum" : false,
                    "exclusiveMaximum" : false,
                    "description" : "Instances disk size in GB"
                  },
                  "ssh-keys" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/ssh-key"
                    },
                    "uniqueItems" : true,
                    "description" : "Instances SSH Keys"
                  }
                },
                "required" : [ "name", "size", "instance-type", "template", "disk-size" ]
              }
            }
          }
        },
        "operationId" : "create-instance-pool"
      }
    },
    "/sks-cluster-kubeconfig/{id}" : {
      "post" : {
        "tags" : [ "sks" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "kubeconfig" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        },
        "description" : "This operation returns a Kubeconfig file encoded in base64.",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Generate a new Kubeconfig file for a SKS cluster",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/sks-kubeconfig-request"
              }
            }
          }
        },
        "operationId" : "generate-sks-cluster-kubeconfig"
      }
    },
    "/dns-domain/{domain-id}/record" : {
      "get" : {
        "tags" : [ "dns" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "dns-domain-records" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/dns-domain-record"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "domain-id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "List DNS domain records",
        "operationId" : "list-dns-domain-records"
      },
      "post" : {
        "tags" : [ "dns" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "domain-id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Create DNS domain record",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string",
                    "description" : "DNS domain record name"
                  },
                  "type" : {
                    "type" : "string",
                    "enum" : [ "NS", "CAA", "NAPTR", "POOL", "A", "HINFO", "CNAME", "SOA", "SSHFP", "SRV", "AAAA", "MX", "DNSKEY", "TXT", "DS", "PTR", "ALIAS", "URL", "SPF" ],
                    "description" : "DNS domain record type"
                  },
                  "content" : {
                    "type" : "string",
                    "description" : "DNS domain record content"
                  },
                  "ttl" : {
                    "type" : "integer",
                    "format" : "int64",
                    "minimum" : 0,
                    "exclusiveMinimum" : false,
                    "description" : "DNS domain record TTL"
                  },
                  "priority" : {
                    "type" : "integer",
                    "format" : "int64",
                    "minimum" : 0,
                    "exclusiveMinimum" : false,
                    "description" : "DNS domain record priority"
                  }
                },
                "required" : [ "name", "type", "content" ]
              }
            }
          }
        },
        "operationId" : "create-dns-domain-record"
      }
    },
    "/dbaas-ca-certificate" : {
      "get" : {
        "tags" : [ "dbaas" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "certificate" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        },
        "description" : "Returns a CA Certificate required to reach a DBaaS service through a TLS-protected connection.",
        "parameters" : [ ],
        "summary" : "Get DBaaS CA Certificate",
        "operationId" : "get-dbaas-ca-certificate"
      }
    },
    "/deploy-target" : {
      "get" : {
        "tags" : [ "deploy-target" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "deploy-targets" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/deploy-target"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ ],
        "summary" : "List Deploy Targets",
        "operationId" : "list-deploy-targets"
      }
    },
    "/instance-type" : {
      "get" : {
        "tags" : [ "instance-type" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "instance-types" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/instance-type"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ ],
        "summary" : "List Compute instance Types",
        "operationId" : "list-instance-types"
      }
    },
    "/dbaas-postgres/{name}/migration/stop" : {
      "post" : {
        "tags" : [ "dbaas" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : null,
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "name",
          "schema" : {
            "$ref" : "#/components/schemas/dbaas-service-name"
          }
        } ],
        "summary" : "Stop a DBaaS PostgreSQL migration",
        "operationId" : "stop-dbaas-pg-migration"
      }
    },
    "/dbaas-kafka/{name}" : {
      "get" : {
        "tags" : [ "dbaas" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/dbaas-service-kafka"
                }
              }
            }
          }
        },
        "description" : null,
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "name",
          "schema" : {
            "$ref" : "#/components/schemas/dbaas-service-name"
          }
        } ],
        "summary" : "Get a DBaaS Kafka service",
        "operationId" : "get-dbaas-service-kafka"
      },
      "post" : {
        "tags" : [ "dbaas" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "Create a DBaaS Kafka service",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "name",
          "schema" : {
            "$ref" : "#/components/schemas/dbaas-service-name"
          }
        } ],
        "summary" : "Create a DBaaS Kafka service",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "authentication-methods" : {
                    "type" : "object",
                    "properties" : {
                      "certificate" : {
                        "type" : "boolean",
                        "description" : "Enable certificate/SSL authentication"
                      },
                      "sasl" : {
                        "type" : "boolean",
                        "description" : "Enable SASL authentication"
                      }
                    },
                    "description" : "Kafka authentication methods"
                  },
                  "kafka-rest-enabled" : {
                    "type" : "boolean",
                    "description" : "Enable Kafka-REST service"
                  },
                  "integrations" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "$ref" : "#/components/schemas/enum-integration-types",
                          "description" : "Integration type"
                        },
                        "source-service" : {
                          "$ref" : "#/components/schemas/dbaas-service-name",
                          "description" : "A source service"
                        },
                        "dest-service" : {
                          "$ref" : "#/components/schemas/dbaas-service-name",
                          "description" : "A destination service"
                        },
                        "settings" : {
                          "type" : "object",
                          "description" : "Integration settings"
                        }
                      },
                      "required" : [ "type" ]
                    },
                    "description" : "Service integrations to enable for the service. Some integration types affect how a service is created and they must be provided as part of the creation call instead of being defined later."
                  },
                  "kafka-connect-enabled" : {
                    "type" : "boolean",
                    "description" : "Allow clients to connect to kafka_connect from the public internet for service nodes that are in a project VPC or another type of private network"
                  },
                  "ip-filter" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    },
                    "description" : "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'"
                  },
                  "schema-registry-settings" : {
                    "type" : "object",
                    "description" : "Schema Registry configuration"
                  },
                  "kafka-rest-settings" : {
                    "type" : "object",
                    "description" : "Kafka REST configuration"
                  },
                  "termination-protection" : {
                    "type" : "boolean",
                    "description" : "Service is protected against termination and powering off"
                  },
                  "kafka-connect-settings" : {
                    "type" : "object",
                    "description" : "Kafka Connect configuration values"
                  },
                  "maintenance" : {
                    "type" : "object",
                    "properties" : {
                      "dow" : {
                        "type" : "string",
                        "enum" : [ "saturday", "tuesday", "never", "wednesday", "sunday", "friday", "monday", "thursday" ],
                        "description" : "Day of week for installing updates"
                      },
                      "time" : {
                        "type" : "string",
                        "maxLength" : 8,
                        "minLength" : 8,
                        "description" : "Time for installing updates, UTC"
                      }
                    },
                    "required" : [ "dow", "time" ],
                    "description" : "Automatic maintenance settings"
                  },
                  "kafka-settings" : {
                    "type" : "object",
                    "description" : "Kafka-specific settings"
                  },
                  "schema-registry-enabled" : {
                    "type" : "boolean",
                    "description" : "Enable Schema-Registry service"
                  },
                  "version" : {
                    "type" : "string",
                    "minLength" : 1,
                    "description" : "Kafka major version"
                  },
                  "plan" : {
                    "type" : "string",
                    "maxLength" : 128,
                    "minLength" : 1,
                    "description" : "Subscription plan"
                  }
                },
                "required" : [ "plan" ]
              }
            }
          }
        },
        "operationId" : "create-dbaas-service-kafka"
      },
      "put" : {
        "tags" : [ "dbaas" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "Update a DBaaS Kafka service",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "name",
          "schema" : {
            "$ref" : "#/components/schemas/dbaas-service-name"
          }
        } ],
        "summary" : "Update a DBaaS Kafka service",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "authentication-methods" : {
                    "type" : "object",
                    "properties" : {
                      "certificate" : {
                        "type" : "boolean",
                        "description" : "Enable certificate/SSL authentication"
                      },
                      "sasl" : {
                        "type" : "boolean",
                        "description" : "Enable SASL authentication"
                      }
                    },
                    "description" : "Kafka authentication methods"
                  },
                  "kafka-rest-enabled" : {
                    "type" : "boolean",
                    "description" : "Enable Kafka-REST service"
                  },
                  "kafka-connect-enabled" : {
                    "type" : "boolean",
                    "description" : "Allow clients to connect to kafka_connect from the public internet for service nodes that are in a project VPC or another type of private network"
                  },
                  "ip-filter" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    },
                    "description" : "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'"
                  },
                  "schema-registry-settings" : {
                    "type" : "object",
                    "description" : "Schema Registry configuration"
                  },
                  "kafka-rest-settings" : {
                    "type" : "object",
                    "description" : "Kafka REST configuration"
                  },
                  "termination-protection" : {
                    "type" : "boolean",
                    "description" : "Service is protected against termination and powering off"
                  },
                  "kafka-connect-settings" : {
                    "type" : "object",
                    "description" : "Kafka Connect configuration values"
                  },
                  "maintenance" : {
                    "type" : "object",
                    "properties" : {
                      "dow" : {
                        "type" : "string",
                        "enum" : [ "saturday", "tuesday", "never", "wednesday", "sunday", "friday", "monday", "thursday" ],
                        "description" : "Day of week for installing updates"
                      },
                      "time" : {
                        "type" : "string",
                        "maxLength" : 8,
                        "minLength" : 8,
                        "description" : "Time for installing updates, UTC"
                      }
                    },
                    "required" : [ "dow", "time" ],
                    "description" : "Automatic maintenance settings"
                  },
                  "kafka-settings" : {
                    "type" : "object",
                    "description" : "Kafka-specific settings"
                  },
                  "schema-registry-enabled" : {
                    "type" : "boolean",
                    "description" : "Enable Schema-Registry service"
                  },
                  "plan" : {
                    "type" : "string",
                    "maxLength" : 128,
                    "minLength" : 1,
                    "description" : "Subscription plan"
                  }
                }
              }
            }
          }
        },
        "operationId" : "update-dbaas-service-kafka"
      }
    },
    "/dbaas-settings-redis" : {
      "get" : {
        "tags" : [ "dbaas" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "settings" : {
                      "type" : "object",
                      "properties" : {
                        "redis" : {
                          "type" : "object",
                          "properties" : {
                            "properties" : {
                              "type" : "object"
                            },
                            "additionalProperties" : {
                              "type" : "boolean"
                            },
                            "type" : {
                              "type" : "string"
                            },
                            "title" : {
                              "type" : "string"
                            }
                          },
                          "description" : "Redis configuration values"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description" : "Returns the default settings for Redis.",
        "parameters" : [ ],
        "summary" : "Get DBaaS Redis settings",
        "operationId" : "get-dbaas-settings-redis"
      }
    },
    "/dbaas-kafka/{name}/schema-registry/acl-config" : {
      "post" : {
        "tags" : [ "dbaas" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : null,
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "name",
          "schema" : {
            "$ref" : "#/components/schemas/dbaas-service-name"
          }
        } ],
        "summary" : "Add a Kafka Schema Registry ACL entry",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/dbaas-kafka-schema-registry-acl-entry"
              }
            }
          }
        },
        "operationId" : "create-dbaas-kafka-schema-registry-acl-config"
      }
    },
    "/access-key" : {
      "get" : {
        "tags" : [ "iam" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "access-keys" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/access-key"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ ],
        "summary" : "List IAM Access Keys",
        "operationId" : "list-access-keys"
      },
      "post" : {
        "tags" : [ "iam" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/access-key"
                }
              }
            }
          }
        },
        "description" : "This operation creates a new IAM Access Key, which can either be restricted to specific API operations or unrestricted. The corresponding secret is only available in the response returned by this operation, the caller must take care of storing it safely as there is no other way to retrieve it.",
        "parameters" : [ ],
        "summary" : "Create an IAM Access Key",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string",
                    "description" : "IAM Access Key name"
                  },
                  "tags" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    },
                    "description" : "IAM Access Key tags"
                  },
                  "operations" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    },
                    "description" : "IAM Access Key operations"
                  },
                  "resources" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/access-key-resource"
                    },
                    "description" : "IAM Access Key Resources"
                  }
                },
                "description" : "IAM Access Key"
              }
            }
          }
        },
        "operationId" : "create-access-key"
      }
    },
    "/private-network/{id}:update-ip" : {
      "put" : {
        "tags" : [ "private-network" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Update the IP address of an instance attached to a managed private network",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "ip" : {
                    "type" : "string",
                    "format" : "ipv4",
                    "description" : "Static IP address lease for the corresponding network interface"
                  },
                  "instance" : {
                    "$ref" : "#/components/schemas/instance",
                    "description" : "Compute instance"
                  }
                },
                "required" : [ "instance" ]
              }
            }
          }
        },
        "operationId" : "update-private-network-instance-ip"
      }
    },
    "/sks-cluster/{id}/nodepool/{sks-nodepool-id}" : {
      "put" : {
        "tags" : [ "sks" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "in" : "path",
          "required" : true,
          "name" : "sks-nodepool-id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Update an SKS Nodepool",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "anti-affinity-groups" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/anti-affinity-group"
                    },
                    "uniqueItems" : true,
                    "description" : "Nodepool Anti-affinity Groups"
                  },
                  "description" : {
                    "type" : "string",
                    "maxLength" : 255,
                    "minLength" : 1,
                    "nullable" : true,
                    "description" : "Nodepool description"
                  },
                  "labels" : {
                    "$ref" : "#/components/schemas/labels",
                    "description" : "Nodepool labels"
                  },
                  "taints" : {
                    "$ref" : "#/components/schemas/sks-nodepool-taints",
                    "description" : "Nodepool taints"
                  },
                  "security-groups" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/security-group"
                    },
                    "uniqueItems" : true,
                    "description" : "Nodepool Security Groups"
                  },
                  "name" : {
                    "type" : "string",
                    "maxLength" : 255,
                    "minLength" : 1,
                    "description" : "Nodepool name"
                  },
                  "instance-type" : {
                    "$ref" : "#/components/schemas/instance-type",
                    "description" : "Nodepool instances type"
                  },
                  "private-networks" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/private-network"
                    },
                    "uniqueItems" : true,
                    "description" : "Nodepool Private Networks"
                  },
                  "instance-prefix" : {
                    "type" : "string",
                    "maxLength" : 30,
                    "minLength" : 1,
                    "description" : "Prefix to apply to managed instances names (default: pool)"
                  },
                  "deploy-target" : {
                    "$ref" : "#/components/schemas/deploy-target",
                    "nullable" : true,
                    "description" : "Nodepool Deploy Target"
                  },
                  "disk-size" : {
                    "type" : "integer",
                    "format" : "int64",
                    "minimum" : 20,
                    "maximum" : 50000,
                    "exclusiveMinimum" : false,
                    "exclusiveMaximum" : false,
                    "description" : "Nodepool instances disk size in GB"
                  }
                }
              }
            }
          }
        },
        "operationId" : "update-sks-nodepool"
      },
      "get" : {
        "tags" : [ "sks" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/sks-nodepool"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "in" : "path",
          "required" : true,
          "name" : "sks-nodepool-id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Retrieve SKS Nodepool details",
        "operationId" : "get-sks-nodepool"
      },
      "delete" : {
        "tags" : [ "sks" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "in" : "path",
          "required" : true,
          "name" : "sks-nodepool-id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Delete an SKS Nodepool",
        "operationId" : "delete-sks-nodepool"
      }
    },
    "/dbaas-postgres/{service-name}/user" : {
      "post" : {
        "tags" : [ "dbaas" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : null,
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "service-name",
          "schema" : {
            "$ref" : "#/components/schemas/dbaas-service-name"
          }
        } ],
        "summary" : "Create a DBaaS Postgres user",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "username" : {
                    "$ref" : "#/components/schemas/dbaas-user-username",
                    "description" : "Username"
                  },
                  "allow-replication" : {
                    "type" : "boolean"
                  }
                },
                "required" : [ "username" ]
              }
            }
          }
        },
        "operationId" : "create-dbaas-postgres-user"
      }
    },
    "/instance-pool/{id}" : {
      "delete" : {
        "tags" : [ "instance-pool" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Delete an Instance Pool",
        "operationId" : "delete-instance-pool"
      },
      "get" : {
        "tags" : [ "instance-pool" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/instance-pool"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Retrieve Instance Pool details",
        "operationId" : "get-instance-pool"
      },
      "put" : {
        "tags" : [ "instance-pool" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Update an Instance Pool",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "anti-affinity-groups" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/anti-affinity-group"
                    },
                    "uniqueItems" : true,
                    "nullable" : true,
                    "description" : "Instance Pool Anti-affinity Groups"
                  },
                  "description" : {
                    "type" : "string",
                    "maxLength" : 255,
                    "minLength" : 1,
                    "nullable" : true,
                    "description" : "Instance Pool description"
                  },
                  "public-ip-assignment" : {
                    "$ref" : "#/components/schemas/public-ip-assignment",
                    "description" : "Assign public IP to Instances"
                  },
                  "labels" : {
                    "$ref" : "#/components/schemas/labels",
                    "description" : "Instance Pool Labels"
                  },
                  "security-groups" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/security-group"
                    },
                    "uniqueItems" : true,
                    "nullable" : true,
                    "description" : "Instance Pool Security Groups"
                  },
                  "elastic-ips" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/elastic-ip"
                    },
                    "nullable" : true,
                    "description" : "Instances Elastic IPs"
                  },
                  "name" : {
                    "type" : "string",
                    "maxLength" : 255,
                    "minLength" : 1,
                    "description" : "Instance Pool name"
                  },
                  "instance-type" : {
                    "$ref" : "#/components/schemas/instance-type",
                    "description" : "Instances type"
                  },
                  "min-available" : {
                    "type" : "integer",
                    "format" : "int64",
                    "minimum" : 0,
                    "exclusiveMinimum" : false,
                    "nullable" : true,
                    "description" : "Minimum number of running Instances"
                  },
                  "private-networks" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/private-network"
                    },
                    "uniqueItems" : true,
                    "nullable" : true,
                    "description" : "Instance Pool Private Networks"
                  },
                  "template" : {
                    "$ref" : "#/components/schemas/template",
                    "description" : "Instances template"
                  },
                  "ssh-key" : {
                    "$ref" : "#/components/schemas/ssh-key",
                    "nullable" : true,
                    "description" : "Instances SSH key"
                  },
                  "instance-prefix" : {
                    "type" : "string",
                    "nullable" : true,
                    "description" : "Prefix to apply to Instances names (default: pool)"
                  },
                  "user-data" : {
                    "type" : "string",
                    "minLength" : 1,
                    "nullable" : true,
                    "description" : "Instances Cloud-init user-data"
                  },
                  "deploy-target" : {
                    "$ref" : "#/components/schemas/deploy-target",
                    "nullable" : true,
                    "description" : "Instance Pool Deploy Target"
                  },
                  "ipv6-enabled" : {
                    "type" : "boolean",
                    "description" : "Enable IPv6. DEPRECATED: use `public-ip-assignments`."
                  },
                  "disk-size" : {
                    "type" : "integer",
                    "format" : "int64",
                    "minimum" : 10,
                    "maximum" : 50000,
                    "exclusiveMinimum" : false,
                    "exclusiveMaximum" : false,
                    "description" : "Instances disk size in GB"
                  }
                }
              }
            }
          }
        },
        "operationId" : "update-instance-pool"
      }
    },
    "/private-network" : {
      "get" : {
        "tags" : [ "private-network" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "private-networks" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/private-network"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ ],
        "summary" : "List Private Networks",
        "operationId" : "list-private-networks"
      },
      "post" : {
        "tags" : [ "private-network" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ ],
        "summary" : "Create a Private Network",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string",
                    "maxLength" : 255,
                    "minLength" : 1,
                    "description" : "Private Network name"
                  },
                  "description" : {
                    "type" : "string",
                    "maxLength" : 255,
                    "description" : "Private Network description"
                  },
                  "netmask" : {
                    "type" : "string",
                    "format" : "ipv4",
                    "description" : "Private Network netmask"
                  },
                  "start-ip" : {
                    "type" : "string",
                    "format" : "ipv4",
                    "description" : "Private Network start IP address"
                  },
                  "end-ip" : {
                    "type" : "string",
                    "format" : "ipv4",
                    "description" : "Private Network end IP address"
                  },
                  "labels" : {
                    "$ref" : "#/components/schemas/labels",
                    "description" : "Private Network labels"
                  }
                },
                "required" : [ "name" ]
              }
            }
          }
        },
        "operationId" : "create-private-network"
      }
    },
    "/instance/{id}:start" : {
      "put" : {
        "tags" : [ "instance" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "This operation starts a virtual machine, potentially using a rescue profile if specified",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Start a Compute instance",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "rescue-profile" : {
                    "type" : "string",
                    "enum" : [ "netboot-efi", "netboot" ],
                    "description" : "Boot in Rescue Mode, using named profile (supported: netboot, netboot-efi)"
                  }
                }
              }
            }
          }
        },
        "operationId" : "start-instance"
      }
    },
    "/security-group/{id}" : {
      "get" : {
        "tags" : [ "security-group" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/security-group"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Retrieve Security Group details",
        "operationId" : "get-security-group"
      },
      "delete" : {
        "tags" : [ "security-group" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Delete a Security Group",
        "operationId" : "delete-security-group"
      }
    },
    "/sks-cluster/{id}/authority/{authority}/cert" : {
      "get" : {
        "tags" : [ "sks" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "cacert" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        },
        "description" : "This operation returns the certificate for the given SKS cluster authority encoded in base64.",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "in" : "path",
          "required" : true,
          "name" : "authority",
          "schema" : {
            "type" : "string",
            "enum" : [ "control-plane", "aggregation", "kubelet" ]
          }
        } ],
        "summary" : "Get the certificate for a SKS cluster authority",
        "operationId" : "get-sks-cluster-authority-cert"
      }
    },
    "/snapshot/{id}:export" : {
      "post" : {
        "tags" : [ "snapshot" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Export a Snapshot",
        "operationId" : "export-snapshot"
      }
    },
    "/elastic-ip/{id}/{field}" : {
      "delete" : {
        "tags" : [ "elastic-ip" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "in" : "path",
          "required" : true,
          "name" : "field",
          "schema" : {
            "type" : "string",
            "enum" : [ "description" ]
          }
        } ],
        "summary" : "Reset an Elastic IP field to its default value",
        "operationId" : "reset-elastic-ip-field"
      }
    },
    "/quota/{entity}" : {
      "get" : {
        "tags" : [ "quotas" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/quota"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "entity",
          "schema" : {
            "type" : "string"
          }
        } ],
        "summary" : "Retrieve Resource Quota",
        "operationId" : "get-quota"
      }
    },
    "/sks-cluster-deprecated-resources/{id}" : {
      "get" : {
        "tags" : [ "sks" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/sks-cluster-deprecated-resource"
                  }
                }
              }
            }
          }
        },
        "description" : "This operation returns the deprecated resources for a given cluster",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Resources that are scheduled to be removed in future kubernetes releases",
        "operationId" : "list-sks-cluster-deprecated-resources"
      }
    },
    "/private-network/{id}:detach" : {
      "put" : {
        "tags" : [ "private-network" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Detach a Compute instance from a Private Network",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "instance" : {
                    "$ref" : "#/components/schemas/instance",
                    "description" : "Compute instance"
                  }
                },
                "required" : [ "instance" ]
              }
            }
          }
        },
        "operationId" : "detach-instance-from-private-network"
      }
    },
    "/private-network/{id}" : {
      "put" : {
        "tags" : [ "private-network" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Update a Private Network",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string",
                    "maxLength" : 255,
                    "minLength" : 1,
                    "description" : "Private Network name"
                  },
                  "description" : {
                    "type" : "string",
                    "maxLength" : 255,
                    "description" : "Private Network description"
                  },
                  "netmask" : {
                    "type" : "string",
                    "format" : "ipv4",
                    "description" : "Private Network netmask"
                  },
                  "start-ip" : {
                    "type" : "string",
                    "format" : "ipv4",
                    "description" : "Private Network start IP address"
                  },
                  "end-ip" : {
                    "type" : "string",
                    "format" : "ipv4",
                    "description" : "Private Network end IP address"
                  },
                  "labels" : {
                    "$ref" : "#/components/schemas/labels",
                    "description" : "Private Network labels"
                  }
                }
              }
            }
          }
        },
        "operationId" : "update-private-network"
      },
      "get" : {
        "tags" : [ "private-network" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/private-network"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Retrieve Private Network details",
        "operationId" : "get-private-network"
      },
      "delete" : {
        "tags" : [ "private-network" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Delete a Private Network",
        "operationId" : "delete-private-network"
      }
    },
    "/load-balancer/{id}/{field}" : {
      "delete" : {
        "tags" : [ "network-load-balancer" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "in" : "path",
          "required" : true,
          "name" : "field",
          "schema" : {
            "type" : "string",
            "enum" : [ "description", "labels" ]
          }
        } ],
        "summary" : "Reset a Load Balancer field to its default value",
        "operationId" : "reset-load-balancer-field"
      }
    },
    "/instance/{id}:scale" : {
      "put" : {
        "tags" : [ "instance" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "This operation changes the Compute instance's type. Note: the new Instance Type must be within the same family (e.g. a standard instance cannot be scaled to gpu2 or storage).",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Scale a Compute instance to a new Instance Type",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "instance-type" : {
                    "$ref" : "#/components/schemas/instance-type",
                    "description" : "Instance Type"
                  }
                },
                "required" : [ "instance-type" ]
              }
            }
          }
        },
        "operationId" : "scale-instance"
      }
    },
    "/api-key" : {
      "post" : {
        "tags" : [ "iam" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/iam-api-key-created"
                }
              }
            }
          }
        },
        "description" : null,
        "parameters" : [ ],
        "summary" : "Create a new v3 API key",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "role-id" : {
                    "type" : "string",
                    "format" : "uuid",
                    "description" : "IAM API Key Role ID"
                  },
                  "name" : {
                    "type" : "string",
                    "description" : "IAM API Key Name"
                  }
                },
                "required" : [ "role-id", "name" ]
              }
            }
          }
        },
        "operationId" : "create-api-key"
      },
      "get" : {
        "tags" : [ "iam" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "api-keys" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/iam-api-key"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description" : null,
        "parameters" : [ ],
        "summary" : "List v3 API keys",
        "operationId" : "list-api-keys"
      }
    },
    "/dns-domain" : {
      "get" : {
        "tags" : [ "dns" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "dns-domains" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/dns-domain"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ ],
        "summary" : "List DNS domains",
        "operationId" : "list-dns-domains"
      },
      "post" : {
        "tags" : [ "dns" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/dns-domain"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ ],
        "summary" : "Create DNS domain",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "unicode-name" : {
                    "type" : "string",
                    "description" : "Domain name"
                  }
                },
                "description" : "DNS Domain"
              }
            }
          }
        },
        "operationId" : "create-dns-domain"
      }
    },
    "/instance/{id}:stop" : {
      "put" : {
        "tags" : [ "instance" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Stop a Compute instance",
        "operationId" : "stop-instance"
      }
    },
    "/dns-domain/{domain-id}/record/{record-id}" : {
      "get" : {
        "tags" : [ "dns" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/dns-domain-record"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "domain-id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "in" : "path",
          "required" : true,
          "name" : "record-id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Retrieve DNS domain record details",
        "operationId" : "get-dns-domain-record"
      },
      "put" : {
        "tags" : [ "dns" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "domain-id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "in" : "path",
          "required" : true,
          "name" : "record-id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Update DNS domain record",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string",
                    "description" : "DNS domain record name"
                  },
                  "content" : {
                    "type" : "string",
                    "description" : "DNS domain record content"
                  },
                  "ttl" : {
                    "type" : "integer",
                    "format" : "int64",
                    "minimum" : 0,
                    "exclusiveMinimum" : true,
                    "description" : "DNS domain record TTL"
                  },
                  "priority" : {
                    "type" : "integer",
                    "format" : "int64",
                    "minimum" : 0,
                    "exclusiveMinimum" : true,
                    "description" : "DNS domain record priority"
                  }
                }
              }
            }
          }
        },
        "operationId" : "update-dns-domain-record"
      },
      "delete" : {
        "tags" : [ "dns" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "domain-id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "in" : "path",
          "required" : true,
          "name" : "record-id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Delete DNS domain record",
        "operationId" : "delete-dns-domain-record"
      }
    },
    "/dbaas-kafka/{service-name}/user" : {
      "post" : {
        "tags" : [ "dbaas" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : null,
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "service-name",
          "schema" : {
            "$ref" : "#/components/schemas/dbaas-service-name"
          }
        } ],
        "summary" : "Create a DBaaS Kafka user",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "username" : {
                    "$ref" : "#/components/schemas/dbaas-user-username",
                    "description" : "Username"
                  }
                },
                "required" : [ "username" ]
              }
            }
          }
        },
        "operationId" : "create-dbaas-kafka-user"
      }
    },
    "/security-group/{id}:attach" : {
      "put" : {
        "tags" : [ "security-group" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Attach a Compute instance to a Security Group",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "instance" : {
                    "$ref" : "#/components/schemas/instance",
                    "description" : "Compute instance"
                  }
                },
                "required" : [ "instance" ]
              }
            }
          }
        },
        "operationId" : "attach-instance-to-security-group"
      }
    },
    "/snapshot/{id}" : {
      "delete" : {
        "tags" : [ "snapshot" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Delete a Snapshot",
        "operationId" : "delete-snapshot"
      },
      "get" : {
        "tags" : [ "snapshot" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/snapshot"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Retrieve Snapshot details",
        "operationId" : "get-snapshot"
      }
    },
    "/sks-cluster/{id}/nodepool/{sks-nodepool-id}:scale" : {
      "put" : {
        "tags" : [ "sks" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "in" : "path",
          "required" : true,
          "name" : "sks-nodepool-id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Scale a SKS Nodepool",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "size" : {
                    "type" : "integer",
                    "format" : "int64",
                    "minimum" : 0,
                    "exclusiveMinimum" : true,
                    "description" : "Number of instances"
                  }
                },
                "required" : [ "size" ]
              }
            }
          }
        },
        "operationId" : "scale-sks-nodepool"
      }
    },
    "/dbaas-settings-mysql" : {
      "get" : {
        "tags" : [ "dbaas" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "settings" : {
                      "type" : "object",
                      "properties" : {
                        "mysql" : {
                          "type" : "object",
                          "properties" : {
                            "properties" : {
                              "type" : "object"
                            },
                            "additionalProperties" : {
                              "type" : "boolean"
                            },
                            "type" : {
                              "type" : "string"
                            },
                            "title" : {
                              "type" : "string"
                            }
                          },
                          "description" : "mysql.conf configuration values"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description" : "Get DBaaS MySQL settings",
        "parameters" : [ ],
        "summary" : "Get DBaaS MySQL settings",
        "operationId" : "get-dbaas-settings-mysql"
      }
    },
    "/sks-cluster/{id}/upgrade-service-level" : {
      "put" : {
        "tags" : [ "sks" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Upgrade a SKS cluster to pro",
        "operationId" : "upgrade-sks-cluster-service-level"
      }
    },
    "/api-key/{id}" : {
      "delete" : {
        "tags" : [ "iam" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : null,
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string"
          }
        } ],
        "summary" : "Delete a v3 API key",
        "operationId" : "delete-api-key"
      },
      "get" : {
        "tags" : [ "iam" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/iam-api-key"
                }
              }
            }
          }
        },
        "description" : null,
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string"
          }
        } ],
        "summary" : "Get v3 API key",
        "operationId" : "get-api-key"
      }
    },
    "/load-balancer/{id}/service/{service-id}/{field}" : {
      "delete" : {
        "tags" : [ "network-load-balancer", "compute" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "in" : "path",
          "required" : true,
          "name" : "service-id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "in" : "path",
          "required" : true,
          "name" : "field",
          "schema" : {
            "type" : "string",
            "enum" : [ "description" ]
          }
        } ],
        "summary" : "Reset a Load Balancer Service field to its default value",
        "operationId" : "reset-load-balancer-service-field"
      }
    },
    "/security-group/{id}/rules" : {
      "post" : {
        "tags" : [ "security-group" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Create a Security Group rule",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "flow-direction" : {
                    "type" : "string",
                    "enum" : [ "ingress", "egress" ],
                    "description" : "Network flow direction to match"
                  },
                  "description" : {
                    "type" : "string",
                    "maxLength" : 255,
                    "description" : "Security Group rule description"
                  },
                  "network" : {
                    "type" : "string",
                    "description" : "CIDR-formatted network allowed"
                  },
                  "security-group" : {
                    "$ref" : "#/components/schemas/security-group-resource",
                    "description" : "Security Group allowed"
                  },
                  "protocol" : {
                    "type" : "string",
                    "enum" : [ "tcp", "esp", "icmp", "udp", "gre", "ah", "ipip", "icmpv6" ],
                    "description" : "Network protocol"
                  },
                  "icmp" : {
                    "type" : "object",
                    "properties" : {
                      "code" : {
                        "type" : "integer",
                        "format" : "int64",
                        "minimum" : -1,
                        "maximum" : 254,
                        "exclusiveMinimum" : false,
                        "exclusiveMaximum" : false
                      },
                      "type" : {
                        "type" : "integer",
                        "format" : "int64",
                        "minimum" : -1,
                        "maximum" : 254,
                        "exclusiveMinimum" : false,
                        "exclusiveMaximum" : false
                      }
                    },
                    "description" : "ICMP details (default: -1 (ANY))"
                  },
                  "start-port" : {
                    "type" : "integer",
                    "format" : "int64",
                    "minimum" : 1,
                    "maximum" : 65535,
                    "exclusiveMinimum" : false,
                    "exclusiveMaximum" : false,
                    "description" : "Start port of the range"
                  },
                  "end-port" : {
                    "type" : "integer",
                    "format" : "int64",
                    "minimum" : 1,
                    "maximum" : 65535,
                    "exclusiveMinimum" : false,
                    "exclusiveMaximum" : false,
                    "description" : "End port of the range"
                  }
                },
                "required" : [ "flow-direction", "protocol" ]
              }
            }
          }
        },
        "operationId" : "add-rule-to-security-group"
      }
    },
    "/dbaas-integration-types" : {
      "get" : {
        "tags" : [ "dbaas" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "dbaas-integration-types" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/dbaas-integration-type"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description" : "Get DBaaS integration types",
        "parameters" : [ ],
        "summary" : "Get DBaaS integration types",
        "operationId" : "list-dbaas-integration-types"
      }
    },
    "/access-key-known-operations" : {
      "get" : {
        "tags" : [ "iam" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "access-key-operations" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/access-key-operation"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ ],
        "summary" : "Retrieve all known available IAM Access Key operations and associated tags",
        "operationId" : "list-access-key-known-operations"
      }
    },
    "/dbaas-postgres/{service-name}/user/{username}" : {
      "delete" : {
        "tags" : [ "dbaas" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : null,
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "service-name",
          "schema" : {
            "$ref" : "#/components/schemas/dbaas-service-name"
          }
        }, {
          "in" : "path",
          "required" : true,
          "name" : "username",
          "schema" : {
            "$ref" : "#/components/schemas/dbaas-user-username"
          }
        } ],
        "summary" : "Delete a DBaaS Postgres user",
        "operationId" : "delete-dbaas-postgres-user"
      }
    },
    "/instance/{id}:add-protection" : {
      "put" : {
        "tags" : [ "instance" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Set instance destruction protection",
        "operationId" : "add-instance-protection"
      }
    },
    "/dbaas-postgres/{service-name}/user/{username}/allow-replication" : {
      "put" : {
        "tags" : [ "dbaas" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/dbaas-postgres-users"
                }
              }
            }
          }
        },
        "description" : null,
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "service-name",
          "schema" : {
            "$ref" : "#/components/schemas/dbaas-service-name"
          }
        }, {
          "in" : "path",
          "required" : true,
          "name" : "username",
          "schema" : {
            "$ref" : "#/components/schemas/dbaas-user-username"
          }
        } ],
        "summary" : "Update access control for one service user",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "allow-replication" : {
                    "type" : "boolean"
                  }
                }
              }
            }
          }
        },
        "operationId" : "update-dbaas-postgres-allow-replication"
      }
    },
    "/iam-role/{id}" : {
      "put" : {
        "tags" : [ "iam" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Update IAM Role",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "description" : {
                    "type" : "string",
                    "description" : "IAM Role description"
                  },
                  "labels" : {
                    "$ref" : "#/components/schemas/labels",
                    "description" : "IAM Role labels"
                  }
                }
              }
            }
          }
        },
        "operationId" : "update-iam-role"
      },
      "get" : {
        "tags" : [ "iam" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/iam-role"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Retrieve IAM Role",
        "operationId" : "get-iam-role"
      },
      "delete" : {
        "tags" : [ "iam" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Delete IAM Role",
        "operationId" : "delete-iam-role"
      }
    },
    "/instance/{id}/{field}" : {
      "delete" : {
        "tags" : [ "instance" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "in" : "path",
          "required" : true,
          "name" : "field",
          "schema" : {
            "type" : "string",
            "enum" : [ "labels" ]
          }
        } ],
        "summary" : "Reset Instance field",
        "operationId" : "reset-instance-field"
      }
    },
    "/instance-pool/{id}/{field}" : {
      "delete" : {
        "tags" : [ "instance-pool" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "in" : "path",
          "required" : true,
          "name" : "field",
          "schema" : {
            "type" : "string",
            "enum" : [ "anti-affinity-groups", "description", "labels", "security-groups", "elastic-ips", "private-networks", "ssh-key", "user-data", "deploy-target", "ipv6-enabled" ]
          }
        } ],
        "summary" : "Reset an Instance Pool field to its default value",
        "operationId" : "reset-instance-pool-field"
      }
    },
    "/instance/{id}:remove-protection" : {
      "put" : {
        "tags" : [ "instance" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Remove instance destruction protection",
        "operationId" : "remove-instance-protection"
      }
    },
    "/dbaas-kafka/{name}/topic/acl-config" : {
      "post" : {
        "tags" : [ "dbaas" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : null,
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "name",
          "schema" : {
            "$ref" : "#/components/schemas/dbaas-service-name"
          }
        } ],
        "summary" : "Add a Kafka topic ACL entry",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/dbaas-kafka-topic-acl-entry"
              }
            }
          }
        },
        "operationId" : "create-dbaas-kafka-topic-acl-config"
      }
    },
    "/snapshot" : {
      "get" : {
        "tags" : [ "snapshot" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "snapshots" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/snapshot"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ ],
        "summary" : "List Snapshots",
        "operationId" : "list-snapshots"
      }
    },
    "/operation/{id}" : {
      "get" : {
        "tags" : [ "operation" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Retrieve Operation details",
        "operationId" : "get-operation"
      }
    },
    "/dns-domain/{id}/zone" : {
      "get" : {
        "tags" : [ "dns" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "zone-file" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Retrieve DNS domain zone file",
        "operationId" : "get-dns-domain-zone-file"
      }
    },
    "/security-group/{id}:remove-source" : {
      "put" : {
        "tags" : [ "security-group" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Remove an external source from a Security Group",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "cidr" : {
                    "type" : "string",
                    "description" : "CIDR-formatted network to remove"
                  }
                },
                "required" : [ "cidr" ]
              }
            }
          }
        },
        "operationId" : "remove-external-source-from-security-group"
      }
    },
    "/iam-organization-policy" : {
      "get" : {
        "tags" : [ "iam" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/iam-policy"
                  }
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ ],
        "summary" : "Retrieve IAM Organization Policy",
        "operationId" : "get-iam-organization-policy"
      },
      "put" : {
        "tags" : [ "iam" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ ],
        "summary" : "Update IAM Organization Policy",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/iam-policy"
              }
            }
          }
        },
        "operationId" : "update-iam-organization-policy"
      }
    },
    "/dbaas-service-logs/{service-name}" : {
      "post" : {
        "tags" : [ "dbaas" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/dbaas-service-logs"
                }
              }
            }
          }
        },
        "description" : "Get logs of DBaaS service",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "service-name",
          "schema" : {
            "type" : "string"
          }
        } ],
        "summary" : "Get logs of DBaaS service",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "limit" : {
                    "type" : "integer",
                    "format" : "int64",
                    "minimum" : 1,
                    "maximum" : 500,
                    "exclusiveMinimum" : false,
                    "exclusiveMaximum" : false,
                    "description" : "How many log entries to receive at most, up to 500 (default: 100)"
                  },
                  "sort-order" : {
                    "$ref" : "#/components/schemas/enum-sort-order",
                    "description" : "Sort order for log messages (default: desc)"
                  },
                  "offset" : {
                    "type" : "string",
                    "description" : "Opaque offset identifier"
                  }
                }
              }
            }
          }
        },
        "operationId" : "get-dbaas-service-logs"
      }
    },
    "/template/{id}" : {
      "delete" : {
        "tags" : [ "template" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Delete a Template",
        "operationId" : "delete-template"
      },
      "post" : {
        "tags" : [ "template" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Copy a Template from a zone to another",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "target-zone" : {
                    "$ref" : "#/components/schemas/zone",
                    "description" : "Target Zone name"
                  }
                },
                "required" : [ "target-zone" ]
              }
            }
          }
        },
        "operationId" : "copy-template"
      },
      "put" : {
        "tags" : [ "template" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Update template attributes",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string",
                    "maxLength" : 255,
                    "minLength" : 1,
                    "description" : "Template name"
                  },
                  "description" : {
                    "type" : "string",
                    "maxLength" : 255,
                    "description" : "Template Description"
                  }
                }
              }
            }
          }
        },
        "operationId" : "update-template"
      },
      "get" : {
        "tags" : [ "template" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/template"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Retrieve Template details",
        "operationId" : "get-template"
      }
    },
    "/dbaas-postgres/{name}/maintenance/start" : {
      "put" : {
        "tags" : [ "dbaas" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : null,
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "name",
          "schema" : {
            "$ref" : "#/components/schemas/dbaas-service-name"
          }
        } ],
        "summary" : "Initiate PostgreSQL maintenance update",
        "operationId" : "start-dbaas-pg-maintenance"
      }
    },
    "/reverse-dns/instance/{id}" : {
      "post" : {
        "tags" : [ "reverse-dns" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Update/Create the PTR DNS record for an instance",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "domain-name" : {
                    "type" : "string",
                    "maxLength" : 253,
                    "minLength" : 1
                  }
                }
              }
            }
          }
        },
        "operationId" : "update-reverse-dns-instance"
      },
      "get" : {
        "tags" : [ "reverse-dns" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/reverse-dns-record"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Query the PTR DNS records for an instance",
        "operationId" : "get-reverse-dns-instance"
      },
      "delete" : {
        "tags" : [ "reverse-dns" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Delete the PTR DNS record for an instance",
        "operationId" : "delete-reverse-dns-instance"
      }
    },
    "/instance-pool/{id}:evict" : {
      "put" : {
        "tags" : [ "instance-pool" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "This operation evicts the specified Compute instances member from the Instance Pool, shrinking it to `&lt;current pool size&gt; - &lt;# evicted members&gt;`.",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Evict Instance Pool members",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "instances" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string",
                      "format" : "uuid"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId" : "evict-instance-pool-members"
      }
    },
    "/security-group/{id}:detach" : {
      "put" : {
        "tags" : [ "security-group" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Detach a Compute instance from a Security Group",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "instance" : {
                    "$ref" : "#/components/schemas/instance",
                    "description" : "Compute instance"
                  }
                },
                "required" : [ "instance" ]
              }
            }
          }
        },
        "operationId" : "detach-instance-from-security-group"
      }
    },
    "/sks-cluster/{id}/nodepool/{sks-nodepool-id}:evict" : {
      "put" : {
        "tags" : [ "sks" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "This operation evicts the specified Compute instances member from the Nodepool, shrinking it to `&lt;current nodepool size&gt; - &lt;# evicted members&gt;`.",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "in" : "path",
          "required" : true,
          "name" : "sks-nodepool-id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Evict Nodepool members",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "instances" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string",
                      "format" : "uuid"
                    },
                    "uniqueItems" : true
                  }
                }
              }
            }
          }
        },
        "operationId" : "evict-sks-nodepool-members"
      }
    },
    "/dbaas-kafka/{name}/schema-registry/acl-config/{acl-id}" : {
      "delete" : {
        "tags" : [ "dbaas" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : null,
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "name",
          "schema" : {
            "$ref" : "#/components/schemas/dbaas-service-name"
          }
        }, {
          "in" : "path",
          "required" : true,
          "name" : "acl-id",
          "schema" : {
            "$ref" : "#/components/schemas/dbaas-kafka-acl-id"
          }
        } ],
        "summary" : "Delete a Kafka ACL entry",
        "operationId" : "delete-dbaas-kafka-schema-registry-acl-config"
      }
    },
    "/dns-domain/{id}" : {
      "delete" : {
        "tags" : [ "dns" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Delete DNS Domain",
        "operationId" : "delete-dns-domain"
      },
      "get" : {
        "tags" : [ "dns" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/dns-domain"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Retrieve DNS domain details",
        "operationId" : "get-dns-domain"
      }
    },
    "/dbaas-kafka/{service-name}/user/{username}" : {
      "delete" : {
        "tags" : [ "dbaas" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : null,
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "service-name",
          "schema" : {
            "$ref" : "#/components/schemas/dbaas-service-name"
          }
        }, {
          "in" : "path",
          "required" : true,
          "name" : "username",
          "schema" : {
            "$ref" : "#/components/schemas/dbaas-user-username"
          }
        } ],
        "summary" : "Delete a DBaaS kafka user",
        "operationId" : "delete-dbaas-kafka-user"
      }
    },
    "/dbaas-service-type/{service-type-name}" : {
      "get" : {
        "tags" : [ "dbaas" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/dbaas-service-type"
                }
              }
            }
          }
        },
        "description" : "Get a DBaaS service type",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "service-type-name",
          "schema" : {
            "type" : "string"
          }
        } ],
        "summary" : "Get a DBaaS service type",
        "operationId" : "get-dbaas-service-type"
      }
    },
    "/security-group/{id}:add-source" : {
      "put" : {
        "tags" : [ "security-group" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Add an external source as a member of a Security Group",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "cidr" : {
                    "type" : "string",
                    "description" : "CIDR-formatted network to add"
                  }
                },
                "required" : [ "cidr" ]
              }
            }
          }
        },
        "operationId" : "add-external-source-to-security-group"
      }
    },
    "/dbaas-mysql/{name}/maintenance/start" : {
      "put" : {
        "tags" : [ "dbaas" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : null,
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "name",
          "schema" : {
            "$ref" : "#/components/schemas/dbaas-service-name"
          }
        } ],
        "summary" : "Initiate MySQL maintenance update",
        "operationId" : "start-dbaas-mysql-maintenance"
      }
    },
    "/sos-buckets-usage" : {
      "get" : {
        "tags" : [ "sos" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "sos-buckets-usage" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/sos-bucket-usage"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ ],
        "summary" : "List SOS Buckets Usage",
        "operationId" : "list-sos-buckets-usage"
      }
    },
    "/instance/{id}:reset" : {
      "put" : {
        "tags" : [ "instance" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "This operation re-installs a Compute instance to a base template. If target template is provided it will be used to recreated instance from. Warning: the operation wipes all data stored on the disk.",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Reset a Compute instance to a base/target template",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "template" : {
                    "$ref" : "#/components/schemas/template",
                    "description" : "Template to recreate Instance from"
                  },
                  "disk-size" : {
                    "type" : "integer",
                    "format" : "int64",
                    "minimum" : 10,
                    "maximum" : 50000,
                    "exclusiveMinimum" : false,
                    "exclusiveMaximum" : false,
                    "description" : "Instance disk size in GB"
                  }
                }
              }
            }
          }
        },
        "operationId" : "reset-instance"
      }
    },
    "/ssh-key/{name}" : {
      "delete" : {
        "tags" : [ "ssh-key" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "name",
          "schema" : {
            "type" : "string"
          }
        } ],
        "summary" : "Delete a SSH key",
        "operationId" : "delete-ssh-key"
      },
      "get" : {
        "tags" : [ "ssh-key" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ssh-key"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "name",
          "schema" : {
            "type" : "string"
          }
        } ],
        "summary" : "Retrieve SSH key details",
        "operationId" : "get-ssh-key"
      }
    },
    "/dbaas-service-metrics/{service-name}" : {
      "post" : {
        "tags" : [ "dbaas" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "metrics" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          }
        },
        "description" : "Get metrics of DBaaS service",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "service-name",
          "schema" : {
            "type" : "string"
          }
        } ],
        "summary" : "Get metrics of DBaaS service",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "period" : {
                    "type" : "string",
                    "enum" : [ "hour", "week", "year", "month", "day" ],
                    "description" : "Metrics time period (default: hour)"
                  }
                }
              }
            }
          }
        },
        "operationId" : "get-dbaas-service-metrics"
      }
    },
    "/deploy-target/{id}" : {
      "get" : {
        "tags" : [ "deploy-target" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/deploy-target"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Retrieve Deploy Target details",
        "operationId" : "get-deploy-target"
      }
    },
    "/elastic-ip/{id}:detach" : {
      "put" : {
        "tags" : [ "elastic-ip" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Detach a Compute instance from an Elastic IP",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "instance" : {
                    "$ref" : "#/components/schemas/instance",
                    "description" : "Compute instance"
                  }
                },
                "required" : [ "instance" ]
              }
            }
          }
        },
        "operationId" : "detach-instance-from-elastic-ip"
      }
    },
    "/dbaas-task-migration-check/{service}" : {
      "post" : {
        "tags" : [ "dbaas" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "Create a DBaaS task to check migration",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "service",
          "schema" : {
            "$ref" : "#/components/schemas/dbaas-service-name"
          }
        } ],
        "summary" : "Create a DBaaS task to check migration",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "source-service-uri" : {
                    "type" : "string",
                    "maxLength" : 512,
                    "minLength" : 1,
                    "description" : "Service URI of the source MySQL or PostgreSQL database with admin credentials."
                  },
                  "method" : {
                    "$ref" : "#/components/schemas/enum-migration-method",
                    "description" : "The migration method to be used (currently supported only by Redis and MySQL service types)"
                  },
                  "ignore-dbs" : {
                    "type" : "string",
                    "maxLength" : 2048,
                    "minLength" : 1,
                    "description" : "Comma-separated list of databases, which should be ignored during migration (supported by MySQL only at the moment)"
                  }
                },
                "required" : [ "source-service-uri" ]
              }
            }
          }
        },
        "operationId" : "create-dbaas-task-migration-check"
      }
    },
    "/load-balancer/{id}/service" : {
      "post" : {
        "tags" : [ "network-load-balancer" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Add a Load Balancer Service",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string",
                    "maxLength" : 255,
                    "minLength" : 1,
                    "description" : "Load Balancer Service name"
                  },
                  "description" : {
                    "type" : "string",
                    "maxLength" : 255,
                    "description" : "Load Balancer Service description"
                  },
                  "instance-pool" : {
                    "$ref" : "#/components/schemas/instance-pool",
                    "description" : "Instance Pool to forward traffic to"
                  },
                  "protocol" : {
                    "type" : "string",
                    "enum" : [ "tcp", "udp" ],
                    "description" : "Network traffic protocol"
                  },
                  "strategy" : {
                    "type" : "string",
                    "enum" : [ "round-robin", "source-hash" ],
                    "description" : "Load balancing strategy"
                  },
                  "port" : {
                    "type" : "integer",
                    "format" : "int64",
                    "minimum" : 0,
                    "exclusiveMinimum" : true,
                    "description" : "Port exposed on the Load Balancer's public IP"
                  },
                  "target-port" : {
                    "type" : "integer",
                    "format" : "int64",
                    "minimum" : 0,
                    "exclusiveMinimum" : true,
                    "description" : "Port on which the network traffic will be forwarded to on the receiving instance"
                  },
                  "healthcheck" : {
                    "$ref" : "#/components/schemas/load-balancer-service-healthcheck",
                    "description" : "Healthcheck configuration"
                  }
                },
                "required" : [ "name", "instance-pool", "protocol", "strategy", "port", "target-port", "healthcheck" ]
              }
            }
          }
        },
        "operationId" : "add-service-to-load-balancer"
      }
    },
    "/access-key-operations" : {
      "get" : {
        "tags" : [ "iam" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "access-key-operations" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/access-key-operation"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ ],
        "summary" : "Retrieve IAM Access Key operations and associated tags for the signing key",
        "operationId" : "list-access-key-operations"
      }
    },
    "/ssh-key" : {
      "get" : {
        "tags" : [ "ssh-key" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ssh-keys" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/ssh-key"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ ],
        "summary" : "List SSH keys",
        "operationId" : "list-ssh-keys"
      },
      "post" : {
        "tags" : [ "ssh-key" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ ],
        "summary" : "Import SSH key",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string",
                    "description" : "Private Network name"
                  },
                  "public-key" : {
                    "type" : "string",
                    "description" : "Public key value"
                  }
                },
                "required" : [ "name", "public-key" ]
              }
            }
          }
        },
        "operationId" : "register-ssh-key"
      }
    },
    "/snapshot/{id}:promote" : {
      "post" : {
        "tags" : [ "snapshot", "template" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Promote a Snapshot to a Template",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string",
                    "maxLength" : 255,
                    "minLength" : 1,
                    "description" : "Template name"
                  },
                  "description" : {
                    "type" : "string",
                    "maxLength" : 4096,
                    "minLength" : 1,
                    "description" : "Template description"
                  },
                  "default-user" : {
                    "type" : "string",
                    "maxLength" : 255,
                    "minLength" : 1,
                    "description" : "Template default user"
                  },
                  "ssh-key-enabled" : {
                    "type" : "boolean",
                    "description" : "Enable SSH key-based login in the template"
                  },
                  "password-enabled" : {
                    "type" : "boolean",
                    "description" : "Enable password-based login in the template"
                  }
                },
                "required" : [ "name" ]
              }
            }
          }
        },
        "operationId" : "promote-snapshot-to-template"
      }
    },
    "/sks-cluster" : {
      "post" : {
        "tags" : [ "sks" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ ],
        "summary" : "Create an SKS cluster",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "description" : {
                    "type" : "string",
                    "maxLength" : 255,
                    "minLength" : 1,
                    "description" : "Cluster description"
                  },
                  "labels" : {
                    "$ref" : "#/components/schemas/labels",
                    "description" : "Cluster Labels"
                  },
                  "cni" : {
                    "type" : "string",
                    "enum" : [ "calico", "cilium" ],
                    "description" : "Cluster CNI"
                  },
                  "auto-upgrade" : {
                    "type" : "boolean",
                    "description" : "Enable auto upgrade of the control plane to the latest patch version available"
                  },
                  "oidc" : {
                    "$ref" : "#/components/schemas/sks-oidc",
                    "description" : "Cluster OpenID configmap"
                  },
                  "name" : {
                    "type" : "string",
                    "maxLength" : 255,
                    "minLength" : 1,
                    "description" : "Cluster name"
                  },
                  "level" : {
                    "type" : "string",
                    "enum" : [ "starter", "pro" ],
                    "description" : "Cluster service level"
                  },
                  "addons" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string",
                      "enum" : [ "exoscale-cloud-controller", "metrics-server" ]
                    },
                    "uniqueItems" : true,
                    "description" : "Cluster addons"
                  },
                  "version" : {
                    "type" : "string",
                    "description" : "Control plane Kubernetes version"
                  }
                },
                "required" : [ "name", "level", "version" ]
              }
            }
          }
        },
        "operationId" : "create-sks-cluster"
      },
      "get" : {
        "tags" : [ "sks" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "sks-clusters" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/sks-cluster"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ ],
        "summary" : "List SKS clusters",
        "operationId" : "list-sks-clusters"
      }
    },
    "/dbaas-integration/{id}" : {
      "delete" : {
        "tags" : [ "dbaas" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "Delete a DBaaS Integration",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Delete a DBaaS Integration",
        "operationId" : "delete-dbaas-integration"
      },
      "put" : {
        "tags" : [ "dbaas" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "Update a existing DBaaS integration",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Update a existing DBaaS integration",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "settings" : {
                    "type" : "object",
                    "description" : "Integration settings"
                  }
                },
                "required" : [ "settings" ]
              }
            }
          }
        },
        "operationId" : "update-dbaas-integration"
      },
      "get" : {
        "tags" : [ "dbaas" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/dbaas-integration"
                }
              }
            }
          }
        },
        "description" : "Get a DBaaS Integration",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Get a DBaaS Integration",
        "operationId" : "get-dbaas-integration"
      }
    },
    "/elastic-ip/{id}:attach" : {
      "put" : {
        "tags" : [ "elastic-ip" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Attach a Compute instance to an Elastic IP",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "instance" : {
                    "$ref" : "#/components/schemas/instance",
                    "description" : "Compute instance"
                  }
                },
                "required" : [ "instance" ]
              }
            }
          }
        },
        "operationId" : "attach-instance-to-elastic-ip"
      }
    },
    "/sks-cluster/{id}" : {
      "delete" : {
        "tags" : [ "sks" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Delete an SKS cluster",
        "operationId" : "delete-sks-cluster"
      },
      "get" : {
        "tags" : [ "sks" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/sks-cluster"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Retrieve SKS cluster details",
        "operationId" : "get-sks-cluster"
      },
      "put" : {
        "tags" : [ "sks" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Update an SKS cluster",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string",
                    "maxLength" : 255,
                    "minLength" : 1,
                    "description" : "Cluster name"
                  },
                  "description" : {
                    "type" : "string",
                    "maxLength" : 255,
                    "minLength" : 1,
                    "nullable" : true,
                    "description" : "Cluster description"
                  },
                  "labels" : {
                    "$ref" : "#/components/schemas/labels",
                    "description" : "Cluster labels"
                  },
                  "auto-upgrade" : {
                    "type" : "boolean",
                    "description" : "Enable auto upgrade of the control plane to the latest patch version available"
                  },
                  "addons" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string",
                      "enum" : [ "exoscale-cloud-controller", "metrics-server" ]
                    },
                    "uniqueItems" : true,
                    "description" : "Cluster addons"
                  }
                }
              }
            }
          }
        },
        "operationId" : "update-sks-cluster"
      }
    },
    "/quota" : {
      "get" : {
        "tags" : [ "quotas" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "quotas" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/quota"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ ],
        "summary" : "List Organization Quotas",
        "operationId" : "list-quotas"
      }
    },
    "/dbaas-integration-settings/{integration-type}/{source-type}/{dest-type}" : {
      "get" : {
        "tags" : [ "dbaas" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "settings" : {
                      "type" : "object",
                      "properties" : {
                        "properties" : {
                          "type" : "object"
                        },
                        "additionalProperties" : {
                          "type" : "boolean"
                        },
                        "type" : {
                          "type" : "string"
                        },
                        "title" : {
                          "type" : "string"
                        }
                      },
                      "description" : "The JSON schema representing the settings for the given integration type, source, and destination service types."
                    }
                  }
                }
              }
            }
          }
        },
        "description" : "Get DBaaS integration settings",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "integration-type",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "required" : true,
          "name" : "source-type",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "required" : true,
          "name" : "dest-type",
          "schema" : {
            "type" : "string"
          }
        } ],
        "summary" : "Get DBaaS integration settings",
        "operationId" : "list-dbaas-integration-settings"
      }
    },
    "/dbaas-settings-pg" : {
      "get" : {
        "tags" : [ "dbaas" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "settings" : {
                      "type" : "object",
                      "properties" : {
                        "pg" : {
                          "type" : "object",
                          "properties" : {
                            "properties" : {
                              "type" : "object"
                            },
                            "additionalProperties" : {
                              "type" : "boolean"
                            },
                            "type" : {
                              "type" : "string"
                            },
                            "title" : {
                              "type" : "string"
                            }
                          },
                          "description" : "postgresql.conf configuration values"
                        },
                        "pglookout" : {
                          "type" : "object",
                          "properties" : {
                            "properties" : {
                              "type" : "object"
                            },
                            "additionalProperties" : {
                              "type" : "boolean"
                            },
                            "type" : {
                              "type" : "string"
                            },
                            "title" : {
                              "type" : "string"
                            }
                          },
                          "description" : "PGLookout settings"
                        },
                        "pgbouncer" : {
                          "type" : "object",
                          "properties" : {
                            "properties" : {
                              "type" : "object"
                            },
                            "additionalProperties" : {
                              "type" : "boolean"
                            },
                            "type" : {
                              "type" : "string"
                            },
                            "title" : {
                              "type" : "string"
                            }
                          },
                          "description" : "PGBouncer connection pooling settings"
                        },
                        "timescaledb" : {
                          "type" : "object",
                          "properties" : {
                            "properties" : {
                              "type" : "object"
                            },
                            "additionalProperties" : {
                              "type" : "boolean"
                            },
                            "type" : {
                              "type" : "string"
                            },
                            "title" : {
                              "type" : "string"
                            }
                          },
                          "description" : "TimescaleDB extension configuration values"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description" : "Get DBaaS PostgreSQL settings",
        "parameters" : [ ],
        "summary" : "Get DBaaS PostgreSQL settings",
        "operationId" : "get-dbaas-settings-pg"
      }
    },
    "/elastic-ip/{id}" : {
      "put" : {
        "tags" : [ "elastic-ip" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Update an Elastic IP",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "description" : {
                    "type" : "string",
                    "maxLength" : 255,
                    "description" : "Elastic IP description"
                  },
                  "healthcheck" : {
                    "$ref" : "#/components/schemas/elastic-ip-healthcheck",
                    "description" : "Elastic IP healthcheck"
                  },
                  "labels" : {
                    "$ref" : "#/components/schemas/labels",
                    "description" : "Elastic IP labels"
                  }
                }
              }
            }
          }
        },
        "operationId" : "update-elastic-ip"
      },
      "get" : {
        "tags" : [ "elastic-ip" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/elastic-ip"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Retrieve Elastic IP details",
        "operationId" : "get-elastic-ip"
      },
      "delete" : {
        "tags" : [ "elastic-ip" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Delete an Elastic IP",
        "operationId" : "delete-elastic-ip"
      }
    },
    "/dbaas-redis/{name}/migration/stop" : {
      "post" : {
        "tags" : [ "dbaas" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : null,
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "name",
          "schema" : {
            "$ref" : "#/components/schemas/dbaas-service-name"
          }
        } ],
        "summary" : "Stop a DBaaS Redis migration",
        "operationId" : "stop-dbaas-redis-migration"
      }
    },
    "/instance/{id}" : {
      "delete" : {
        "tags" : [ "instance" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Delete a Compute instance",
        "operationId" : "delete-instance"
      },
      "put" : {
        "tags" : [ "instance" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Update a Compute instance",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string",
                    "maxLength" : 255,
                    "minLength" : 1,
                    "description" : "Instance name"
                  },
                  "user-data" : {
                    "type" : "string",
                    "minLength" : 1,
                    "description" : "Instance Cloud-init user-data"
                  },
                  "public-ip-assignment" : {
                    "$ref" : "#/components/schemas/public-ip-assignment",
                    "description" : "Assign public IP to the Instance"
                  },
                  "labels" : {
                    "$ref" : "#/components/schemas/labels",
                    "description" : "Instance labels"
                  }
                }
              }
            }
          }
        },
        "operationId" : "update-instance"
      },
      "get" : {
        "tags" : [ "instance" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/instance"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Retrieve Compute instance details",
        "operationId" : "get-instance"
      }
    },
    "/dbaas-mysql/{name}/migration/stop" : {
      "post" : {
        "tags" : [ "dbaas" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : null,
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "name",
          "schema" : {
            "$ref" : "#/components/schemas/dbaas-service-name"
          }
        } ],
        "summary" : "Stop a DBaaS MySQL migration",
        "operationId" : "stop-dbaas-mysql-migration"
      }
    },
    "/dbaas-kafka/{name}/maintenance/start" : {
      "put" : {
        "tags" : [ "dbaas" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : null,
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "name",
          "schema" : {
            "$ref" : "#/components/schemas/dbaas-service-name"
          }
        } ],
        "summary" : "Initiate Kafka maintenance update",
        "operationId" : "start-dbaas-kafka-maintenance"
      }
    },
    "/sks-cluster/{id}/rotate-ccm-credentials" : {
      "put" : {
        "tags" : [ "sks" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Rotate Exoscale CCM credentials",
        "operationId" : "rotate-sks-ccm-credentials"
      }
    },
    "/iam-role/{id}:policy" : {
      "put" : {
        "tags" : [ "iam" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Update IAM Role Policy",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/iam-policy"
              }
            }
          }
        },
        "operationId" : "update-iam-role-policy"
      }
    },
    "/sks-cluster/{id}/{field}" : {
      "delete" : {
        "tags" : [ "sks" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "in" : "path",
          "required" : true,
          "name" : "field",
          "schema" : {
            "type" : "string",
            "enum" : [ "description", "labels" ]
          }
        } ],
        "summary" : "Reset an SKS cluster field to its default value",
        "operationId" : "reset-sks-cluster-field"
      }
    },
    "/dbaas-migration-status/{name}" : {
      "get" : {
        "tags" : [ "dbaas" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/dbaas-migration-status"
                }
              }
            }
          }
        },
        "description" : "Get a DBaaS migration status",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "name",
          "schema" : {
            "$ref" : "#/components/schemas/dbaas-service-name"
          }
        } ],
        "summary" : "Get a DBaaS migration status",
        "operationId" : "get-dbaas-migration-status"
      }
    },
    "/load-balancer/{id}" : {
      "put" : {
        "tags" : [ "network-load-balancer" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Update a Load Balancer",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string",
                    "maxLength" : 255
                  },
                  "description" : {
                    "type" : "string",
                    "maxLength" : 255,
                    "nullable" : true
                  },
                  "labels" : {
                    "$ref" : "#/components/schemas/labels"
                  }
                }
              }
            }
          }
        },
        "operationId" : "update-load-balancer"
      },
      "delete" : {
        "tags" : [ "network-load-balancer" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Delete a Load Balancer",
        "operationId" : "delete-load-balancer"
      },
      "get" : {
        "tags" : [ "network-load-balancer" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/load-balancer"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Retrieve Load Balancer details",
        "operationId" : "get-load-balancer"
      }
    },
    "/dbaas-service/{name}" : {
      "delete" : {
        "tags" : [ "dbaas" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "Delete a DBaaS service",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "name",
          "schema" : {
            "type" : "string"
          }
        } ],
        "summary" : "Delete a DBaaS service",
        "operationId" : "delete-dbaas-service"
      }
    },
    "/template" : {
      "get" : {
        "tags" : [ "template" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "templates" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/template"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "query",
          "required" : false,
          "name" : "visibility",
          "schema" : {
            "type" : "string",
            "enum" : [ "private", "public" ]
          }
        }, {
          "in" : "query",
          "required" : false,
          "name" : "family",
          "schema" : {
            "type" : "string"
          }
        } ],
        "summary" : "List Templates",
        "operationId" : "list-templates"
      },
      "post" : {
        "tags" : [ "template" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ ],
        "summary" : "Register a Template",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "maintainer" : {
                    "type" : "string",
                    "maxLength" : 255,
                    "minLength" : 1,
                    "description" : "Template maintainer"
                  },
                  "description" : {
                    "type" : "string",
                    "maxLength" : 255,
                    "description" : "Template description"
                  },
                  "ssh-key-enabled" : {
                    "type" : "boolean",
                    "description" : "Enable SSH key-based login"
                  },
                  "name" : {
                    "type" : "string",
                    "maxLength" : 255,
                    "minLength" : 1,
                    "description" : "Template name"
                  },
                  "default-user" : {
                    "type" : "string",
                    "maxLength" : 255,
                    "minLength" : 1,
                    "description" : "Template default user"
                  },
                  "size" : {
                    "type" : "integer",
                    "format" : "int64",
                    "minimum" : 0,
                    "exclusiveMinimum" : true,
                    "description" : "Template size"
                  },
                  "password-enabled" : {
                    "type" : "boolean",
                    "description" : "Enable password-based login"
                  },
                  "build" : {
                    "type" : "string",
                    "maxLength" : 255,
                    "minLength" : 1,
                    "description" : "Template build"
                  },
                  "checksum" : {
                    "type" : "string",
                    "minLength" : 1,
                    "description" : "Template MD5 checksum"
                  },
                  "boot-mode" : {
                    "type" : "string",
                    "enum" : [ "legacy", "uefi" ],
                    "description" : "Boot mode (default: legacy)"
                  },
                  "url" : {
                    "type" : "string",
                    "minLength" : 1,
                    "description" : "Template source URL"
                  },
                  "version" : {
                    "type" : "string",
                    "maxLength" : 255,
                    "minLength" : 1,
                    "description" : "Template version"
                  }
                },
                "required" : [ "name", "url", "checksum", "ssh-key-enabled", "password-enabled" ]
              }
            }
          }
        },
        "operationId" : "register-template"
      }
    },
    "/instance/{id}:reboot" : {
      "put" : {
        "tags" : [ "instance" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Reboot a Compute instance",
        "operationId" : "reboot-instance"
      }
    },
    "/dbaas-settings-kafka" : {
      "get" : {
        "tags" : [ "dbaas" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "settings" : {
                      "type" : "object",
                      "properties" : {
                        "kafka" : {
                          "type" : "object",
                          "properties" : {
                            "properties" : {
                              "type" : "object"
                            },
                            "additionalProperties" : {
                              "type" : "boolean"
                            },
                            "type" : {
                              "type" : "string"
                            },
                            "title" : {
                              "type" : "string"
                            }
                          },
                          "description" : "Kafka broker configuration values"
                        },
                        "kafka-connect" : {
                          "type" : "object",
                          "properties" : {
                            "properties" : {
                              "type" : "object"
                            },
                            "additionalProperties" : {
                              "type" : "boolean"
                            },
                            "type" : {
                              "type" : "string"
                            },
                            "title" : {
                              "type" : "string"
                            }
                          },
                          "description" : "Kafka Connect configuration values"
                        },
                        "kafka-rest" : {
                          "type" : "object",
                          "properties" : {
                            "properties" : {
                              "type" : "object"
                            },
                            "additionalProperties" : {
                              "type" : "boolean"
                            },
                            "type" : {
                              "type" : "string"
                            },
                            "title" : {
                              "type" : "string"
                            }
                          },
                          "description" : "Kafka REST configuration"
                        },
                        "schema-registry" : {
                          "type" : "object",
                          "properties" : {
                            "properties" : {
                              "type" : "object"
                            },
                            "additionalProperties" : {
                              "type" : "boolean"
                            },
                            "type" : {
                              "type" : "string"
                            },
                            "title" : {
                              "type" : "string"
                            }
                          },
                          "description" : "Schema Registry configuration"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description" : "Get DBaaS Kafka settings",
        "parameters" : [ ],
        "summary" : "Get DBaaS Kafka settings",
        "operationId" : "get-dbaas-settings-kafka"
      }
    },
    "/dbaas-settings-opensearch" : {
      "get" : {
        "tags" : [ "dbaas" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "settings" : {
                      "type" : "object",
                      "properties" : {
                        "opensearch" : {
                          "type" : "object",
                          "properties" : {
                            "properties" : {
                              "type" : "object"
                            },
                            "additionalProperties" : {
                              "type" : "boolean"
                            },
                            "type" : {
                              "type" : "string"
                            },
                            "title" : {
                              "type" : "string"
                            }
                          },
                          "description" : "OpenSearch configuration values"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description" : "Get DBaaS OpenSearch settings",
        "parameters" : [ ],
        "summary" : "Get DBaaS OpenSearch settings",
        "operationId" : "get-dbaas-settings-opensearch"
      }
    },
    "/sks-cluster/{id}/nodepool" : {
      "post" : {
        "tags" : [ "sks" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Create a new SKS Nodepool",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "anti-affinity-groups" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/anti-affinity-group"
                    },
                    "uniqueItems" : true,
                    "description" : "Nodepool Anti-affinity Groups"
                  },
                  "description" : {
                    "type" : "string",
                    "maxLength" : 255,
                    "minLength" : 1,
                    "description" : "Nodepool description"
                  },
                  "labels" : {
                    "$ref" : "#/components/schemas/labels",
                    "description" : "Nodepool labels"
                  },
                  "taints" : {
                    "$ref" : "#/components/schemas/sks-nodepool-taints",
                    "description" : "Nodepool taints"
                  },
                  "security-groups" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/security-group"
                    },
                    "uniqueItems" : true,
                    "description" : "Nodepool Security Groups"
                  },
                  "name" : {
                    "type" : "string",
                    "maxLength" : 255,
                    "minLength" : 1,
                    "description" : "Nodepool name"
                  },
                  "instance-type" : {
                    "$ref" : "#/components/schemas/instance-type",
                    "description" : "Nodepool instances type"
                  },
                  "private-networks" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/private-network"
                    },
                    "uniqueItems" : true,
                    "description" : "Nodepool Private Networks"
                  },
                  "size" : {
                    "type" : "integer",
                    "format" : "int64",
                    "minimum" : 0,
                    "exclusiveMinimum" : true,
                    "description" : "Number of instances"
                  },
                  "instance-prefix" : {
                    "type" : "string",
                    "maxLength" : 30,
                    "minLength" : 1,
                    "description" : "Prefix to apply to instances names (default: pool)"
                  },
                  "deploy-target" : {
                    "$ref" : "#/components/schemas/deploy-target",
                    "description" : "Nodepool Deploy Target"
                  },
                  "addons" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string",
                      "enum" : [ "storage-lvm" ]
                    },
                    "uniqueItems" : true,
                    "description" : "Nodepool addons"
                  },
                  "disk-size" : {
                    "type" : "integer",
                    "format" : "int64",
                    "minimum" : 20,
                    "maximum" : 50000,
                    "exclusiveMinimum" : false,
                    "exclusiveMaximum" : false,
                    "description" : "Nodepool instances disk size in GB"
                  }
                },
                "required" : [ "name", "size", "disk-size", "instance-type" ]
              }
            }
          }
        },
        "operationId" : "create-sks-nodepool"
      }
    },
    "/dbaas-opensearch/{name}/maintenance/start" : {
      "put" : {
        "tags" : [ "dbaas" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : null,
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "name",
          "schema" : {
            "$ref" : "#/components/schemas/dbaas-service-name"
          }
        } ],
        "summary" : "Initiate OpenSearch maintenance update",
        "operationId" : "start-dbaas-opensearch-maintenance"
      }
    },
    "/dbaas-kafka/{name}/acl-config" : {
      "get" : {
        "tags" : [ "dbaas" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/dbaas-kafka-acls"
                }
              }
            }
          }
        },
        "description" : null,
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "name",
          "schema" : {
            "$ref" : "#/components/schemas/dbaas-service-name"
          }
        } ],
        "summary" : "Get DBaaS kafka ACL configuration",
        "operationId" : "get-dbaas-kafka-acl-config"
      }
    },
    "/dbaas-kafka/{service-name}/user/{username}/password/reset" : {
      "put" : {
        "tags" : [ "dbaas" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "If no password is provided one will be generated automatically.",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "service-name",
          "schema" : {
            "$ref" : "#/components/schemas/dbaas-service-name"
          }
        }, {
          "in" : "path",
          "required" : true,
          "name" : "username",
          "schema" : {
            "$ref" : "#/components/schemas/dbaas-user-username"
          }
        } ],
        "summary" : "Reset the credentials of a DBaaS Kafka user",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "password" : {
                    "$ref" : "#/components/schemas/dbaas-user-password",
                    "description" : "New password"
                  }
                }
              }
            }
          }
        },
        "operationId" : "reset-dbaas-kafka-user-password"
      }
    },
    "/dbaas-opensearch/{name}" : {
      "post" : {
        "tags" : [ "dbaas" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "Create a DBaaS OpenSearch service",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "name",
          "schema" : {
            "$ref" : "#/components/schemas/dbaas-service-name"
          }
        } ],
        "summary" : "Create a DBaaS OpenSearch service",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "max-index-count" : {
                    "type" : "integer",
                    "format" : "int64",
                    "minimum" : 0,
                    "exclusiveMinimum" : false,
                    "description" : "Maximum number of indexes to keep before deleting the oldest one"
                  },
                  "integrations" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "$ref" : "#/components/schemas/enum-integration-types",
                          "description" : "Integration type"
                        },
                        "source-service" : {
                          "$ref" : "#/components/schemas/dbaas-service-name",
                          "description" : "A source service"
                        },
                        "dest-service" : {
                          "$ref" : "#/components/schemas/dbaas-service-name",
                          "description" : "A destination service"
                        },
                        "settings" : {
                          "type" : "object",
                          "description" : "Integration settings"
                        }
                      },
                      "required" : [ "type" ]
                    },
                    "description" : "Service integrations to enable for the service. Some integration types affect how a service is created and they must be provided as part of the creation call instead of being defined later."
                  },
                  "keep-index-refresh-interval" : {
                    "type" : "boolean",
                    "description" : "Aiven automation resets index.refresh_interval to default value for every index to be sure that indices are always visible to search. If it doesn't fit your case, you can disable this by setting up this flag to true."
                  },
                  "ip-filter" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    },
                    "description" : "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'"
                  },
                  "termination-protection" : {
                    "type" : "boolean",
                    "description" : "Service is protected against termination and powering off"
                  },
                  "fork-from-service" : {
                    "$ref" : "#/components/schemas/dbaas-service-name",
                    "description" : "Service to fork from"
                  },
                  "index-patterns" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "max-index-count" : {
                          "type" : "integer",
                          "format" : "int64",
                          "minimum" : 0,
                          "exclusiveMinimum" : false,
                          "description" : "Maximum number of indexes to keep"
                        },
                        "sorting-algorithm" : {
                          "type" : "string",
                          "enum" : [ "alphabetical", "creation_date" ],
                          "description" : "Deletion sorting algorithm"
                        },
                        "pattern" : {
                          "type" : "string",
                          "maxLength" : 1024,
                          "description" : "fnmatch pattern"
                        }
                      }
                    },
                    "description" : "Allows you to create glob style patterns and set a max number of indexes matching this pattern you want to keep. Creating indexes exceeding this value will cause the oldest one to get deleted. You could for example create a pattern looking like 'logs.?' and then create index logs.1, logs.2 etc, it will delete logs.1 once you create logs.6. Do note 'logs.?' does not apply to logs.10. Note: Setting max_index_count to 0 will do nothing and the pattern gets ignored."
                  },
                  "maintenance" : {
                    "type" : "object",
                    "properties" : {
                      "dow" : {
                        "type" : "string",
                        "enum" : [ "saturday", "tuesday", "never", "wednesday", "sunday", "friday", "monday", "thursday" ],
                        "description" : "Day of week for installing updates"
                      },
                      "time" : {
                        "type" : "string",
                        "maxLength" : 8,
                        "minLength" : 8,
                        "description" : "Time for installing updates, UTC"
                      }
                    },
                    "required" : [ "dow", "time" ],
                    "description" : "Automatic maintenance settings"
                  },
                  "index-template" : {
                    "type" : "object",
                    "properties" : {
                      "mapping-nested-objects-limit" : {
                        "type" : "integer",
                        "format" : "int64",
                        "minimum" : 0,
                        "maximum" : 100000,
                        "exclusiveMinimum" : false,
                        "exclusiveMaximum" : false,
                        "description" : "The maximum number of nested JSON objects that a single document can contain across all nested types. This limit helps to prevent out of memory errors when a document contains too many nested objects. Default is 10000."
                      },
                      "number-of-replicas" : {
                        "type" : "integer",
                        "format" : "int64",
                        "minimum" : 0,
                        "maximum" : 29,
                        "exclusiveMinimum" : false,
                        "exclusiveMaximum" : false,
                        "description" : "The number of replicas each primary shard has."
                      },
                      "number-of-shards" : {
                        "type" : "integer",
                        "format" : "int64",
                        "minimum" : 1,
                        "maximum" : 1024,
                        "exclusiveMinimum" : false,
                        "exclusiveMaximum" : false,
                        "description" : "The number of primary shards that an index should have."
                      }
                    },
                    "description" : "Template settings for all new indexes"
                  },
                  "opensearch-settings" : {
                    "type" : "object",
                    "description" : "OpenSearch-specific settings"
                  },
                  "version" : {
                    "type" : "string",
                    "minLength" : 1,
                    "description" : "OpenSearch major version"
                  },
                  "recovery-backup-name" : {
                    "type" : "string",
                    "minLength" : 1,
                    "description" : "Name of a backup to recover from for services that support backup names"
                  },
                  "plan" : {
                    "type" : "string",
                    "maxLength" : 128,
                    "minLength" : 1,
                    "description" : "Subscription plan"
                  },
                  "opensearch-dashboards" : {
                    "type" : "object",
                    "properties" : {
                      "opensearch-request-timeout" : {
                        "type" : "integer",
                        "format" : "int64",
                        "minimum" : 5000,
                        "maximum" : 120000,
                        "exclusiveMinimum" : false,
                        "exclusiveMaximum" : false,
                        "description" : "Timeout in milliseconds for requests made by OpenSearch Dashboards towards OpenSearch (default: 30000)"
                      },
                      "enabled" : {
                        "type" : "boolean",
                        "description" : "Enable or disable OpenSearch Dashboards (default: true)"
                      },
                      "max-old-space-size" : {
                        "type" : "integer",
                        "format" : "int64",
                        "minimum" : 64,
                        "maximum" : 1024,
                        "exclusiveMinimum" : false,
                        "exclusiveMaximum" : false,
                        "description" : "Limits the maximum amount of memory (in MiB) the OpenSearch Dashboards process can use. This sets the max_old_space_size option of the nodejs running the OpenSearch Dashboards. Note: the memory reserved by OpenSearch Dashboards is not available for OpenSearch. (default: 128)"
                      }
                    },
                    "description" : "OpenSearch Dashboards settings"
                  }
                },
                "required" : [ "plan" ]
              }
            }
          }
        },
        "operationId" : "create-dbaas-service-opensearch"
      },
      "get" : {
        "tags" : [ "dbaas" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/dbaas-service-opensearch"
                }
              }
            }
          }
        },
        "description" : "Get a DBaaS OpenSearch service",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "name",
          "schema" : {
            "$ref" : "#/components/schemas/dbaas-service-name"
          }
        } ],
        "summary" : "Get a DBaaS OpenSearch service",
        "operationId" : "get-dbaas-service-opensearch"
      },
      "put" : {
        "tags" : [ "dbaas" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "Update a DBaaS OpenSearch service",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "name",
          "schema" : {
            "$ref" : "#/components/schemas/dbaas-service-name"
          }
        } ],
        "summary" : "Update a DBaaS OpenSearch service",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "max-index-count" : {
                    "type" : "integer",
                    "format" : "int64",
                    "minimum" : 0,
                    "exclusiveMinimum" : false,
                    "description" : "Maximum number of indexes to keep before deleting the oldest one"
                  },
                  "keep-index-refresh-interval" : {
                    "type" : "boolean",
                    "description" : "Aiven automation resets index.refresh_interval to default value for every index to be sure that indices are always visible to search. If it doesn't fit your case, you can disable this by setting up this flag to true."
                  },
                  "ip-filter" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    },
                    "description" : "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'"
                  },
                  "termination-protection" : {
                    "type" : "boolean",
                    "description" : "Service is protected against termination and powering off"
                  },
                  "index-patterns" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "max-index-count" : {
                          "type" : "integer",
                          "format" : "int64",
                          "minimum" : 0,
                          "exclusiveMinimum" : false,
                          "description" : "Maximum number of indexes to keep"
                        },
                        "sorting-algorithm" : {
                          "type" : "string",
                          "enum" : [ "alphabetical", "creation_date" ],
                          "description" : "Deletion sorting algorithm"
                        },
                        "pattern" : {
                          "type" : "string",
                          "maxLength" : 1024,
                          "description" : "fnmatch pattern"
                        }
                      }
                    },
                    "description" : "Allows you to create glob style patterns and set a max number of indexes matching this pattern you want to keep. Creating indexes exceeding this value will cause the oldest one to get deleted. You could for example create a pattern looking like 'logs.?' and then create index logs.1, logs.2 etc, it will delete logs.1 once you create logs.6. Do note 'logs.?' does not apply to logs.10. Note: Setting max_index_count to 0 will do nothing and the pattern gets ignored."
                  },
                  "maintenance" : {
                    "type" : "object",
                    "properties" : {
                      "dow" : {
                        "type" : "string",
                        "enum" : [ "saturday", "tuesday", "never", "wednesday", "sunday", "friday", "monday", "thursday" ],
                        "description" : "Day of week for installing updates"
                      },
                      "time" : {
                        "type" : "string",
                        "maxLength" : 8,
                        "minLength" : 8,
                        "description" : "Time for installing updates, UTC"
                      }
                    },
                    "required" : [ "dow", "time" ],
                    "description" : "Automatic maintenance settings"
                  },
                  "index-template" : {
                    "type" : "object",
                    "properties" : {
                      "mapping-nested-objects-limit" : {
                        "type" : "integer",
                        "format" : "int64",
                        "minimum" : 0,
                        "maximum" : 100000,
                        "exclusiveMinimum" : false,
                        "exclusiveMaximum" : false,
                        "description" : "The maximum number of nested JSON objects that a single document can contain across all nested types. This limit helps to prevent out of memory errors when a document contains too many nested objects. Default is 10000."
                      },
                      "number-of-replicas" : {
                        "type" : "integer",
                        "format" : "int64",
                        "minimum" : 0,
                        "maximum" : 29,
                        "exclusiveMinimum" : false,
                        "exclusiveMaximum" : false,
                        "description" : "The number of replicas each primary shard has."
                      },
                      "number-of-shards" : {
                        "type" : "integer",
                        "format" : "int64",
                        "minimum" : 1,
                        "maximum" : 1024,
                        "exclusiveMinimum" : false,
                        "exclusiveMaximum" : false,
                        "description" : "The number of primary shards that an index should have."
                      }
                    },
                    "description" : "Template settings for all new indexes"
                  },
                  "opensearch-settings" : {
                    "type" : "object",
                    "description" : "OpenSearch-specific settings"
                  },
                  "plan" : {
                    "type" : "string",
                    "maxLength" : 128,
                    "minLength" : 1,
                    "description" : "Subscription plan"
                  },
                  "opensearch-dashboards" : {
                    "type" : "object",
                    "properties" : {
                      "opensearch-request-timeout" : {
                        "type" : "integer",
                        "format" : "int64",
                        "minimum" : 5000,
                        "maximum" : 120000,
                        "exclusiveMinimum" : false,
                        "exclusiveMaximum" : false,
                        "description" : "Timeout in milliseconds for requests made by OpenSearch Dashboards towards OpenSearch (default: 30000)"
                      },
                      "enabled" : {
                        "type" : "boolean",
                        "description" : "Enable or disable OpenSearch Dashboards (default: true)"
                      },
                      "max-old-space-size" : {
                        "type" : "integer",
                        "format" : "int64",
                        "minimum" : 64,
                        "maximum" : 1024,
                        "exclusiveMinimum" : false,
                        "exclusiveMaximum" : false,
                        "description" : "Limits the maximum amount of memory (in MiB) the OpenSearch Dashboards process can use. This sets the max_old_space_size option of the nodejs running the OpenSearch Dashboards. Note: the memory reserved by OpenSearch Dashboards is not available for OpenSearch. (default: 128)"
                      }
                    },
                    "description" : "OpenSearch Dashboards settings"
                  }
                }
              }
            }
          }
        },
        "operationId" : "update-dbaas-service-opensearch"
      }
    },
    "/sks-cluster/{id}/nodepool/{sks-nodepool-id}/{field}" : {
      "delete" : {
        "tags" : [ "sks" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "in" : "path",
          "required" : true,
          "name" : "sks-nodepool-id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "in" : "path",
          "required" : true,
          "name" : "field",
          "schema" : {
            "type" : "string",
            "enum" : [ "anti-affinity-groups", "description", "labels", "security-groups", "private-networks", "deploy-target" ]
          }
        } ],
        "summary" : "Reset an SKS Nodepool field to its default value",
        "operationId" : "reset-sks-nodepool-field"
      }
    },
    "/dbaas-redis/{name}" : {
      "put" : {
        "tags" : [ "dbaas" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "Update a DBaaS Redis service",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "name",
          "schema" : {
            "$ref" : "#/components/schemas/dbaas-service-name"
          }
        } ],
        "summary" : "Update a DBaaS Redis service",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "maintenance" : {
                    "type" : "object",
                    "properties" : {
                      "dow" : {
                        "type" : "string",
                        "enum" : [ "saturday", "tuesday", "never", "wednesday", "sunday", "friday", "monday", "thursday" ],
                        "description" : "Day of week for installing updates"
                      },
                      "time" : {
                        "type" : "string",
                        "maxLength" : 8,
                        "minLength" : 8,
                        "description" : "Time for installing updates, UTC"
                      }
                    },
                    "required" : [ "dow", "time" ],
                    "description" : "Automatic maintenance settings"
                  },
                  "plan" : {
                    "type" : "string",
                    "maxLength" : 128,
                    "minLength" : 1,
                    "description" : "Subscription plan"
                  },
                  "termination-protection" : {
                    "type" : "boolean",
                    "description" : "Service is protected against termination and powering off"
                  },
                  "ip-filter" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    },
                    "description" : "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'"
                  },
                  "migration" : {
                    "type" : "object",
                    "properties" : {
                      "host" : {
                        "type" : "string",
                        "maxLength" : 255,
                        "minLength" : 1,
                        "description" : "Hostname or IP address of the server where to migrate data from"
                      },
                      "port" : {
                        "type" : "integer",
                        "format" : "int64",
                        "minimum" : 1,
                        "maximum" : 65535,
                        "exclusiveMinimum" : false,
                        "exclusiveMaximum" : false,
                        "description" : "Port number of the server where to migrate data from"
                      },
                      "password" : {
                        "type" : "string",
                        "maxLength" : 255,
                        "minLength" : 1,
                        "description" : "Password for authentication with the server where to migrate data from"
                      },
                      "ssl" : {
                        "type" : "boolean",
                        "description" : "The server where to migrate data from is secured with SSL"
                      },
                      "username" : {
                        "type" : "string",
                        "maxLength" : 255,
                        "minLength" : 1,
                        "description" : "User name for authentication with the server where to migrate data from"
                      },
                      "dbname" : {
                        "type" : "string",
                        "maxLength" : 63,
                        "minLength" : 1,
                        "description" : "Database name for bootstrapping the initial connection"
                      },
                      "ignore-dbs" : {
                        "type" : "string",
                        "maxLength" : 2048,
                        "minLength" : 1,
                        "description" : "Comma-separated list of databases, which should be ignored during migration (supported by MySQL only at the moment)"
                      },
                      "method" : {
                        "$ref" : "#/components/schemas/enum-migration-method",
                        "description" : "The migration method to be used"
                      }
                    },
                    "required" : [ "host", "port" ],
                    "description" : "Migrate data from existing server"
                  },
                  "redis-settings" : {
                    "type" : "object",
                    "description" : "Redis.conf settings"
                  }
                }
              }
            }
          }
        },
        "operationId" : "update-dbaas-service-redis"
      },
      "get" : {
        "tags" : [ "dbaas" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/dbaas-service-redis"
                }
              }
            }
          }
        },
        "description" : "Get a DBaaS Redis service",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "name",
          "schema" : {
            "$ref" : "#/components/schemas/dbaas-service-name"
          }
        } ],
        "summary" : "Get a DBaaS Redis service",
        "operationId" : "get-dbaas-service-redis"
      },
      "post" : {
        "tags" : [ "dbaas" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "Create a DBaaS Redis service",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "name",
          "schema" : {
            "$ref" : "#/components/schemas/dbaas-service-name"
          }
        } ],
        "summary" : "Create a DBaaS Redis service",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "integrations" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "$ref" : "#/components/schemas/enum-integration-types",
                          "description" : "Integration type"
                        },
                        "source-service" : {
                          "$ref" : "#/components/schemas/dbaas-service-name",
                          "description" : "A source service"
                        },
                        "dest-service" : {
                          "$ref" : "#/components/schemas/dbaas-service-name",
                          "description" : "A destination service"
                        },
                        "settings" : {
                          "type" : "object",
                          "description" : "Integration settings"
                        }
                      },
                      "required" : [ "type" ]
                    },
                    "description" : "Service integrations to enable for the service. Some integration types affect how a service is created and they must be provided as part of the creation call instead of being defined later."
                  },
                  "redis-settings" : {
                    "type" : "object",
                    "description" : "Redis.conf settings"
                  },
                  "ip-filter" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    },
                    "description" : "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'"
                  },
                  "termination-protection" : {
                    "type" : "boolean",
                    "description" : "Service is protected against termination and powering off"
                  },
                  "fork-from-service" : {
                    "$ref" : "#/components/schemas/dbaas-service-name",
                    "description" : "Service to fork from"
                  },
                  "maintenance" : {
                    "type" : "object",
                    "properties" : {
                      "dow" : {
                        "type" : "string",
                        "enum" : [ "saturday", "tuesday", "never", "wednesday", "sunday", "friday", "monday", "thursday" ],
                        "description" : "Day of week for installing updates"
                      },
                      "time" : {
                        "type" : "string",
                        "maxLength" : 8,
                        "minLength" : 8,
                        "description" : "Time for installing updates, UTC"
                      }
                    },
                    "required" : [ "dow", "time" ],
                    "description" : "Automatic maintenance settings"
                  },
                  "recovery-backup-name" : {
                    "type" : "string",
                    "minLength" : 1,
                    "description" : "Name of a backup to recover from for services that support backup names"
                  },
                  "plan" : {
                    "type" : "string",
                    "maxLength" : 128,
                    "minLength" : 1,
                    "description" : "Subscription plan"
                  },
                  "migration" : {
                    "type" : "object",
                    "properties" : {
                      "host" : {
                        "type" : "string",
                        "maxLength" : 255,
                        "minLength" : 1,
                        "description" : "Hostname or IP address of the server where to migrate data from"
                      },
                      "port" : {
                        "type" : "integer",
                        "format" : "int64",
                        "minimum" : 1,
                        "maximum" : 65535,
                        "exclusiveMinimum" : false,
                        "exclusiveMaximum" : false,
                        "description" : "Port number of the server where to migrate data from"
                      },
                      "password" : {
                        "type" : "string",
                        "maxLength" : 255,
                        "minLength" : 1,
                        "description" : "Password for authentication with the server where to migrate data from"
                      },
                      "ssl" : {
                        "type" : "boolean",
                        "description" : "The server where to migrate data from is secured with SSL"
                      },
                      "username" : {
                        "type" : "string",
                        "maxLength" : 255,
                        "minLength" : 1,
                        "description" : "User name for authentication with the server where to migrate data from"
                      },
                      "dbname" : {
                        "type" : "string",
                        "maxLength" : 63,
                        "minLength" : 1,
                        "description" : "Database name for bootstrapping the initial connection"
                      },
                      "ignore-dbs" : {
                        "type" : "string",
                        "maxLength" : 2048,
                        "minLength" : 1,
                        "description" : "Comma-separated list of databases, which should be ignored during migration (supported by MySQL only at the moment)"
                      },
                      "method" : {
                        "$ref" : "#/components/schemas/enum-migration-method",
                        "description" : "The migration method to be used"
                      }
                    },
                    "required" : [ "host", "port" ],
                    "description" : "Migrate data from existing server"
                  }
                },
                "required" : [ "plan" ]
              }
            }
          }
        },
        "operationId" : "create-dbaas-service-redis"
      }
    },
    "/dbaas-postgres/{name}" : {
      "put" : {
        "tags" : [ "dbaas" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "Update a DBaaS PostgreSQL service",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "name",
          "schema" : {
            "$ref" : "#/components/schemas/dbaas-service-name"
          }
        } ],
        "summary" : "Update a DBaaS PostgreSQL service",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "pgbouncer-settings" : {
                    "type" : "object",
                    "description" : "PGBouncer connection pooling settings"
                  },
                  "backup-schedule" : {
                    "type" : "object",
                    "properties" : {
                      "backup-hour" : {
                        "type" : "integer",
                        "format" : "int64",
                        "minimum" : 0,
                        "maximum" : 23,
                        "exclusiveMinimum" : false,
                        "exclusiveMaximum" : false,
                        "description" : "The hour of day (in UTC) when backup for the service is started. New backup is only started if previous backup has already completed."
                      },
                      "backup-minute" : {
                        "type" : "integer",
                        "format" : "int64",
                        "minimum" : 0,
                        "maximum" : 59,
                        "exclusiveMinimum" : false,
                        "exclusiveMaximum" : false,
                        "description" : "The minute of an hour when backup for the service is started. New backup is only started if previous backup has already completed."
                      }
                    }
                  },
                  "variant" : {
                    "$ref" : "#/components/schemas/enum-pg-variant",
                    "description" : "Variant of the PostgreSQL service, may affect the features that are exposed by default"
                  },
                  "timescaledb-settings" : {
                    "type" : "object",
                    "description" : "TimescaleDB extension configuration values"
                  },
                  "ip-filter" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    },
                    "description" : "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'"
                  },
                  "termination-protection" : {
                    "type" : "boolean",
                    "description" : "Service is protected against termination and powering off"
                  },
                  "synchronous-replication" : {
                    "$ref" : "#/components/schemas/enum-pg-synchronous-replication",
                    "description" : "Synchronous replication type. Note that the service plan also needs to support synchronous replication."
                  },
                  "pglookout-settings" : {
                    "type" : "object",
                    "description" : "PGLookout settings"
                  },
                  "maintenance" : {
                    "type" : "object",
                    "properties" : {
                      "dow" : {
                        "type" : "string",
                        "enum" : [ "saturday", "tuesday", "never", "wednesday", "sunday", "friday", "monday", "thursday" ],
                        "description" : "Day of week for installing updates"
                      },
                      "time" : {
                        "type" : "string",
                        "maxLength" : 8,
                        "minLength" : 8,
                        "description" : "Time for installing updates, UTC"
                      }
                    },
                    "required" : [ "dow", "time" ],
                    "description" : "Automatic maintenance settings"
                  },
                  "plan" : {
                    "type" : "string",
                    "maxLength" : 128,
                    "minLength" : 1,
                    "description" : "Subscription plan"
                  },
                  "work-mem" : {
                    "type" : "integer",
                    "format" : "int64",
                    "minimum" : 1,
                    "maximum" : 1024,
                    "exclusiveMinimum" : false,
                    "exclusiveMaximum" : false,
                    "description" : "Sets the maximum amount of memory to be used by a query operation (such as a sort or hash table) before writing to temporary disk files, in MB. Default is 1MB + 0.075% of total RAM (up to 32MB)."
                  },
                  "shared-buffers-percentage" : {
                    "type" : "integer",
                    "format" : "int64",
                    "minimum" : 20,
                    "maximum" : 60,
                    "exclusiveMinimum" : false,
                    "exclusiveMaximum" : false,
                    "description" : "Percentage of total RAM that the database server uses for shared memory buffers. Valid range is 20-60 (float), which corresponds to 20% - 60%. This setting adjusts the shared_buffers configuration value."
                  },
                  "pg-settings" : {
                    "type" : "object",
                    "description" : "PostgreSQL-specific settings"
                  },
                  "migration" : {
                    "type" : "object",
                    "properties" : {
                      "host" : {
                        "type" : "string",
                        "maxLength" : 255,
                        "minLength" : 1,
                        "description" : "Hostname or IP address of the server where to migrate data from"
                      },
                      "port" : {
                        "type" : "integer",
                        "format" : "int64",
                        "minimum" : 1,
                        "maximum" : 65535,
                        "exclusiveMinimum" : false,
                        "exclusiveMaximum" : false,
                        "description" : "Port number of the server where to migrate data from"
                      },
                      "password" : {
                        "type" : "string",
                        "maxLength" : 255,
                        "minLength" : 1,
                        "description" : "Password for authentication with the server where to migrate data from"
                      },
                      "ssl" : {
                        "type" : "boolean",
                        "description" : "The server where to migrate data from is secured with SSL"
                      },
                      "username" : {
                        "type" : "string",
                        "maxLength" : 255,
                        "minLength" : 1,
                        "description" : "User name for authentication with the server where to migrate data from"
                      },
                      "dbname" : {
                        "type" : "string",
                        "maxLength" : 63,
                        "minLength" : 1,
                        "description" : "Database name for bootstrapping the initial connection"
                      },
                      "ignore-dbs" : {
                        "type" : "string",
                        "maxLength" : 2048,
                        "minLength" : 1,
                        "description" : "Comma-separated list of databases, which should be ignored during migration (supported by MySQL only at the moment)"
                      },
                      "method" : {
                        "$ref" : "#/components/schemas/enum-migration-method",
                        "description" : "The migration method to be used"
                      }
                    },
                    "required" : [ "host", "port" ],
                    "description" : "Migrate data from existing server"
                  }
                }
              }
            }
          }
        },
        "operationId" : "update-dbaas-service-pg"
      },
      "get" : {
        "tags" : [ "dbaas" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/dbaas-service-pg"
                }
              }
            }
          }
        },
        "description" : "Get a DBaaS PostgreSQL service",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "name",
          "schema" : {
            "$ref" : "#/components/schemas/dbaas-service-name"
          }
        } ],
        "summary" : "Get a DBaaS PostgreSQL service",
        "operationId" : "get-dbaas-service-pg"
      },
      "post" : {
        "tags" : [ "dbaas" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : null,
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "name",
          "schema" : {
            "$ref" : "#/components/schemas/dbaas-service-name"
          }
        } ],
        "summary" : "Create a DBaaS PostgreSQL service",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "pgbouncer-settings" : {
                    "type" : "object",
                    "description" : "PGBouncer connection pooling settings"
                  },
                  "backup-schedule" : {
                    "type" : "object",
                    "properties" : {
                      "backup-hour" : {
                        "type" : "integer",
                        "format" : "int64",
                        "minimum" : 0,
                        "maximum" : 23,
                        "exclusiveMinimum" : false,
                        "exclusiveMaximum" : false,
                        "description" : "The hour of day (in UTC) when backup for the service is started. New backup is only started if previous backup has already completed."
                      },
                      "backup-minute" : {
                        "type" : "integer",
                        "format" : "int64",
                        "minimum" : 0,
                        "maximum" : 59,
                        "exclusiveMinimum" : false,
                        "exclusiveMaximum" : false,
                        "description" : "The minute of an hour when backup for the service is started. New backup is only started if previous backup has already completed."
                      }
                    }
                  },
                  "variant" : {
                    "$ref" : "#/components/schemas/enum-pg-variant",
                    "description" : "Variant of the PostgreSQL service, may affect the features that are exposed by default"
                  },
                  "integrations" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "$ref" : "#/components/schemas/enum-integration-types",
                          "description" : "Integration type"
                        },
                        "source-service" : {
                          "$ref" : "#/components/schemas/dbaas-service-name",
                          "description" : "A source service"
                        },
                        "dest-service" : {
                          "$ref" : "#/components/schemas/dbaas-service-name",
                          "description" : "A destination service"
                        },
                        "settings" : {
                          "type" : "object",
                          "description" : "Integration settings"
                        }
                      },
                      "required" : [ "type" ]
                    },
                    "description" : "Service integrations to enable for the service. Some integration types affect how a service is created and they must be provided as part of the creation call instead of being defined later."
                  },
                  "timescaledb-settings" : {
                    "type" : "object",
                    "description" : "TimescaleDB extension configuration values"
                  },
                  "ip-filter" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    },
                    "description" : "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'"
                  },
                  "termination-protection" : {
                    "type" : "boolean",
                    "description" : "Service is protected against termination and powering off"
                  },
                  "fork-from-service" : {
                    "$ref" : "#/components/schemas/dbaas-service-name",
                    "description" : "Service to fork from"
                  },
                  "synchronous-replication" : {
                    "$ref" : "#/components/schemas/enum-pg-synchronous-replication",
                    "description" : "Synchronous replication type. Note that the service plan also needs to support synchronous replication."
                  },
                  "recovery-backup-time" : {
                    "type" : "string",
                    "minLength" : 1,
                    "description" : "ISO time of a backup to recover from for services that support arbitrary times"
                  },
                  "pglookout-settings" : {
                    "type" : "object",
                    "description" : "PGLookout settings"
                  },
                  "maintenance" : {
                    "type" : "object",
                    "properties" : {
                      "dow" : {
                        "type" : "string",
                        "enum" : [ "saturday", "tuesday", "never", "wednesday", "sunday", "friday", "monday", "thursday" ],
                        "description" : "Day of week for installing updates"
                      },
                      "time" : {
                        "type" : "string",
                        "maxLength" : 8,
                        "minLength" : 8,
                        "description" : "Time for installing updates, UTC"
                      }
                    },
                    "required" : [ "dow", "time" ],
                    "description" : "Automatic maintenance settings"
                  },
                  "admin-username" : {
                    "type" : "string",
                    "maxLength" : 64,
                    "minLength" : 1,
                    "pattern" : "^[_A-Za-z0-9][-._A-Za-z0-9]{0,63}$",
                    "description" : "Custom username for admin user. This must be set only when a new service is being created."
                  },
                  "version" : {
                    "type" : "string",
                    "minLength" : 1,
                    "description" : "PostgreSQL major version"
                  },
                  "plan" : {
                    "type" : "string",
                    "maxLength" : 128,
                    "minLength" : 1,
                    "description" : "Subscription plan"
                  },
                  "work-mem" : {
                    "type" : "integer",
                    "format" : "int64",
                    "minimum" : 1,
                    "maximum" : 1024,
                    "exclusiveMinimum" : false,
                    "exclusiveMaximum" : false,
                    "description" : "Sets the maximum amount of memory to be used by a query operation (such as a sort or hash table) before writing to temporary disk files, in MB. Default is 1MB + 0.075% of total RAM (up to 32MB)."
                  },
                  "shared-buffers-percentage" : {
                    "type" : "integer",
                    "format" : "int64",
                    "minimum" : 20,
                    "maximum" : 60,
                    "exclusiveMinimum" : false,
                    "exclusiveMaximum" : false,
                    "description" : "Percentage of total RAM that the database server uses for shared memory buffers. Valid range is 20-60 (float), which corresponds to 20% - 60%. This setting adjusts the shared_buffers configuration value."
                  },
                  "pg-settings" : {
                    "type" : "object",
                    "description" : "PostgreSQL-specific settings"
                  },
                  "admin-password" : {
                    "type" : "string",
                    "maxLength" : 256,
                    "minLength" : 8,
                    "pattern" : "^[a-zA-Z0-9-_]+$",
                    "description" : "Custom password for admin user. Defaults to random string. This must be set only when a new service is being created."
                  },
                  "migration" : {
                    "type" : "object",
                    "properties" : {
                      "host" : {
                        "type" : "string",
                        "maxLength" : 255,
                        "minLength" : 1,
                        "description" : "Hostname or IP address of the server where to migrate data from"
                      },
                      "port" : {
                        "type" : "integer",
                        "format" : "int64",
                        "minimum" : 1,
                        "maximum" : 65535,
                        "exclusiveMinimum" : false,
                        "exclusiveMaximum" : false,
                        "description" : "Port number of the server where to migrate data from"
                      },
                      "password" : {
                        "type" : "string",
                        "maxLength" : 255,
                        "minLength" : 1,
                        "description" : "Password for authentication with the server where to migrate data from"
                      },
                      "ssl" : {
                        "type" : "boolean",
                        "description" : "The server where to migrate data from is secured with SSL"
                      },
                      "username" : {
                        "type" : "string",
                        "maxLength" : 255,
                        "minLength" : 1,
                        "description" : "User name for authentication with the server where to migrate data from"
                      },
                      "dbname" : {
                        "type" : "string",
                        "maxLength" : 63,
                        "minLength" : 1,
                        "description" : "Database name for bootstrapping the initial connection"
                      },
                      "ignore-dbs" : {
                        "type" : "string",
                        "maxLength" : 2048,
                        "minLength" : 1,
                        "description" : "Comma-separated list of databases, which should be ignored during migration (supported by MySQL only at the moment)"
                      },
                      "method" : {
                        "$ref" : "#/components/schemas/enum-migration-method",
                        "description" : "The migration method to be used"
                      }
                    },
                    "required" : [ "host", "port" ],
                    "description" : "Migrate data from existing server"
                  }
                },
                "required" : [ "plan" ]
              }
            }
          }
        },
        "operationId" : "create-dbaas-service-pg"
      }
    },
    "/dbaas-integration" : {
      "post" : {
        "tags" : [ "dbaas" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "Create a new DBaaS integration between two services",
        "parameters" : [ ],
        "summary" : "Create a new DBaaS integration between two services",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "integration-type" : {
                    "type" : "string",
                    "minLength" : 1,
                    "description" : "Integration type"
                  },
                  "source-service" : {
                    "$ref" : "#/components/schemas/dbaas-service-name",
                    "description" : "A source service"
                  },
                  "dest-service" : {
                    "$ref" : "#/components/schemas/dbaas-service-name",
                    "description" : "A destination service"
                  },
                  "settings" : {
                    "type" : "object",
                    "description" : "Integration settings"
                  }
                },
                "required" : [ "integration-type", "source-service", "dest-service" ]
              }
            }
          }
        },
        "operationId" : "create-dbaas-integration"
      }
    },
    "/dbaas-task/{service}/{id}" : {
      "get" : {
        "tags" : [ "dbaas" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "id" : {
                      "type" : "string",
                      "format" : "uuid"
                    },
                    "create-time" : {
                      "type" : "string",
                      "format" : "date-time"
                    },
                    "result" : {
                      "type" : "string"
                    },
                    "result-codes" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "code" : {
                            "type" : "string"
                          },
                          "dbname" : {
                            "type" : "string"
                          }
                        }
                      }
                    },
                    "success" : {
                      "type" : "boolean"
                    },
                    "task-type" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        },
        "description" : "Get a DBaaS task",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "service",
          "schema" : {
            "$ref" : "#/components/schemas/dbaas-service-name"
          }
        }, {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Get a DBaaS task",
        "operationId" : "get-dbaas-task"
      }
    },
    "/sos/{bucket}/presigned-url" : {
      "get" : {
        "tags" : [ "sos" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "url" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        },
        "description" : "Generates Presigned Download URL for SOS object",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "bucket",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "required" : false,
          "name" : "key",
          "schema" : {
            "type" : "string"
          }
        } ],
        "summary" : "Retrieve Presigned Download URL for SOS object",
        "operationId" : "get-sos-presigned-url"
      }
    },
    "/sks-cluster/{id}/rotate-operators-ca" : {
      "put" : {
        "tags" : [ "sks" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Rotate operators certificate authority",
        "operationId" : "rotate-sks-operators-ca"
      }
    },
    "/anti-affinity-group/{id}" : {
      "get" : {
        "tags" : [ "anti-affinity-group" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/anti-affinity-group"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Retrieve Anti-affinity Group details",
        "operationId" : "get-anti-affinity-group"
      },
      "delete" : {
        "tags" : [ "anti-affinity-group" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Delete an Anti-affinity Group",
        "operationId" : "delete-anti-affinity-group"
      }
    },
    "/sks-cluster-version" : {
      "get" : {
        "tags" : [ "sks" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "sks-cluster-versions" : {
                      "type" : "array",
                      "items" : {
                        "type" : "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "query",
          "required" : false,
          "name" : "include-deprecated",
          "schema" : {
            "type" : "string"
          }
        } ],
        "summary" : "List available versions for SKS clusters",
        "operationId" : "list-sks-cluster-versions"
      }
    },
    "/instance" : {
      "post" : {
        "tags" : [ "instance" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ ],
        "summary" : "Create a Compute instance",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "anti-affinity-groups" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/anti-affinity-group"
                    },
                    "uniqueItems" : true,
                    "description" : "Instance Anti-affinity Groups"
                  },
                  "public-ip-assignment" : {
                    "$ref" : "#/components/schemas/public-ip-assignment",
                    "description" : "Assign public IP to the Instance"
                  },
                  "labels" : {
                    "$ref" : "#/components/schemas/labels",
                    "description" : "Instance Labels"
                  },
                  "auto-start" : {
                    "type" : "boolean",
                    "description" : "Start Instance on creation (default: true)"
                  },
                  "security-groups" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/security-group"
                    },
                    "uniqueItems" : true,
                    "description" : "Instance Security Groups"
                  },
                  "name" : {
                    "type" : "string",
                    "maxLength" : 255,
                    "minLength" : 1,
                    "description" : "Instance name"
                  },
                  "instance-type" : {
                    "$ref" : "#/components/schemas/instance-type",
                    "description" : "Instance Type"
                  },
                  "template" : {
                    "$ref" : "#/components/schemas/template",
                    "description" : "Instance Template"
                  },
                  "ssh-key" : {
                    "$ref" : "#/components/schemas/ssh-key",
                    "description" : "Instance SSH Key"
                  },
                  "user-data" : {
                    "type" : "string",
                    "minLength" : 1,
                    "description" : "Instance Cloud-init user-data"
                  },
                  "deploy-target" : {
                    "$ref" : "#/components/schemas/deploy-target",
                    "description" : "Instance Deploy Target"
                  },
                  "ipv6-enabled" : {
                    "type" : "boolean",
                    "description" : "Enable IPv6. DEPRECATED: use `public-ip-assignments`."
                  },
                  "disk-size" : {
                    "type" : "integer",
                    "format" : "int64",
                    "minimum" : 10,
                    "maximum" : 50000,
                    "exclusiveMinimum" : false,
                    "exclusiveMaximum" : false,
                    "description" : "Instance disk size in GB"
                  },
                  "ssh-keys" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/ssh-key"
                    },
                    "uniqueItems" : true,
                    "description" : "Instance SSH Keys"
                  }
                },
                "required" : [ "disk-size", "instance-type", "template" ]
              }
            }
          }
        },
        "operationId" : "create-instance"
      },
      "get" : {
        "tags" : [ "instance" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "instances" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/instance"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "query",
          "required" : false,
          "name" : "manager-id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "in" : "query",
          "required" : false,
          "name" : "manager-type",
          "schema" : {
            "type" : "string",
            "enum" : [ "instance-pool" ]
          }
        }, {
          "in" : "query",
          "required" : false,
          "name" : "ip-address",
          "schema" : {
            "type" : "string"
          }
        } ],
        "summary" : "List Compute instances",
        "operationId" : "list-instances"
      }
    },
    "/iam-role" : {
      "get" : {
        "tags" : [ "iam" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "iam-roles" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/iam-role"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ ],
        "summary" : "List IAM Roles",
        "operationId" : "list-iam-roles"
      },
      "post" : {
        "tags" : [ "iam" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ ],
        "summary" : "Create IAM Role",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string",
                    "description" : "IAM Role name"
                  },
                  "description" : {
                    "type" : "string",
                    "description" : "IAM Role description"
                  },
                  "editable" : {
                    "type" : "boolean",
                    "description" : "Make IAM Role editable (default: true)"
                  },
                  "labels" : {
                    "$ref" : "#/components/schemas/labels",
                    "description" : "IAM Role labels"
                  },
                  "policy" : {
                    "$ref" : "#/components/schemas/iam-policy",
                    "description" : "IAM Role policy"
                  }
                },
                "required" : [ "name" ]
              }
            }
          }
        },
        "operationId" : "create-iam-role"
      }
    },
    "/private-network/{id}/{field}" : {
      "delete" : {
        "tags" : [ "private-network" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "in" : "path",
          "required" : true,
          "name" : "field",
          "schema" : {
            "type" : "string",
            "enum" : [ "labels" ]
          }
        } ],
        "summary" : "Reset Private Network field",
        "operationId" : "reset-private-network-field"
      }
    },
    "/sks-cluster/{id}/upgrade" : {
      "put" : {
        "tags" : [ "sks" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Upgrade an SKS cluster",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "version" : {
                    "type" : "string",
                    "description" : "Control plane Kubernetes version"
                  }
                },
                "required" : [ "version" ]
              }
            }
          }
        },
        "operationId" : "upgrade-sks-cluster"
      }
    },
    "/dbaas-redis/{name}/maintenance/start" : {
      "put" : {
        "tags" : [ "dbaas" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : null,
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "name",
          "schema" : {
            "$ref" : "#/components/schemas/dbaas-service-name"
          }
        } ],
        "summary" : "Initiate Redis maintenance update",
        "operationId" : "start-dbaas-redis-maintenance"
      }
    },
    "/dbaas-kafka/{name}/topic/acl-config/{acl-id}" : {
      "delete" : {
        "tags" : [ "dbaas" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : null,
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "name",
          "schema" : {
            "$ref" : "#/components/schemas/dbaas-service-name"
          }
        }, {
          "in" : "path",
          "required" : true,
          "name" : "acl-id",
          "schema" : {
            "$ref" : "#/components/schemas/dbaas-kafka-acl-id"
          }
        } ],
        "summary" : "Delete a Kafka ACL entry",
        "operationId" : "delete-dbaas-kafka-topic-acl-config"
      }
    },
    "/instance/{instance-id}:revert-snapshot" : {
      "post" : {
        "tags" : [ "instance" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "This operation reverts the snapshot to the Compute instance volume, restoring stored data as it was at the time of the snapshot.\nThe Compute instance must be previously stopped.",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "instance-id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Revert a snapshot for an instance",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "id" : {
                    "type" : "string",
                    "format" : "uuid",
                    "description" : "Snapshot ID"
                  }
                },
                "required" : [ "id" ]
              }
            }
          }
        },
        "operationId" : "revert-instance-to-snapshot"
      }
    },
    "/dbaas-postgres/{service-name}/user/{username}/password/reset" : {
      "put" : {
        "tags" : [ "dbaas" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "If no password is provided one will be generated automatically.",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "service-name",
          "schema" : {
            "$ref" : "#/components/schemas/dbaas-service-name"
          }
        }, {
          "in" : "path",
          "required" : true,
          "name" : "username",
          "schema" : {
            "$ref" : "#/components/schemas/dbaas-user-username"
          }
        } ],
        "summary" : "Reset the credentials of a DBaaS Postgres user",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "password" : {
                    "$ref" : "#/components/schemas/dbaas-user-password",
                    "description" : "New password"
                  }
                }
              }
            }
          }
        },
        "operationId" : "reset-dbaas-postgres-user-password"
      }
    }
  },
  "x-topics" : [ {
    "title" : "API Request Signature",
    "content" : "\nIn order to authenticate legitimate users, the Exoscale API requires incoming requests to be signed using valid Exoscale API account credentials with the following mechanism.\n\n## Signature Mechanism\n\nThe *message* (i.e. content) to sign contains several segments concatenated using a line return character (`\\n`).\n\nAll segments must be included and in the described order, including empty ones depending on the context of the request (e.g. no request body).\n\n* Request method and request URL (path only), separated by a space character\n* Request body\n* Request URL parameters (Query String) values, concatenated without separator. The matching parameter names have to be specified in the resulting signature header `signed-query-args=` pragma, separated by semicolons (e.g. `p1;p2;pN`).\n* Request header values, concatenated without separator (none at the moment, leave empty)\n* Request expiration date in UNIX timestamp format\n\nExample *message* to sign for `GET /v2/resource/a02baf5a-a3e4-49a0-857b-8a08d276c1c0?p1=v1&p2=v2`:\n\n```\nGET /v2/resource/a02baf5a-a3e4-49a0-857b-8a08d276c1c0\nv1v2\n1599140767\n```\n\nThe request signature consists of the base64-encoded [HMAC](https://en.wikipedia.org/wiki/HMAC) hash of the UTF-8 encoded *message* and the Exoscale API secret using the SHA265 function:\n\n```\nsignature = BASE64_ENCODE(HMAC_SHA256(Exoscale API secret, message))\n```\n\nFinally, the computed signature must be added to the API request in a `Authorization` header such as:\n\n```\nAuthorization: EXO2-HMAC-SHA256 credential=<Exoscale API key>,expires=<expiration date UNIX timestamp>,signature=<signature>\n```\n\nExample API query:\n\n```\nGET /v2/resource/a02baf5a-a3e4-49a0-857b-8a08d276c1c0?p1=v1&p2=v2 HTTP/1.1\nHost: api-ch-gva-2.exoscale.com\nAuthorization: EXO2-HMAC-SHA256 credential=EXO29147e9f89102b7ac1e88514,signed-query-args=p1;p2,expires=1599140767,signature=2AOBQsbElQb4FpKT/FM/9T4NobjlmZkSGvvdUth/xlY=\n```\n\n## Reference Implementations\n\nYou can look up the following existing reference implementations:\n\n* Go: [github.com/exoscale/egoscale/api/v2 > `SecurityProviderExoscale.signRequest`](https://github.com/exoscale/egoscale/blob/master/v2/api/security.go)\n* Python: [requests-exoscale-auth > `ExoscaleV2Auth`](https://github.com/exoscale/requests-exoscale-auth/blob/master/exoscale_auth.py)\n\n"
  }, {
    "title" : "Zone local resources",
    "content" : "\nThe API is deployed across multiple zones: `ch-gva-2`, `ch-dk-2`, `de-fra-1`, `de-muc-1`, `at-vie-1`, `bg-sof-1`. When performing a compute call, you should use the relevant zone for your resource.\nFor example: https://api-de-fra-1.exoscale.com/v2/instance would return only the instances from `de-fra-1`, https://api-ch-gva-2.exoscale.com/v2/instance from `ch-gva-2`.\nTo obtain a list of all instances across all zones, you would need to do the corresponding request per zone.\n\nNote that if no zone is specified during the call `ch-gva-2` will be used by default.\n"
  } ]
}