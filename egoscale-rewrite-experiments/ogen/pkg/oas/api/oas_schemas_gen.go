// Code generated by ogen, DO NOT EDIT.

package api

import (
	"net/netip"
	"time"

	"github.com/go-faster/errors"
	"github.com/google/uuid"
)

// IAM Access Key.
// Ref: #/components/schemas/access-key
type AccessKey struct {
	// IAM Access Key name.
	Name OptString `json:"name"`
	// IAM Access Key.
	Key OptString `json:"key"`
	// IAM Access Key Secret.
	Secret OptString `json:"secret"`
	// IAM Access Key type.
	Type OptAccessKeyType `json:"type"`
	// IAM Access Key version.
	Version OptAccessKeyVersion `json:"version"`
	// IAM Access Key tags.
	Tags []string `json:"tags"`
	// IAM Access Key operations.
	Operations []string `json:"operations"`
	// IAM Access Key Resources.
	Resources []AccessKeyResource `json:"resources"`
}

// GetName returns the value of Name.
func (s *AccessKey) GetName() OptString {
	return s.Name
}

// GetKey returns the value of Key.
func (s *AccessKey) GetKey() OptString {
	return s.Key
}

// GetSecret returns the value of Secret.
func (s *AccessKey) GetSecret() OptString {
	return s.Secret
}

// GetType returns the value of Type.
func (s *AccessKey) GetType() OptAccessKeyType {
	return s.Type
}

// GetVersion returns the value of Version.
func (s *AccessKey) GetVersion() OptAccessKeyVersion {
	return s.Version
}

// GetTags returns the value of Tags.
func (s *AccessKey) GetTags() []string {
	return s.Tags
}

// GetOperations returns the value of Operations.
func (s *AccessKey) GetOperations() []string {
	return s.Operations
}

// GetResources returns the value of Resources.
func (s *AccessKey) GetResources() []AccessKeyResource {
	return s.Resources
}

// SetName sets the value of Name.
func (s *AccessKey) SetName(val OptString) {
	s.Name = val
}

// SetKey sets the value of Key.
func (s *AccessKey) SetKey(val OptString) {
	s.Key = val
}

// SetSecret sets the value of Secret.
func (s *AccessKey) SetSecret(val OptString) {
	s.Secret = val
}

// SetType sets the value of Type.
func (s *AccessKey) SetType(val OptAccessKeyType) {
	s.Type = val
}

// SetVersion sets the value of Version.
func (s *AccessKey) SetVersion(val OptAccessKeyVersion) {
	s.Version = val
}

// SetTags sets the value of Tags.
func (s *AccessKey) SetTags(val []string) {
	s.Tags = val
}

// SetOperations sets the value of Operations.
func (s *AccessKey) SetOperations(val []string) {
	s.Operations = val
}

// SetResources sets the value of Resources.
func (s *AccessKey) SetResources(val []AccessKeyResource) {
	s.Resources = val
}

// Access key operation.
// Ref: #/components/schemas/access-key-operation
type AccessKeyOperation struct {
	// Name of the operation.
	Operation OptString `json:"operation"`
	// Tags associated with the operation.
	Tags []string `json:"tags"`
}

// GetOperation returns the value of Operation.
func (s *AccessKeyOperation) GetOperation() OptString {
	return s.Operation
}

// GetTags returns the value of Tags.
func (s *AccessKeyOperation) GetTags() []string {
	return s.Tags
}

// SetOperation sets the value of Operation.
func (s *AccessKeyOperation) SetOperation(val OptString) {
	s.Operation = val
}

// SetTags sets the value of Tags.
func (s *AccessKeyOperation) SetTags(val []string) {
	s.Tags = val
}

// Access key resource.
// Ref: #/components/schemas/access-key-resource
type AccessKeyResource struct {
	// Resource domain.
	Domain OptAccessKeyResourceDomain `json:"domain"`
	// Resource type.
	ResourceMinusType OptAccessKeyResourceResourceMinusType `json:"resource-type"`
	// Resource name.
	ResourceMinusName OptString `json:"resource-name"`
}

// GetDomain returns the value of Domain.
func (s *AccessKeyResource) GetDomain() OptAccessKeyResourceDomain {
	return s.Domain
}

// GetResourceMinusType returns the value of ResourceMinusType.
func (s *AccessKeyResource) GetResourceMinusType() OptAccessKeyResourceResourceMinusType {
	return s.ResourceMinusType
}

// GetResourceMinusName returns the value of ResourceMinusName.
func (s *AccessKeyResource) GetResourceMinusName() OptString {
	return s.ResourceMinusName
}

// SetDomain sets the value of Domain.
func (s *AccessKeyResource) SetDomain(val OptAccessKeyResourceDomain) {
	s.Domain = val
}

// SetResourceMinusType sets the value of ResourceMinusType.
func (s *AccessKeyResource) SetResourceMinusType(val OptAccessKeyResourceResourceMinusType) {
	s.ResourceMinusType = val
}

// SetResourceMinusName sets the value of ResourceMinusName.
func (s *AccessKeyResource) SetResourceMinusName(val OptString) {
	s.ResourceMinusName = val
}

// Resource domain.
type AccessKeyResourceDomain string

const (
	AccessKeyResourceDomainPartner AccessKeyResourceDomain = "partner"
	AccessKeyResourceDomainSos     AccessKeyResourceDomain = "sos"
)

// MarshalText implements encoding.TextMarshaler.
func (s AccessKeyResourceDomain) MarshalText() ([]byte, error) {
	switch s {
	case AccessKeyResourceDomainPartner:
		return []byte(s), nil
	case AccessKeyResourceDomainSos:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *AccessKeyResourceDomain) UnmarshalText(data []byte) error {
	switch AccessKeyResourceDomain(data) {
	case AccessKeyResourceDomainPartner:
		*s = AccessKeyResourceDomainPartner
		return nil
	case AccessKeyResourceDomainSos:
		*s = AccessKeyResourceDomainSos
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Resource type.
type AccessKeyResourceResourceMinusType string

const (
	AccessKeyResourceResourceMinusTypeProduct AccessKeyResourceResourceMinusType = "product"
	AccessKeyResourceResourceMinusTypeBucket  AccessKeyResourceResourceMinusType = "bucket"
)

// MarshalText implements encoding.TextMarshaler.
func (s AccessKeyResourceResourceMinusType) MarshalText() ([]byte, error) {
	switch s {
	case AccessKeyResourceResourceMinusTypeProduct:
		return []byte(s), nil
	case AccessKeyResourceResourceMinusTypeBucket:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *AccessKeyResourceResourceMinusType) UnmarshalText(data []byte) error {
	switch AccessKeyResourceResourceMinusType(data) {
	case AccessKeyResourceResourceMinusTypeProduct:
		*s = AccessKeyResourceResourceMinusTypeProduct
		return nil
	case AccessKeyResourceResourceMinusTypeBucket:
		*s = AccessKeyResourceResourceMinusTypeBucket
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// IAM Access Key type.
type AccessKeyType string

const (
	AccessKeyTypeRestricted   AccessKeyType = "restricted"
	AccessKeyTypeUnrestricted AccessKeyType = "unrestricted"
)

// MarshalText implements encoding.TextMarshaler.
func (s AccessKeyType) MarshalText() ([]byte, error) {
	switch s {
	case AccessKeyTypeRestricted:
		return []byte(s), nil
	case AccessKeyTypeUnrestricted:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *AccessKeyType) UnmarshalText(data []byte) error {
	switch AccessKeyType(data) {
	case AccessKeyTypeRestricted:
		*s = AccessKeyTypeRestricted
		return nil
	case AccessKeyTypeUnrestricted:
		*s = AccessKeyTypeUnrestricted
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// IAM Access Key version.
type AccessKeyVersion string

const (
	AccessKeyVersionV2 AccessKeyVersion = "v2"
	AccessKeyVersionV1 AccessKeyVersion = "v1"
)

// MarshalText implements encoding.TextMarshaler.
func (s AccessKeyVersion) MarshalText() ([]byte, error) {
	switch s {
	case AccessKeyVersionV2:
		return []byte(s), nil
	case AccessKeyVersionV1:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *AccessKeyVersion) UnmarshalText(data []byte) error {
	switch AccessKeyVersion(data) {
	case AccessKeyVersionV2:
		*s = AccessKeyVersionV2
		return nil
	case AccessKeyVersionV1:
		*s = AccessKeyVersionV1
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type AddExternalSourceToSecurityGroupReq struct {
	// CIDR-formatted network to add.
	Cidr string `json:"cidr"`
}

// GetCidr returns the value of Cidr.
func (s *AddExternalSourceToSecurityGroupReq) GetCidr() string {
	return s.Cidr
}

// SetCidr sets the value of Cidr.
func (s *AddExternalSourceToSecurityGroupReq) SetCidr(val string) {
	s.Cidr = val
}

type AddInstanceProtectionOK struct{}

type AddRuleToSecurityGroupReq struct {
	// Network flow direction to match.
	FlowMinusDirection AddRuleToSecurityGroupReqFlowMinusDirection `json:"flow-direction"`
	// Security Group rule description.
	Description OptString `json:"description"`
	// CIDR-formatted network allowed.
	Network OptString `json:"network"`
	// Security Group allowed.
	SecurityMinusGroup OptSecurityGroupResource `json:"security-group"`
	// Network protocol.
	Protocol AddRuleToSecurityGroupReqProtocol `json:"protocol"`
	// ICMP details (default: -1 (ANY)).
	Icmp OptAddRuleToSecurityGroupReqIcmp `json:"icmp"`
	// Start port of the range.
	StartMinusPort OptInt64 `json:"start-port"`
	// End port of the range.
	EndMinusPort OptInt64 `json:"end-port"`
}

// GetFlowMinusDirection returns the value of FlowMinusDirection.
func (s *AddRuleToSecurityGroupReq) GetFlowMinusDirection() AddRuleToSecurityGroupReqFlowMinusDirection {
	return s.FlowMinusDirection
}

// GetDescription returns the value of Description.
func (s *AddRuleToSecurityGroupReq) GetDescription() OptString {
	return s.Description
}

// GetNetwork returns the value of Network.
func (s *AddRuleToSecurityGroupReq) GetNetwork() OptString {
	return s.Network
}

// GetSecurityMinusGroup returns the value of SecurityMinusGroup.
func (s *AddRuleToSecurityGroupReq) GetSecurityMinusGroup() OptSecurityGroupResource {
	return s.SecurityMinusGroup
}

// GetProtocol returns the value of Protocol.
func (s *AddRuleToSecurityGroupReq) GetProtocol() AddRuleToSecurityGroupReqProtocol {
	return s.Protocol
}

// GetIcmp returns the value of Icmp.
func (s *AddRuleToSecurityGroupReq) GetIcmp() OptAddRuleToSecurityGroupReqIcmp {
	return s.Icmp
}

// GetStartMinusPort returns the value of StartMinusPort.
func (s *AddRuleToSecurityGroupReq) GetStartMinusPort() OptInt64 {
	return s.StartMinusPort
}

// GetEndMinusPort returns the value of EndMinusPort.
func (s *AddRuleToSecurityGroupReq) GetEndMinusPort() OptInt64 {
	return s.EndMinusPort
}

// SetFlowMinusDirection sets the value of FlowMinusDirection.
func (s *AddRuleToSecurityGroupReq) SetFlowMinusDirection(val AddRuleToSecurityGroupReqFlowMinusDirection) {
	s.FlowMinusDirection = val
}

// SetDescription sets the value of Description.
func (s *AddRuleToSecurityGroupReq) SetDescription(val OptString) {
	s.Description = val
}

// SetNetwork sets the value of Network.
func (s *AddRuleToSecurityGroupReq) SetNetwork(val OptString) {
	s.Network = val
}

// SetSecurityMinusGroup sets the value of SecurityMinusGroup.
func (s *AddRuleToSecurityGroupReq) SetSecurityMinusGroup(val OptSecurityGroupResource) {
	s.SecurityMinusGroup = val
}

// SetProtocol sets the value of Protocol.
func (s *AddRuleToSecurityGroupReq) SetProtocol(val AddRuleToSecurityGroupReqProtocol) {
	s.Protocol = val
}

// SetIcmp sets the value of Icmp.
func (s *AddRuleToSecurityGroupReq) SetIcmp(val OptAddRuleToSecurityGroupReqIcmp) {
	s.Icmp = val
}

// SetStartMinusPort sets the value of StartMinusPort.
func (s *AddRuleToSecurityGroupReq) SetStartMinusPort(val OptInt64) {
	s.StartMinusPort = val
}

// SetEndMinusPort sets the value of EndMinusPort.
func (s *AddRuleToSecurityGroupReq) SetEndMinusPort(val OptInt64) {
	s.EndMinusPort = val
}

// Network flow direction to match.
type AddRuleToSecurityGroupReqFlowMinusDirection string

const (
	AddRuleToSecurityGroupReqFlowMinusDirectionIngress AddRuleToSecurityGroupReqFlowMinusDirection = "ingress"
	AddRuleToSecurityGroupReqFlowMinusDirectionEgress  AddRuleToSecurityGroupReqFlowMinusDirection = "egress"
)

// MarshalText implements encoding.TextMarshaler.
func (s AddRuleToSecurityGroupReqFlowMinusDirection) MarshalText() ([]byte, error) {
	switch s {
	case AddRuleToSecurityGroupReqFlowMinusDirectionIngress:
		return []byte(s), nil
	case AddRuleToSecurityGroupReqFlowMinusDirectionEgress:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *AddRuleToSecurityGroupReqFlowMinusDirection) UnmarshalText(data []byte) error {
	switch AddRuleToSecurityGroupReqFlowMinusDirection(data) {
	case AddRuleToSecurityGroupReqFlowMinusDirectionIngress:
		*s = AddRuleToSecurityGroupReqFlowMinusDirectionIngress
		return nil
	case AddRuleToSecurityGroupReqFlowMinusDirectionEgress:
		*s = AddRuleToSecurityGroupReqFlowMinusDirectionEgress
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// ICMP details (default: -1 (ANY)).
type AddRuleToSecurityGroupReqIcmp struct {
	Code OptInt64 `json:"code"`
	Type OptInt64 `json:"type"`
}

// GetCode returns the value of Code.
func (s *AddRuleToSecurityGroupReqIcmp) GetCode() OptInt64 {
	return s.Code
}

// GetType returns the value of Type.
func (s *AddRuleToSecurityGroupReqIcmp) GetType() OptInt64 {
	return s.Type
}

// SetCode sets the value of Code.
func (s *AddRuleToSecurityGroupReqIcmp) SetCode(val OptInt64) {
	s.Code = val
}

// SetType sets the value of Type.
func (s *AddRuleToSecurityGroupReqIcmp) SetType(val OptInt64) {
	s.Type = val
}

// Network protocol.
type AddRuleToSecurityGroupReqProtocol string

const (
	AddRuleToSecurityGroupReqProtocolTCP    AddRuleToSecurityGroupReqProtocol = "tcp"
	AddRuleToSecurityGroupReqProtocolEsp    AddRuleToSecurityGroupReqProtocol = "esp"
	AddRuleToSecurityGroupReqProtocolIcmp   AddRuleToSecurityGroupReqProtocol = "icmp"
	AddRuleToSecurityGroupReqProtocolUDP    AddRuleToSecurityGroupReqProtocol = "udp"
	AddRuleToSecurityGroupReqProtocolGre    AddRuleToSecurityGroupReqProtocol = "gre"
	AddRuleToSecurityGroupReqProtocolAh     AddRuleToSecurityGroupReqProtocol = "ah"
	AddRuleToSecurityGroupReqProtocolIpip   AddRuleToSecurityGroupReqProtocol = "ipip"
	AddRuleToSecurityGroupReqProtocolIcmpv6 AddRuleToSecurityGroupReqProtocol = "icmpv6"
)

// MarshalText implements encoding.TextMarshaler.
func (s AddRuleToSecurityGroupReqProtocol) MarshalText() ([]byte, error) {
	switch s {
	case AddRuleToSecurityGroupReqProtocolTCP:
		return []byte(s), nil
	case AddRuleToSecurityGroupReqProtocolEsp:
		return []byte(s), nil
	case AddRuleToSecurityGroupReqProtocolIcmp:
		return []byte(s), nil
	case AddRuleToSecurityGroupReqProtocolUDP:
		return []byte(s), nil
	case AddRuleToSecurityGroupReqProtocolGre:
		return []byte(s), nil
	case AddRuleToSecurityGroupReqProtocolAh:
		return []byte(s), nil
	case AddRuleToSecurityGroupReqProtocolIpip:
		return []byte(s), nil
	case AddRuleToSecurityGroupReqProtocolIcmpv6:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *AddRuleToSecurityGroupReqProtocol) UnmarshalText(data []byte) error {
	switch AddRuleToSecurityGroupReqProtocol(data) {
	case AddRuleToSecurityGroupReqProtocolTCP:
		*s = AddRuleToSecurityGroupReqProtocolTCP
		return nil
	case AddRuleToSecurityGroupReqProtocolEsp:
		*s = AddRuleToSecurityGroupReqProtocolEsp
		return nil
	case AddRuleToSecurityGroupReqProtocolIcmp:
		*s = AddRuleToSecurityGroupReqProtocolIcmp
		return nil
	case AddRuleToSecurityGroupReqProtocolUDP:
		*s = AddRuleToSecurityGroupReqProtocolUDP
		return nil
	case AddRuleToSecurityGroupReqProtocolGre:
		*s = AddRuleToSecurityGroupReqProtocolGre
		return nil
	case AddRuleToSecurityGroupReqProtocolAh:
		*s = AddRuleToSecurityGroupReqProtocolAh
		return nil
	case AddRuleToSecurityGroupReqProtocolIpip:
		*s = AddRuleToSecurityGroupReqProtocolIpip
		return nil
	case AddRuleToSecurityGroupReqProtocolIcmpv6:
		*s = AddRuleToSecurityGroupReqProtocolIcmpv6
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type AttachInstanceToPrivateNetworkReq struct {
	// Static IP address lease for the corresponding network interface.
	IP OptIPv4 `json:"ip"`
	// Compute instance.
	Instance AttachInstanceToPrivateNetworkReqInstance `json:"instance"`
}

// GetIP returns the value of IP.
func (s *AttachInstanceToPrivateNetworkReq) GetIP() OptIPv4 {
	return s.IP
}

// GetInstance returns the value of Instance.
func (s *AttachInstanceToPrivateNetworkReq) GetInstance() AttachInstanceToPrivateNetworkReqInstance {
	return s.Instance
}

// SetIP sets the value of IP.
func (s *AttachInstanceToPrivateNetworkReq) SetIP(val OptIPv4) {
	s.IP = val
}

// SetInstance sets the value of Instance.
func (s *AttachInstanceToPrivateNetworkReq) SetInstance(val AttachInstanceToPrivateNetworkReqInstance) {
	s.Instance = val
}

// Compute instance.
type AttachInstanceToPrivateNetworkReqInstance struct {
	// Instance ID.
	ID OptUUID `json:"id"`
}

// GetID returns the value of ID.
func (s *AttachInstanceToPrivateNetworkReqInstance) GetID() OptUUID {
	return s.ID
}

// SetID sets the value of ID.
func (s *AttachInstanceToPrivateNetworkReqInstance) SetID(val OptUUID) {
	s.ID = val
}

type CopyTemplateReq struct {
	// Target Zone name.
	TargetMinusZone Zone `json:"target-zone"`
}

// GetTargetMinusZone returns the value of TargetMinusZone.
func (s *CopyTemplateReq) GetTargetMinusZone() Zone {
	return s.TargetMinusZone
}

// SetTargetMinusZone sets the value of TargetMinusZone.
func (s *CopyTemplateReq) SetTargetMinusZone(val Zone) {
	s.TargetMinusZone = val
}

type CreateAPIKeyReq struct {
	// IAM API Key Role ID.
	RoleMinusID uuid.UUID `json:"role-id"`
	// IAM API Key Name.
	Name string `json:"name"`
}

// GetRoleMinusID returns the value of RoleMinusID.
func (s *CreateAPIKeyReq) GetRoleMinusID() uuid.UUID {
	return s.RoleMinusID
}

// GetName returns the value of Name.
func (s *CreateAPIKeyReq) GetName() string {
	return s.Name
}

// SetRoleMinusID sets the value of RoleMinusID.
func (s *CreateAPIKeyReq) SetRoleMinusID(val uuid.UUID) {
	s.RoleMinusID = val
}

// SetName sets the value of Name.
func (s *CreateAPIKeyReq) SetName(val string) {
	s.Name = val
}

// IAM Access Key.
type CreateAccessKeyReq struct {
	// IAM Access Key name.
	Name OptString `json:"name"`
	// IAM Access Key tags.
	Tags []string `json:"tags"`
	// IAM Access Key operations.
	Operations []string `json:"operations"`
	// IAM Access Key Resources.
	Resources []AccessKeyResource `json:"resources"`
}

// GetName returns the value of Name.
func (s *CreateAccessKeyReq) GetName() OptString {
	return s.Name
}

// GetTags returns the value of Tags.
func (s *CreateAccessKeyReq) GetTags() []string {
	return s.Tags
}

// GetOperations returns the value of Operations.
func (s *CreateAccessKeyReq) GetOperations() []string {
	return s.Operations
}

// GetResources returns the value of Resources.
func (s *CreateAccessKeyReq) GetResources() []AccessKeyResource {
	return s.Resources
}

// SetName sets the value of Name.
func (s *CreateAccessKeyReq) SetName(val OptString) {
	s.Name = val
}

// SetTags sets the value of Tags.
func (s *CreateAccessKeyReq) SetTags(val []string) {
	s.Tags = val
}

// SetOperations sets the value of Operations.
func (s *CreateAccessKeyReq) SetOperations(val []string) {
	s.Operations = val
}

// SetResources sets the value of Resources.
func (s *CreateAccessKeyReq) SetResources(val []AccessKeyResource) {
	s.Resources = val
}

type CreateAntiAffinityGroupReq struct {
	// Anti-affinity Group name.
	Name string `json:"name"`
	// Anti-affinity Group description.
	Description OptString `json:"description"`
}

// GetName returns the value of Name.
func (s *CreateAntiAffinityGroupReq) GetName() string {
	return s.Name
}

// GetDescription returns the value of Description.
func (s *CreateAntiAffinityGroupReq) GetDescription() OptString {
	return s.Description
}

// SetName sets the value of Name.
func (s *CreateAntiAffinityGroupReq) SetName(val string) {
	s.Name = val
}

// SetDescription sets the value of Description.
func (s *CreateAntiAffinityGroupReq) SetDescription(val OptString) {
	s.Description = val
}

type CreateDNSDomainRecordReq struct {
	// DNS domain record name.
	Name string `json:"name"`
	// DNS domain record type.
	Type CreateDNSDomainRecordReqType `json:"type"`
	// DNS domain record content.
	Content string `json:"content"`
	// DNS domain record TTL.
	TTL OptInt64 `json:"ttl"`
	// DNS domain record priority.
	Priority OptInt64 `json:"priority"`
}

// GetName returns the value of Name.
func (s *CreateDNSDomainRecordReq) GetName() string {
	return s.Name
}

// GetType returns the value of Type.
func (s *CreateDNSDomainRecordReq) GetType() CreateDNSDomainRecordReqType {
	return s.Type
}

// GetContent returns the value of Content.
func (s *CreateDNSDomainRecordReq) GetContent() string {
	return s.Content
}

// GetTTL returns the value of TTL.
func (s *CreateDNSDomainRecordReq) GetTTL() OptInt64 {
	return s.TTL
}

// GetPriority returns the value of Priority.
func (s *CreateDNSDomainRecordReq) GetPriority() OptInt64 {
	return s.Priority
}

// SetName sets the value of Name.
func (s *CreateDNSDomainRecordReq) SetName(val string) {
	s.Name = val
}

// SetType sets the value of Type.
func (s *CreateDNSDomainRecordReq) SetType(val CreateDNSDomainRecordReqType) {
	s.Type = val
}

// SetContent sets the value of Content.
func (s *CreateDNSDomainRecordReq) SetContent(val string) {
	s.Content = val
}

// SetTTL sets the value of TTL.
func (s *CreateDNSDomainRecordReq) SetTTL(val OptInt64) {
	s.TTL = val
}

// SetPriority sets the value of Priority.
func (s *CreateDNSDomainRecordReq) SetPriority(val OptInt64) {
	s.Priority = val
}

// DNS domain record type.
type CreateDNSDomainRecordReqType string

const (
	CreateDNSDomainRecordReqTypeNS     CreateDNSDomainRecordReqType = "NS"
	CreateDNSDomainRecordReqTypeCAA    CreateDNSDomainRecordReqType = "CAA"
	CreateDNSDomainRecordReqTypeNAPTR  CreateDNSDomainRecordReqType = "NAPTR"
	CreateDNSDomainRecordReqTypePOOL   CreateDNSDomainRecordReqType = "POOL"
	CreateDNSDomainRecordReqTypeA      CreateDNSDomainRecordReqType = "A"
	CreateDNSDomainRecordReqTypeHINFO  CreateDNSDomainRecordReqType = "HINFO"
	CreateDNSDomainRecordReqTypeCNAME  CreateDNSDomainRecordReqType = "CNAME"
	CreateDNSDomainRecordReqTypeSOA    CreateDNSDomainRecordReqType = "SOA"
	CreateDNSDomainRecordReqTypeSSHFP  CreateDNSDomainRecordReqType = "SSHFP"
	CreateDNSDomainRecordReqTypeSRV    CreateDNSDomainRecordReqType = "SRV"
	CreateDNSDomainRecordReqTypeAAAA   CreateDNSDomainRecordReqType = "AAAA"
	CreateDNSDomainRecordReqTypeMX     CreateDNSDomainRecordReqType = "MX"
	CreateDNSDomainRecordReqTypeDNSKEY CreateDNSDomainRecordReqType = "DNSKEY"
	CreateDNSDomainRecordReqTypeTXT    CreateDNSDomainRecordReqType = "TXT"
	CreateDNSDomainRecordReqTypeDS     CreateDNSDomainRecordReqType = "DS"
	CreateDNSDomainRecordReqTypePTR    CreateDNSDomainRecordReqType = "PTR"
	CreateDNSDomainRecordReqTypeALIAS  CreateDNSDomainRecordReqType = "ALIAS"
	CreateDNSDomainRecordReqTypeURL    CreateDNSDomainRecordReqType = "URL"
	CreateDNSDomainRecordReqTypeSPF    CreateDNSDomainRecordReqType = "SPF"
)

// MarshalText implements encoding.TextMarshaler.
func (s CreateDNSDomainRecordReqType) MarshalText() ([]byte, error) {
	switch s {
	case CreateDNSDomainRecordReqTypeNS:
		return []byte(s), nil
	case CreateDNSDomainRecordReqTypeCAA:
		return []byte(s), nil
	case CreateDNSDomainRecordReqTypeNAPTR:
		return []byte(s), nil
	case CreateDNSDomainRecordReqTypePOOL:
		return []byte(s), nil
	case CreateDNSDomainRecordReqTypeA:
		return []byte(s), nil
	case CreateDNSDomainRecordReqTypeHINFO:
		return []byte(s), nil
	case CreateDNSDomainRecordReqTypeCNAME:
		return []byte(s), nil
	case CreateDNSDomainRecordReqTypeSOA:
		return []byte(s), nil
	case CreateDNSDomainRecordReqTypeSSHFP:
		return []byte(s), nil
	case CreateDNSDomainRecordReqTypeSRV:
		return []byte(s), nil
	case CreateDNSDomainRecordReqTypeAAAA:
		return []byte(s), nil
	case CreateDNSDomainRecordReqTypeMX:
		return []byte(s), nil
	case CreateDNSDomainRecordReqTypeDNSKEY:
		return []byte(s), nil
	case CreateDNSDomainRecordReqTypeTXT:
		return []byte(s), nil
	case CreateDNSDomainRecordReqTypeDS:
		return []byte(s), nil
	case CreateDNSDomainRecordReqTypePTR:
		return []byte(s), nil
	case CreateDNSDomainRecordReqTypeALIAS:
		return []byte(s), nil
	case CreateDNSDomainRecordReqTypeURL:
		return []byte(s), nil
	case CreateDNSDomainRecordReqTypeSPF:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *CreateDNSDomainRecordReqType) UnmarshalText(data []byte) error {
	switch CreateDNSDomainRecordReqType(data) {
	case CreateDNSDomainRecordReqTypeNS:
		*s = CreateDNSDomainRecordReqTypeNS
		return nil
	case CreateDNSDomainRecordReqTypeCAA:
		*s = CreateDNSDomainRecordReqTypeCAA
		return nil
	case CreateDNSDomainRecordReqTypeNAPTR:
		*s = CreateDNSDomainRecordReqTypeNAPTR
		return nil
	case CreateDNSDomainRecordReqTypePOOL:
		*s = CreateDNSDomainRecordReqTypePOOL
		return nil
	case CreateDNSDomainRecordReqTypeA:
		*s = CreateDNSDomainRecordReqTypeA
		return nil
	case CreateDNSDomainRecordReqTypeHINFO:
		*s = CreateDNSDomainRecordReqTypeHINFO
		return nil
	case CreateDNSDomainRecordReqTypeCNAME:
		*s = CreateDNSDomainRecordReqTypeCNAME
		return nil
	case CreateDNSDomainRecordReqTypeSOA:
		*s = CreateDNSDomainRecordReqTypeSOA
		return nil
	case CreateDNSDomainRecordReqTypeSSHFP:
		*s = CreateDNSDomainRecordReqTypeSSHFP
		return nil
	case CreateDNSDomainRecordReqTypeSRV:
		*s = CreateDNSDomainRecordReqTypeSRV
		return nil
	case CreateDNSDomainRecordReqTypeAAAA:
		*s = CreateDNSDomainRecordReqTypeAAAA
		return nil
	case CreateDNSDomainRecordReqTypeMX:
		*s = CreateDNSDomainRecordReqTypeMX
		return nil
	case CreateDNSDomainRecordReqTypeDNSKEY:
		*s = CreateDNSDomainRecordReqTypeDNSKEY
		return nil
	case CreateDNSDomainRecordReqTypeTXT:
		*s = CreateDNSDomainRecordReqTypeTXT
		return nil
	case CreateDNSDomainRecordReqTypeDS:
		*s = CreateDNSDomainRecordReqTypeDS
		return nil
	case CreateDNSDomainRecordReqTypePTR:
		*s = CreateDNSDomainRecordReqTypePTR
		return nil
	case CreateDNSDomainRecordReqTypeALIAS:
		*s = CreateDNSDomainRecordReqTypeALIAS
		return nil
	case CreateDNSDomainRecordReqTypeURL:
		*s = CreateDNSDomainRecordReqTypeURL
		return nil
	case CreateDNSDomainRecordReqTypeSPF:
		*s = CreateDNSDomainRecordReqTypeSPF
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// DNS Domain.
type CreateDNSDomainReq struct {
	// Domain name.
	UnicodeMinusName OptString `json:"unicode-name"`
}

// GetUnicodeMinusName returns the value of UnicodeMinusName.
func (s *CreateDNSDomainReq) GetUnicodeMinusName() OptString {
	return s.UnicodeMinusName
}

// SetUnicodeMinusName sets the value of UnicodeMinusName.
func (s *CreateDNSDomainReq) SetUnicodeMinusName(val OptString) {
	s.UnicodeMinusName = val
}

type CreateDbaasIntegrationReq struct {
	// Integration type.
	IntegrationMinusType string `json:"integration-type"`
	// A source service.
	SourceMinusService DbaasServiceName `json:"source-service"`
	// A destination service.
	DestMinusService DbaasServiceName `json:"dest-service"`
	// Integration settings.
	Settings *CreateDbaasIntegrationReqSettings `json:"settings"`
}

// GetIntegrationMinusType returns the value of IntegrationMinusType.
func (s *CreateDbaasIntegrationReq) GetIntegrationMinusType() string {
	return s.IntegrationMinusType
}

// GetSourceMinusService returns the value of SourceMinusService.
func (s *CreateDbaasIntegrationReq) GetSourceMinusService() DbaasServiceName {
	return s.SourceMinusService
}

// GetDestMinusService returns the value of DestMinusService.
func (s *CreateDbaasIntegrationReq) GetDestMinusService() DbaasServiceName {
	return s.DestMinusService
}

// GetSettings returns the value of Settings.
func (s *CreateDbaasIntegrationReq) GetSettings() *CreateDbaasIntegrationReqSettings {
	return s.Settings
}

// SetIntegrationMinusType sets the value of IntegrationMinusType.
func (s *CreateDbaasIntegrationReq) SetIntegrationMinusType(val string) {
	s.IntegrationMinusType = val
}

// SetSourceMinusService sets the value of SourceMinusService.
func (s *CreateDbaasIntegrationReq) SetSourceMinusService(val DbaasServiceName) {
	s.SourceMinusService = val
}

// SetDestMinusService sets the value of DestMinusService.
func (s *CreateDbaasIntegrationReq) SetDestMinusService(val DbaasServiceName) {
	s.DestMinusService = val
}

// SetSettings sets the value of Settings.
func (s *CreateDbaasIntegrationReq) SetSettings(val *CreateDbaasIntegrationReqSettings) {
	s.Settings = val
}

// Integration settings.
type CreateDbaasIntegrationReqSettings struct{}

type CreateDbaasKafkaUserReq struct {
	// Username.
	Username DbaasUserUsername `json:"username"`
}

// GetUsername returns the value of Username.
func (s *CreateDbaasKafkaUserReq) GetUsername() DbaasUserUsername {
	return s.Username
}

// SetUsername sets the value of Username.
func (s *CreateDbaasKafkaUserReq) SetUsername(val DbaasUserUsername) {
	s.Username = val
}

type CreateDbaasPostgresUserReq struct {
	// Username.
	Username              DbaasUserUsername `json:"username"`
	AllowMinusReplication OptBool           `json:"allow-replication"`
}

// GetUsername returns the value of Username.
func (s *CreateDbaasPostgresUserReq) GetUsername() DbaasUserUsername {
	return s.Username
}

// GetAllowMinusReplication returns the value of AllowMinusReplication.
func (s *CreateDbaasPostgresUserReq) GetAllowMinusReplication() OptBool {
	return s.AllowMinusReplication
}

// SetUsername sets the value of Username.
func (s *CreateDbaasPostgresUserReq) SetUsername(val DbaasUserUsername) {
	s.Username = val
}

// SetAllowMinusReplication sets the value of AllowMinusReplication.
func (s *CreateDbaasPostgresUserReq) SetAllowMinusReplication(val OptBool) {
	s.AllowMinusReplication = val
}

type CreateDbaasServiceKafkaReq struct {
	// Kafka authentication methods.
	AuthenticationMinusMethods OptCreateDbaasServiceKafkaReqAuthenticationMinusMethods `json:"authentication-methods"`
	// Enable Kafka-REST service.
	KafkaMinusRestMinusEnabled OptBool `json:"kafka-rest-enabled"`
	// Service integrations to enable for the service. Some integration types affect how a service is
	// created and they must be provided as part of the creation call instead of being defined later.
	Integrations []CreateDbaasServiceKafkaReqIntegrationsItem `json:"integrations"`
	// Allow clients to connect to kafka_connect from the public internet for service nodes that are in a
	// project VPC or another type of private network.
	KafkaMinusConnectMinusEnabled OptBool `json:"kafka-connect-enabled"`
	// Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
	IPMinusFilter []string `json:"ip-filter"`
	// Schema Registry configuration.
	SchemaMinusRegistryMinusSettings *CreateDbaasServiceKafkaReqSchemaMinusRegistryMinusSettings `json:"schema-registry-settings"`
	// Kafka REST configuration.
	KafkaMinusRestMinusSettings *CreateDbaasServiceKafkaReqKafkaMinusRestMinusSettings `json:"kafka-rest-settings"`
	// Service is protected against termination and powering off.
	TerminationMinusProtection OptBool `json:"termination-protection"`
	// Kafka Connect configuration values.
	KafkaMinusConnectMinusSettings *CreateDbaasServiceKafkaReqKafkaMinusConnectMinusSettings `json:"kafka-connect-settings"`
	// Automatic maintenance settings.
	Maintenance OptCreateDbaasServiceKafkaReqMaintenance `json:"maintenance"`
	// Kafka-specific settings.
	KafkaMinusSettings *CreateDbaasServiceKafkaReqKafkaMinusSettings `json:"kafka-settings"`
	// Enable Schema-Registry service.
	SchemaMinusRegistryMinusEnabled OptBool `json:"schema-registry-enabled"`
	// Kafka major version.
	Version OptString `json:"version"`
	// Subscription plan.
	Plan string `json:"plan"`
}

// GetAuthenticationMinusMethods returns the value of AuthenticationMinusMethods.
func (s *CreateDbaasServiceKafkaReq) GetAuthenticationMinusMethods() OptCreateDbaasServiceKafkaReqAuthenticationMinusMethods {
	return s.AuthenticationMinusMethods
}

// GetKafkaMinusRestMinusEnabled returns the value of KafkaMinusRestMinusEnabled.
func (s *CreateDbaasServiceKafkaReq) GetKafkaMinusRestMinusEnabled() OptBool {
	return s.KafkaMinusRestMinusEnabled
}

// GetIntegrations returns the value of Integrations.
func (s *CreateDbaasServiceKafkaReq) GetIntegrations() []CreateDbaasServiceKafkaReqIntegrationsItem {
	return s.Integrations
}

// GetKafkaMinusConnectMinusEnabled returns the value of KafkaMinusConnectMinusEnabled.
func (s *CreateDbaasServiceKafkaReq) GetKafkaMinusConnectMinusEnabled() OptBool {
	return s.KafkaMinusConnectMinusEnabled
}

// GetIPMinusFilter returns the value of IPMinusFilter.
func (s *CreateDbaasServiceKafkaReq) GetIPMinusFilter() []string {
	return s.IPMinusFilter
}

// GetSchemaMinusRegistryMinusSettings returns the value of SchemaMinusRegistryMinusSettings.
func (s *CreateDbaasServiceKafkaReq) GetSchemaMinusRegistryMinusSettings() *CreateDbaasServiceKafkaReqSchemaMinusRegistryMinusSettings {
	return s.SchemaMinusRegistryMinusSettings
}

// GetKafkaMinusRestMinusSettings returns the value of KafkaMinusRestMinusSettings.
func (s *CreateDbaasServiceKafkaReq) GetKafkaMinusRestMinusSettings() *CreateDbaasServiceKafkaReqKafkaMinusRestMinusSettings {
	return s.KafkaMinusRestMinusSettings
}

// GetTerminationMinusProtection returns the value of TerminationMinusProtection.
func (s *CreateDbaasServiceKafkaReq) GetTerminationMinusProtection() OptBool {
	return s.TerminationMinusProtection
}

// GetKafkaMinusConnectMinusSettings returns the value of KafkaMinusConnectMinusSettings.
func (s *CreateDbaasServiceKafkaReq) GetKafkaMinusConnectMinusSettings() *CreateDbaasServiceKafkaReqKafkaMinusConnectMinusSettings {
	return s.KafkaMinusConnectMinusSettings
}

// GetMaintenance returns the value of Maintenance.
func (s *CreateDbaasServiceKafkaReq) GetMaintenance() OptCreateDbaasServiceKafkaReqMaintenance {
	return s.Maintenance
}

// GetKafkaMinusSettings returns the value of KafkaMinusSettings.
func (s *CreateDbaasServiceKafkaReq) GetKafkaMinusSettings() *CreateDbaasServiceKafkaReqKafkaMinusSettings {
	return s.KafkaMinusSettings
}

// GetSchemaMinusRegistryMinusEnabled returns the value of SchemaMinusRegistryMinusEnabled.
func (s *CreateDbaasServiceKafkaReq) GetSchemaMinusRegistryMinusEnabled() OptBool {
	return s.SchemaMinusRegistryMinusEnabled
}

// GetVersion returns the value of Version.
func (s *CreateDbaasServiceKafkaReq) GetVersion() OptString {
	return s.Version
}

// GetPlan returns the value of Plan.
func (s *CreateDbaasServiceKafkaReq) GetPlan() string {
	return s.Plan
}

// SetAuthenticationMinusMethods sets the value of AuthenticationMinusMethods.
func (s *CreateDbaasServiceKafkaReq) SetAuthenticationMinusMethods(val OptCreateDbaasServiceKafkaReqAuthenticationMinusMethods) {
	s.AuthenticationMinusMethods = val
}

// SetKafkaMinusRestMinusEnabled sets the value of KafkaMinusRestMinusEnabled.
func (s *CreateDbaasServiceKafkaReq) SetKafkaMinusRestMinusEnabled(val OptBool) {
	s.KafkaMinusRestMinusEnabled = val
}

// SetIntegrations sets the value of Integrations.
func (s *CreateDbaasServiceKafkaReq) SetIntegrations(val []CreateDbaasServiceKafkaReqIntegrationsItem) {
	s.Integrations = val
}

// SetKafkaMinusConnectMinusEnabled sets the value of KafkaMinusConnectMinusEnabled.
func (s *CreateDbaasServiceKafkaReq) SetKafkaMinusConnectMinusEnabled(val OptBool) {
	s.KafkaMinusConnectMinusEnabled = val
}

// SetIPMinusFilter sets the value of IPMinusFilter.
func (s *CreateDbaasServiceKafkaReq) SetIPMinusFilter(val []string) {
	s.IPMinusFilter = val
}

// SetSchemaMinusRegistryMinusSettings sets the value of SchemaMinusRegistryMinusSettings.
func (s *CreateDbaasServiceKafkaReq) SetSchemaMinusRegistryMinusSettings(val *CreateDbaasServiceKafkaReqSchemaMinusRegistryMinusSettings) {
	s.SchemaMinusRegistryMinusSettings = val
}

// SetKafkaMinusRestMinusSettings sets the value of KafkaMinusRestMinusSettings.
func (s *CreateDbaasServiceKafkaReq) SetKafkaMinusRestMinusSettings(val *CreateDbaasServiceKafkaReqKafkaMinusRestMinusSettings) {
	s.KafkaMinusRestMinusSettings = val
}

// SetTerminationMinusProtection sets the value of TerminationMinusProtection.
func (s *CreateDbaasServiceKafkaReq) SetTerminationMinusProtection(val OptBool) {
	s.TerminationMinusProtection = val
}

// SetKafkaMinusConnectMinusSettings sets the value of KafkaMinusConnectMinusSettings.
func (s *CreateDbaasServiceKafkaReq) SetKafkaMinusConnectMinusSettings(val *CreateDbaasServiceKafkaReqKafkaMinusConnectMinusSettings) {
	s.KafkaMinusConnectMinusSettings = val
}

// SetMaintenance sets the value of Maintenance.
func (s *CreateDbaasServiceKafkaReq) SetMaintenance(val OptCreateDbaasServiceKafkaReqMaintenance) {
	s.Maintenance = val
}

// SetKafkaMinusSettings sets the value of KafkaMinusSettings.
func (s *CreateDbaasServiceKafkaReq) SetKafkaMinusSettings(val *CreateDbaasServiceKafkaReqKafkaMinusSettings) {
	s.KafkaMinusSettings = val
}

// SetSchemaMinusRegistryMinusEnabled sets the value of SchemaMinusRegistryMinusEnabled.
func (s *CreateDbaasServiceKafkaReq) SetSchemaMinusRegistryMinusEnabled(val OptBool) {
	s.SchemaMinusRegistryMinusEnabled = val
}

// SetVersion sets the value of Version.
func (s *CreateDbaasServiceKafkaReq) SetVersion(val OptString) {
	s.Version = val
}

// SetPlan sets the value of Plan.
func (s *CreateDbaasServiceKafkaReq) SetPlan(val string) {
	s.Plan = val
}

// Kafka authentication methods.
type CreateDbaasServiceKafkaReqAuthenticationMinusMethods struct {
	// Enable certificate/SSL authentication.
	Certificate OptBool `json:"certificate"`
	// Enable SASL authentication.
	Sasl OptBool `json:"sasl"`
}

// GetCertificate returns the value of Certificate.
func (s *CreateDbaasServiceKafkaReqAuthenticationMinusMethods) GetCertificate() OptBool {
	return s.Certificate
}

// GetSasl returns the value of Sasl.
func (s *CreateDbaasServiceKafkaReqAuthenticationMinusMethods) GetSasl() OptBool {
	return s.Sasl
}

// SetCertificate sets the value of Certificate.
func (s *CreateDbaasServiceKafkaReqAuthenticationMinusMethods) SetCertificate(val OptBool) {
	s.Certificate = val
}

// SetSasl sets the value of Sasl.
func (s *CreateDbaasServiceKafkaReqAuthenticationMinusMethods) SetSasl(val OptBool) {
	s.Sasl = val
}

type CreateDbaasServiceKafkaReqIntegrationsItem struct {
	// Integration type.
	Type EnumIntegrationTypes `json:"type"`
	// A source service.
	SourceMinusService OptDbaasServiceName `json:"source-service"`
	// A destination service.
	DestMinusService OptDbaasServiceName `json:"dest-service"`
	// Integration settings.
	Settings *CreateDbaasServiceKafkaReqIntegrationsItemSettings `json:"settings"`
}

// GetType returns the value of Type.
func (s *CreateDbaasServiceKafkaReqIntegrationsItem) GetType() EnumIntegrationTypes {
	return s.Type
}

// GetSourceMinusService returns the value of SourceMinusService.
func (s *CreateDbaasServiceKafkaReqIntegrationsItem) GetSourceMinusService() OptDbaasServiceName {
	return s.SourceMinusService
}

// GetDestMinusService returns the value of DestMinusService.
func (s *CreateDbaasServiceKafkaReqIntegrationsItem) GetDestMinusService() OptDbaasServiceName {
	return s.DestMinusService
}

// GetSettings returns the value of Settings.
func (s *CreateDbaasServiceKafkaReqIntegrationsItem) GetSettings() *CreateDbaasServiceKafkaReqIntegrationsItemSettings {
	return s.Settings
}

// SetType sets the value of Type.
func (s *CreateDbaasServiceKafkaReqIntegrationsItem) SetType(val EnumIntegrationTypes) {
	s.Type = val
}

// SetSourceMinusService sets the value of SourceMinusService.
func (s *CreateDbaasServiceKafkaReqIntegrationsItem) SetSourceMinusService(val OptDbaasServiceName) {
	s.SourceMinusService = val
}

// SetDestMinusService sets the value of DestMinusService.
func (s *CreateDbaasServiceKafkaReqIntegrationsItem) SetDestMinusService(val OptDbaasServiceName) {
	s.DestMinusService = val
}

// SetSettings sets the value of Settings.
func (s *CreateDbaasServiceKafkaReqIntegrationsItem) SetSettings(val *CreateDbaasServiceKafkaReqIntegrationsItemSettings) {
	s.Settings = val
}

// Integration settings.
type CreateDbaasServiceKafkaReqIntegrationsItemSettings struct{}

// Kafka Connect configuration values.
type CreateDbaasServiceKafkaReqKafkaMinusConnectMinusSettings struct{}

// Kafka REST configuration.
type CreateDbaasServiceKafkaReqKafkaMinusRestMinusSettings struct{}

// Kafka-specific settings.
type CreateDbaasServiceKafkaReqKafkaMinusSettings struct{}

// Automatic maintenance settings.
type CreateDbaasServiceKafkaReqMaintenance struct {
	// Day of week for installing updates.
	Dow CreateDbaasServiceKafkaReqMaintenanceDow `json:"dow"`
	// Time for installing updates, UTC.
	Time string `json:"time"`
}

// GetDow returns the value of Dow.
func (s *CreateDbaasServiceKafkaReqMaintenance) GetDow() CreateDbaasServiceKafkaReqMaintenanceDow {
	return s.Dow
}

// GetTime returns the value of Time.
func (s *CreateDbaasServiceKafkaReqMaintenance) GetTime() string {
	return s.Time
}

// SetDow sets the value of Dow.
func (s *CreateDbaasServiceKafkaReqMaintenance) SetDow(val CreateDbaasServiceKafkaReqMaintenanceDow) {
	s.Dow = val
}

// SetTime sets the value of Time.
func (s *CreateDbaasServiceKafkaReqMaintenance) SetTime(val string) {
	s.Time = val
}

// Day of week for installing updates.
type CreateDbaasServiceKafkaReqMaintenanceDow string

const (
	CreateDbaasServiceKafkaReqMaintenanceDowSaturday  CreateDbaasServiceKafkaReqMaintenanceDow = "saturday"
	CreateDbaasServiceKafkaReqMaintenanceDowTuesday   CreateDbaasServiceKafkaReqMaintenanceDow = "tuesday"
	CreateDbaasServiceKafkaReqMaintenanceDowNever     CreateDbaasServiceKafkaReqMaintenanceDow = "never"
	CreateDbaasServiceKafkaReqMaintenanceDowWednesday CreateDbaasServiceKafkaReqMaintenanceDow = "wednesday"
	CreateDbaasServiceKafkaReqMaintenanceDowSunday    CreateDbaasServiceKafkaReqMaintenanceDow = "sunday"
	CreateDbaasServiceKafkaReqMaintenanceDowFriday    CreateDbaasServiceKafkaReqMaintenanceDow = "friday"
	CreateDbaasServiceKafkaReqMaintenanceDowMonday    CreateDbaasServiceKafkaReqMaintenanceDow = "monday"
	CreateDbaasServiceKafkaReqMaintenanceDowThursday  CreateDbaasServiceKafkaReqMaintenanceDow = "thursday"
)

// MarshalText implements encoding.TextMarshaler.
func (s CreateDbaasServiceKafkaReqMaintenanceDow) MarshalText() ([]byte, error) {
	switch s {
	case CreateDbaasServiceKafkaReqMaintenanceDowSaturday:
		return []byte(s), nil
	case CreateDbaasServiceKafkaReqMaintenanceDowTuesday:
		return []byte(s), nil
	case CreateDbaasServiceKafkaReqMaintenanceDowNever:
		return []byte(s), nil
	case CreateDbaasServiceKafkaReqMaintenanceDowWednesday:
		return []byte(s), nil
	case CreateDbaasServiceKafkaReqMaintenanceDowSunday:
		return []byte(s), nil
	case CreateDbaasServiceKafkaReqMaintenanceDowFriday:
		return []byte(s), nil
	case CreateDbaasServiceKafkaReqMaintenanceDowMonday:
		return []byte(s), nil
	case CreateDbaasServiceKafkaReqMaintenanceDowThursday:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *CreateDbaasServiceKafkaReqMaintenanceDow) UnmarshalText(data []byte) error {
	switch CreateDbaasServiceKafkaReqMaintenanceDow(data) {
	case CreateDbaasServiceKafkaReqMaintenanceDowSaturday:
		*s = CreateDbaasServiceKafkaReqMaintenanceDowSaturday
		return nil
	case CreateDbaasServiceKafkaReqMaintenanceDowTuesday:
		*s = CreateDbaasServiceKafkaReqMaintenanceDowTuesday
		return nil
	case CreateDbaasServiceKafkaReqMaintenanceDowNever:
		*s = CreateDbaasServiceKafkaReqMaintenanceDowNever
		return nil
	case CreateDbaasServiceKafkaReqMaintenanceDowWednesday:
		*s = CreateDbaasServiceKafkaReqMaintenanceDowWednesday
		return nil
	case CreateDbaasServiceKafkaReqMaintenanceDowSunday:
		*s = CreateDbaasServiceKafkaReqMaintenanceDowSunday
		return nil
	case CreateDbaasServiceKafkaReqMaintenanceDowFriday:
		*s = CreateDbaasServiceKafkaReqMaintenanceDowFriday
		return nil
	case CreateDbaasServiceKafkaReqMaintenanceDowMonday:
		*s = CreateDbaasServiceKafkaReqMaintenanceDowMonday
		return nil
	case CreateDbaasServiceKafkaReqMaintenanceDowThursday:
		*s = CreateDbaasServiceKafkaReqMaintenanceDowThursday
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Schema Registry configuration.
type CreateDbaasServiceKafkaReqSchemaMinusRegistryMinusSettings struct{}

type CreateDbaasServiceMysqlReq struct {
	BackupMinusSchedule OptCreateDbaasServiceMysqlReqBackupMinusSchedule `json:"backup-schedule"`
	// Service integrations to enable for the service. Some integration types affect how a service is
	// created and they must be provided as part of the creation call instead of being defined later.
	Integrations []CreateDbaasServiceMysqlReqIntegrationsItem `json:"integrations"`
	// Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
	IPMinusFilter []string `json:"ip-filter"`
	// Service is protected against termination and powering off.
	TerminationMinusProtection OptBool `json:"termination-protection"`
	// Service to fork from.
	ForkMinusFromMinusService OptDbaasServiceName `json:"fork-from-service"`
	// ISO time of a backup to recover from for services that support arbitrary times.
	RecoveryMinusBackupMinusTime OptString `json:"recovery-backup-time"`
	// MySQL-specific settings.
	MysqlMinusSettings *CreateDbaasServiceMysqlReqMysqlMinusSettings `json:"mysql-settings"`
	// Automatic maintenance settings.
	Maintenance OptCreateDbaasServiceMysqlReqMaintenance `json:"maintenance"`
	// Custom username for admin user. This must be set only when a new service is being created.
	AdminMinusUsername OptString `json:"admin-username"`
	// MySQL major version.
	Version OptString `json:"version"`
	// Subscription plan.
	Plan string `json:"plan"`
	// Custom password for admin user. Defaults to random string. This must be set only when a new
	// service is being created.
	AdminMinusPassword OptString `json:"admin-password"`
	// Migrate data from existing server.
	Migration OptCreateDbaasServiceMysqlReqMigration `json:"migration"`
	// The minimum amount of time in seconds to keep binlog entries before deletion. This may be extended
	// for services that require binlog entries for longer than the default for example if using the
	// MySQL Debezium Kafka connector.
	BinlogMinusRetentionMinusPeriod OptInt64 `json:"binlog-retention-period"`
}

// GetBackupMinusSchedule returns the value of BackupMinusSchedule.
func (s *CreateDbaasServiceMysqlReq) GetBackupMinusSchedule() OptCreateDbaasServiceMysqlReqBackupMinusSchedule {
	return s.BackupMinusSchedule
}

// GetIntegrations returns the value of Integrations.
func (s *CreateDbaasServiceMysqlReq) GetIntegrations() []CreateDbaasServiceMysqlReqIntegrationsItem {
	return s.Integrations
}

// GetIPMinusFilter returns the value of IPMinusFilter.
func (s *CreateDbaasServiceMysqlReq) GetIPMinusFilter() []string {
	return s.IPMinusFilter
}

// GetTerminationMinusProtection returns the value of TerminationMinusProtection.
func (s *CreateDbaasServiceMysqlReq) GetTerminationMinusProtection() OptBool {
	return s.TerminationMinusProtection
}

// GetForkMinusFromMinusService returns the value of ForkMinusFromMinusService.
func (s *CreateDbaasServiceMysqlReq) GetForkMinusFromMinusService() OptDbaasServiceName {
	return s.ForkMinusFromMinusService
}

// GetRecoveryMinusBackupMinusTime returns the value of RecoveryMinusBackupMinusTime.
func (s *CreateDbaasServiceMysqlReq) GetRecoveryMinusBackupMinusTime() OptString {
	return s.RecoveryMinusBackupMinusTime
}

// GetMysqlMinusSettings returns the value of MysqlMinusSettings.
func (s *CreateDbaasServiceMysqlReq) GetMysqlMinusSettings() *CreateDbaasServiceMysqlReqMysqlMinusSettings {
	return s.MysqlMinusSettings
}

// GetMaintenance returns the value of Maintenance.
func (s *CreateDbaasServiceMysqlReq) GetMaintenance() OptCreateDbaasServiceMysqlReqMaintenance {
	return s.Maintenance
}

// GetAdminMinusUsername returns the value of AdminMinusUsername.
func (s *CreateDbaasServiceMysqlReq) GetAdminMinusUsername() OptString {
	return s.AdminMinusUsername
}

// GetVersion returns the value of Version.
func (s *CreateDbaasServiceMysqlReq) GetVersion() OptString {
	return s.Version
}

// GetPlan returns the value of Plan.
func (s *CreateDbaasServiceMysqlReq) GetPlan() string {
	return s.Plan
}

// GetAdminMinusPassword returns the value of AdminMinusPassword.
func (s *CreateDbaasServiceMysqlReq) GetAdminMinusPassword() OptString {
	return s.AdminMinusPassword
}

// GetMigration returns the value of Migration.
func (s *CreateDbaasServiceMysqlReq) GetMigration() OptCreateDbaasServiceMysqlReqMigration {
	return s.Migration
}

// GetBinlogMinusRetentionMinusPeriod returns the value of BinlogMinusRetentionMinusPeriod.
func (s *CreateDbaasServiceMysqlReq) GetBinlogMinusRetentionMinusPeriod() OptInt64 {
	return s.BinlogMinusRetentionMinusPeriod
}

// SetBackupMinusSchedule sets the value of BackupMinusSchedule.
func (s *CreateDbaasServiceMysqlReq) SetBackupMinusSchedule(val OptCreateDbaasServiceMysqlReqBackupMinusSchedule) {
	s.BackupMinusSchedule = val
}

// SetIntegrations sets the value of Integrations.
func (s *CreateDbaasServiceMysqlReq) SetIntegrations(val []CreateDbaasServiceMysqlReqIntegrationsItem) {
	s.Integrations = val
}

// SetIPMinusFilter sets the value of IPMinusFilter.
func (s *CreateDbaasServiceMysqlReq) SetIPMinusFilter(val []string) {
	s.IPMinusFilter = val
}

// SetTerminationMinusProtection sets the value of TerminationMinusProtection.
func (s *CreateDbaasServiceMysqlReq) SetTerminationMinusProtection(val OptBool) {
	s.TerminationMinusProtection = val
}

// SetForkMinusFromMinusService sets the value of ForkMinusFromMinusService.
func (s *CreateDbaasServiceMysqlReq) SetForkMinusFromMinusService(val OptDbaasServiceName) {
	s.ForkMinusFromMinusService = val
}

// SetRecoveryMinusBackupMinusTime sets the value of RecoveryMinusBackupMinusTime.
func (s *CreateDbaasServiceMysqlReq) SetRecoveryMinusBackupMinusTime(val OptString) {
	s.RecoveryMinusBackupMinusTime = val
}

// SetMysqlMinusSettings sets the value of MysqlMinusSettings.
func (s *CreateDbaasServiceMysqlReq) SetMysqlMinusSettings(val *CreateDbaasServiceMysqlReqMysqlMinusSettings) {
	s.MysqlMinusSettings = val
}

// SetMaintenance sets the value of Maintenance.
func (s *CreateDbaasServiceMysqlReq) SetMaintenance(val OptCreateDbaasServiceMysqlReqMaintenance) {
	s.Maintenance = val
}

// SetAdminMinusUsername sets the value of AdminMinusUsername.
func (s *CreateDbaasServiceMysqlReq) SetAdminMinusUsername(val OptString) {
	s.AdminMinusUsername = val
}

// SetVersion sets the value of Version.
func (s *CreateDbaasServiceMysqlReq) SetVersion(val OptString) {
	s.Version = val
}

// SetPlan sets the value of Plan.
func (s *CreateDbaasServiceMysqlReq) SetPlan(val string) {
	s.Plan = val
}

// SetAdminMinusPassword sets the value of AdminMinusPassword.
func (s *CreateDbaasServiceMysqlReq) SetAdminMinusPassword(val OptString) {
	s.AdminMinusPassword = val
}

// SetMigration sets the value of Migration.
func (s *CreateDbaasServiceMysqlReq) SetMigration(val OptCreateDbaasServiceMysqlReqMigration) {
	s.Migration = val
}

// SetBinlogMinusRetentionMinusPeriod sets the value of BinlogMinusRetentionMinusPeriod.
func (s *CreateDbaasServiceMysqlReq) SetBinlogMinusRetentionMinusPeriod(val OptInt64) {
	s.BinlogMinusRetentionMinusPeriod = val
}

type CreateDbaasServiceMysqlReqBackupMinusSchedule struct {
	// The hour of day (in UTC) when backup for the service is started. New backup is only started if
	// previous backup has already completed.
	BackupMinusHour OptInt64 `json:"backup-hour"`
	// The minute of an hour when backup for the service is started. New backup is only started if
	// previous backup has already completed.
	BackupMinusMinute OptInt64 `json:"backup-minute"`
}

// GetBackupMinusHour returns the value of BackupMinusHour.
func (s *CreateDbaasServiceMysqlReqBackupMinusSchedule) GetBackupMinusHour() OptInt64 {
	return s.BackupMinusHour
}

// GetBackupMinusMinute returns the value of BackupMinusMinute.
func (s *CreateDbaasServiceMysqlReqBackupMinusSchedule) GetBackupMinusMinute() OptInt64 {
	return s.BackupMinusMinute
}

// SetBackupMinusHour sets the value of BackupMinusHour.
func (s *CreateDbaasServiceMysqlReqBackupMinusSchedule) SetBackupMinusHour(val OptInt64) {
	s.BackupMinusHour = val
}

// SetBackupMinusMinute sets the value of BackupMinusMinute.
func (s *CreateDbaasServiceMysqlReqBackupMinusSchedule) SetBackupMinusMinute(val OptInt64) {
	s.BackupMinusMinute = val
}

type CreateDbaasServiceMysqlReqIntegrationsItem struct {
	// Integration type.
	Type EnumIntegrationTypes `json:"type"`
	// A source service.
	SourceMinusService OptDbaasServiceName `json:"source-service"`
	// A destination service.
	DestMinusService OptDbaasServiceName `json:"dest-service"`
	// Integration settings.
	Settings *CreateDbaasServiceMysqlReqIntegrationsItemSettings `json:"settings"`
}

// GetType returns the value of Type.
func (s *CreateDbaasServiceMysqlReqIntegrationsItem) GetType() EnumIntegrationTypes {
	return s.Type
}

// GetSourceMinusService returns the value of SourceMinusService.
func (s *CreateDbaasServiceMysqlReqIntegrationsItem) GetSourceMinusService() OptDbaasServiceName {
	return s.SourceMinusService
}

// GetDestMinusService returns the value of DestMinusService.
func (s *CreateDbaasServiceMysqlReqIntegrationsItem) GetDestMinusService() OptDbaasServiceName {
	return s.DestMinusService
}

// GetSettings returns the value of Settings.
func (s *CreateDbaasServiceMysqlReqIntegrationsItem) GetSettings() *CreateDbaasServiceMysqlReqIntegrationsItemSettings {
	return s.Settings
}

// SetType sets the value of Type.
func (s *CreateDbaasServiceMysqlReqIntegrationsItem) SetType(val EnumIntegrationTypes) {
	s.Type = val
}

// SetSourceMinusService sets the value of SourceMinusService.
func (s *CreateDbaasServiceMysqlReqIntegrationsItem) SetSourceMinusService(val OptDbaasServiceName) {
	s.SourceMinusService = val
}

// SetDestMinusService sets the value of DestMinusService.
func (s *CreateDbaasServiceMysqlReqIntegrationsItem) SetDestMinusService(val OptDbaasServiceName) {
	s.DestMinusService = val
}

// SetSettings sets the value of Settings.
func (s *CreateDbaasServiceMysqlReqIntegrationsItem) SetSettings(val *CreateDbaasServiceMysqlReqIntegrationsItemSettings) {
	s.Settings = val
}

// Integration settings.
type CreateDbaasServiceMysqlReqIntegrationsItemSettings struct{}

// Automatic maintenance settings.
type CreateDbaasServiceMysqlReqMaintenance struct {
	// Day of week for installing updates.
	Dow CreateDbaasServiceMysqlReqMaintenanceDow `json:"dow"`
	// Time for installing updates, UTC.
	Time string `json:"time"`
}

// GetDow returns the value of Dow.
func (s *CreateDbaasServiceMysqlReqMaintenance) GetDow() CreateDbaasServiceMysqlReqMaintenanceDow {
	return s.Dow
}

// GetTime returns the value of Time.
func (s *CreateDbaasServiceMysqlReqMaintenance) GetTime() string {
	return s.Time
}

// SetDow sets the value of Dow.
func (s *CreateDbaasServiceMysqlReqMaintenance) SetDow(val CreateDbaasServiceMysqlReqMaintenanceDow) {
	s.Dow = val
}

// SetTime sets the value of Time.
func (s *CreateDbaasServiceMysqlReqMaintenance) SetTime(val string) {
	s.Time = val
}

// Day of week for installing updates.
type CreateDbaasServiceMysqlReqMaintenanceDow string

const (
	CreateDbaasServiceMysqlReqMaintenanceDowSaturday  CreateDbaasServiceMysqlReqMaintenanceDow = "saturday"
	CreateDbaasServiceMysqlReqMaintenanceDowTuesday   CreateDbaasServiceMysqlReqMaintenanceDow = "tuesday"
	CreateDbaasServiceMysqlReqMaintenanceDowNever     CreateDbaasServiceMysqlReqMaintenanceDow = "never"
	CreateDbaasServiceMysqlReqMaintenanceDowWednesday CreateDbaasServiceMysqlReqMaintenanceDow = "wednesday"
	CreateDbaasServiceMysqlReqMaintenanceDowSunday    CreateDbaasServiceMysqlReqMaintenanceDow = "sunday"
	CreateDbaasServiceMysqlReqMaintenanceDowFriday    CreateDbaasServiceMysqlReqMaintenanceDow = "friday"
	CreateDbaasServiceMysqlReqMaintenanceDowMonday    CreateDbaasServiceMysqlReqMaintenanceDow = "monday"
	CreateDbaasServiceMysqlReqMaintenanceDowThursday  CreateDbaasServiceMysqlReqMaintenanceDow = "thursday"
)

// MarshalText implements encoding.TextMarshaler.
func (s CreateDbaasServiceMysqlReqMaintenanceDow) MarshalText() ([]byte, error) {
	switch s {
	case CreateDbaasServiceMysqlReqMaintenanceDowSaturday:
		return []byte(s), nil
	case CreateDbaasServiceMysqlReqMaintenanceDowTuesday:
		return []byte(s), nil
	case CreateDbaasServiceMysqlReqMaintenanceDowNever:
		return []byte(s), nil
	case CreateDbaasServiceMysqlReqMaintenanceDowWednesday:
		return []byte(s), nil
	case CreateDbaasServiceMysqlReqMaintenanceDowSunday:
		return []byte(s), nil
	case CreateDbaasServiceMysqlReqMaintenanceDowFriday:
		return []byte(s), nil
	case CreateDbaasServiceMysqlReqMaintenanceDowMonday:
		return []byte(s), nil
	case CreateDbaasServiceMysqlReqMaintenanceDowThursday:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *CreateDbaasServiceMysqlReqMaintenanceDow) UnmarshalText(data []byte) error {
	switch CreateDbaasServiceMysqlReqMaintenanceDow(data) {
	case CreateDbaasServiceMysqlReqMaintenanceDowSaturday:
		*s = CreateDbaasServiceMysqlReqMaintenanceDowSaturday
		return nil
	case CreateDbaasServiceMysqlReqMaintenanceDowTuesday:
		*s = CreateDbaasServiceMysqlReqMaintenanceDowTuesday
		return nil
	case CreateDbaasServiceMysqlReqMaintenanceDowNever:
		*s = CreateDbaasServiceMysqlReqMaintenanceDowNever
		return nil
	case CreateDbaasServiceMysqlReqMaintenanceDowWednesday:
		*s = CreateDbaasServiceMysqlReqMaintenanceDowWednesday
		return nil
	case CreateDbaasServiceMysqlReqMaintenanceDowSunday:
		*s = CreateDbaasServiceMysqlReqMaintenanceDowSunday
		return nil
	case CreateDbaasServiceMysqlReqMaintenanceDowFriday:
		*s = CreateDbaasServiceMysqlReqMaintenanceDowFriday
		return nil
	case CreateDbaasServiceMysqlReqMaintenanceDowMonday:
		*s = CreateDbaasServiceMysqlReqMaintenanceDowMonday
		return nil
	case CreateDbaasServiceMysqlReqMaintenanceDowThursday:
		*s = CreateDbaasServiceMysqlReqMaintenanceDowThursday
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Migrate data from existing server.
type CreateDbaasServiceMysqlReqMigration struct {
	// Hostname or IP address of the server where to migrate data from.
	Host string `json:"host"`
	// Port number of the server where to migrate data from.
	Port int64 `json:"port"`
	// Password for authentication with the server where to migrate data from.
	Password OptString `json:"password"`
	// The server where to migrate data from is secured with SSL.
	Ssl OptBool `json:"ssl"`
	// User name for authentication with the server where to migrate data from.
	Username OptString `json:"username"`
	// Database name for bootstrapping the initial connection.
	Dbname OptString `json:"dbname"`
	// Comma-separated list of databases, which should be ignored during migration (supported by MySQL
	// only at the moment).
	IgnoreMinusDbs OptString `json:"ignore-dbs"`
	// The migration method to be used.
	Method OptEnumMigrationMethod `json:"method"`
}

// GetHost returns the value of Host.
func (s *CreateDbaasServiceMysqlReqMigration) GetHost() string {
	return s.Host
}

// GetPort returns the value of Port.
func (s *CreateDbaasServiceMysqlReqMigration) GetPort() int64 {
	return s.Port
}

// GetPassword returns the value of Password.
func (s *CreateDbaasServiceMysqlReqMigration) GetPassword() OptString {
	return s.Password
}

// GetSsl returns the value of Ssl.
func (s *CreateDbaasServiceMysqlReqMigration) GetSsl() OptBool {
	return s.Ssl
}

// GetUsername returns the value of Username.
func (s *CreateDbaasServiceMysqlReqMigration) GetUsername() OptString {
	return s.Username
}

// GetDbname returns the value of Dbname.
func (s *CreateDbaasServiceMysqlReqMigration) GetDbname() OptString {
	return s.Dbname
}

// GetIgnoreMinusDbs returns the value of IgnoreMinusDbs.
func (s *CreateDbaasServiceMysqlReqMigration) GetIgnoreMinusDbs() OptString {
	return s.IgnoreMinusDbs
}

// GetMethod returns the value of Method.
func (s *CreateDbaasServiceMysqlReqMigration) GetMethod() OptEnumMigrationMethod {
	return s.Method
}

// SetHost sets the value of Host.
func (s *CreateDbaasServiceMysqlReqMigration) SetHost(val string) {
	s.Host = val
}

// SetPort sets the value of Port.
func (s *CreateDbaasServiceMysqlReqMigration) SetPort(val int64) {
	s.Port = val
}

// SetPassword sets the value of Password.
func (s *CreateDbaasServiceMysqlReqMigration) SetPassword(val OptString) {
	s.Password = val
}

// SetSsl sets the value of Ssl.
func (s *CreateDbaasServiceMysqlReqMigration) SetSsl(val OptBool) {
	s.Ssl = val
}

// SetUsername sets the value of Username.
func (s *CreateDbaasServiceMysqlReqMigration) SetUsername(val OptString) {
	s.Username = val
}

// SetDbname sets the value of Dbname.
func (s *CreateDbaasServiceMysqlReqMigration) SetDbname(val OptString) {
	s.Dbname = val
}

// SetIgnoreMinusDbs sets the value of IgnoreMinusDbs.
func (s *CreateDbaasServiceMysqlReqMigration) SetIgnoreMinusDbs(val OptString) {
	s.IgnoreMinusDbs = val
}

// SetMethod sets the value of Method.
func (s *CreateDbaasServiceMysqlReqMigration) SetMethod(val OptEnumMigrationMethod) {
	s.Method = val
}

// MySQL-specific settings.
type CreateDbaasServiceMysqlReqMysqlMinusSettings struct{}

type CreateDbaasServiceOpensearchReq struct {
	// Maximum number of indexes to keep before deleting the oldest one.
	MaxMinusIndexMinusCount OptInt64 `json:"max-index-count"`
	// Service integrations to enable for the service. Some integration types affect how a service is
	// created and they must be provided as part of the creation call instead of being defined later.
	Integrations []CreateDbaasServiceOpensearchReqIntegrationsItem `json:"integrations"`
	// Aiven automation resets index.refresh_interval to default value for every index to be sure that
	// indices are always visible to search. If it doesn't fit your case, you can disable this by setting
	// up this flag to true.
	KeepMinusIndexMinusRefreshMinusInterval OptBool `json:"keep-index-refresh-interval"`
	// Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
	IPMinusFilter []string `json:"ip-filter"`
	// Service is protected against termination and powering off.
	TerminationMinusProtection OptBool `json:"termination-protection"`
	// Service to fork from.
	ForkMinusFromMinusService OptDbaasServiceName `json:"fork-from-service"`
	// Allows you to create glob style patterns and set a max number of indexes matching this pattern you
	// want to keep. Creating indexes exceeding this value will cause the oldest one to get deleted. You
	// could for example create a pattern looking like 'logs.?' and then create index logs.1, logs.2 etc,
	// it will delete logs.1 once you create logs.6. Do note 'logs.?' does not apply to logs.10. Note:
	// Setting max_index_count to 0 will do nothing and the pattern gets ignored.
	IndexMinusPatterns []CreateDbaasServiceOpensearchReqIndexMinusPatternsItem `json:"index-patterns"`
	// Automatic maintenance settings.
	Maintenance OptCreateDbaasServiceOpensearchReqMaintenance `json:"maintenance"`
	// Template settings for all new indexes.
	IndexMinusTemplate OptCreateDbaasServiceOpensearchReqIndexMinusTemplate `json:"index-template"`
	// OpenSearch-specific settings.
	OpensearchMinusSettings *CreateDbaasServiceOpensearchReqOpensearchMinusSettings `json:"opensearch-settings"`
	// OpenSearch major version.
	Version OptString `json:"version"`
	// Name of a backup to recover from for services that support backup names.
	RecoveryMinusBackupMinusName OptString `json:"recovery-backup-name"`
	// Subscription plan.
	Plan string `json:"plan"`
	// OpenSearch Dashboards settings.
	OpensearchMinusDashboards OptCreateDbaasServiceOpensearchReqOpensearchMinusDashboards `json:"opensearch-dashboards"`
}

// GetMaxMinusIndexMinusCount returns the value of MaxMinusIndexMinusCount.
func (s *CreateDbaasServiceOpensearchReq) GetMaxMinusIndexMinusCount() OptInt64 {
	return s.MaxMinusIndexMinusCount
}

// GetIntegrations returns the value of Integrations.
func (s *CreateDbaasServiceOpensearchReq) GetIntegrations() []CreateDbaasServiceOpensearchReqIntegrationsItem {
	return s.Integrations
}

// GetKeepMinusIndexMinusRefreshMinusInterval returns the value of KeepMinusIndexMinusRefreshMinusInterval.
func (s *CreateDbaasServiceOpensearchReq) GetKeepMinusIndexMinusRefreshMinusInterval() OptBool {
	return s.KeepMinusIndexMinusRefreshMinusInterval
}

// GetIPMinusFilter returns the value of IPMinusFilter.
func (s *CreateDbaasServiceOpensearchReq) GetIPMinusFilter() []string {
	return s.IPMinusFilter
}

// GetTerminationMinusProtection returns the value of TerminationMinusProtection.
func (s *CreateDbaasServiceOpensearchReq) GetTerminationMinusProtection() OptBool {
	return s.TerminationMinusProtection
}

// GetForkMinusFromMinusService returns the value of ForkMinusFromMinusService.
func (s *CreateDbaasServiceOpensearchReq) GetForkMinusFromMinusService() OptDbaasServiceName {
	return s.ForkMinusFromMinusService
}

// GetIndexMinusPatterns returns the value of IndexMinusPatterns.
func (s *CreateDbaasServiceOpensearchReq) GetIndexMinusPatterns() []CreateDbaasServiceOpensearchReqIndexMinusPatternsItem {
	return s.IndexMinusPatterns
}

// GetMaintenance returns the value of Maintenance.
func (s *CreateDbaasServiceOpensearchReq) GetMaintenance() OptCreateDbaasServiceOpensearchReqMaintenance {
	return s.Maintenance
}

// GetIndexMinusTemplate returns the value of IndexMinusTemplate.
func (s *CreateDbaasServiceOpensearchReq) GetIndexMinusTemplate() OptCreateDbaasServiceOpensearchReqIndexMinusTemplate {
	return s.IndexMinusTemplate
}

// GetOpensearchMinusSettings returns the value of OpensearchMinusSettings.
func (s *CreateDbaasServiceOpensearchReq) GetOpensearchMinusSettings() *CreateDbaasServiceOpensearchReqOpensearchMinusSettings {
	return s.OpensearchMinusSettings
}

// GetVersion returns the value of Version.
func (s *CreateDbaasServiceOpensearchReq) GetVersion() OptString {
	return s.Version
}

// GetRecoveryMinusBackupMinusName returns the value of RecoveryMinusBackupMinusName.
func (s *CreateDbaasServiceOpensearchReq) GetRecoveryMinusBackupMinusName() OptString {
	return s.RecoveryMinusBackupMinusName
}

// GetPlan returns the value of Plan.
func (s *CreateDbaasServiceOpensearchReq) GetPlan() string {
	return s.Plan
}

// GetOpensearchMinusDashboards returns the value of OpensearchMinusDashboards.
func (s *CreateDbaasServiceOpensearchReq) GetOpensearchMinusDashboards() OptCreateDbaasServiceOpensearchReqOpensearchMinusDashboards {
	return s.OpensearchMinusDashboards
}

// SetMaxMinusIndexMinusCount sets the value of MaxMinusIndexMinusCount.
func (s *CreateDbaasServiceOpensearchReq) SetMaxMinusIndexMinusCount(val OptInt64) {
	s.MaxMinusIndexMinusCount = val
}

// SetIntegrations sets the value of Integrations.
func (s *CreateDbaasServiceOpensearchReq) SetIntegrations(val []CreateDbaasServiceOpensearchReqIntegrationsItem) {
	s.Integrations = val
}

// SetKeepMinusIndexMinusRefreshMinusInterval sets the value of KeepMinusIndexMinusRefreshMinusInterval.
func (s *CreateDbaasServiceOpensearchReq) SetKeepMinusIndexMinusRefreshMinusInterval(val OptBool) {
	s.KeepMinusIndexMinusRefreshMinusInterval = val
}

// SetIPMinusFilter sets the value of IPMinusFilter.
func (s *CreateDbaasServiceOpensearchReq) SetIPMinusFilter(val []string) {
	s.IPMinusFilter = val
}

// SetTerminationMinusProtection sets the value of TerminationMinusProtection.
func (s *CreateDbaasServiceOpensearchReq) SetTerminationMinusProtection(val OptBool) {
	s.TerminationMinusProtection = val
}

// SetForkMinusFromMinusService sets the value of ForkMinusFromMinusService.
func (s *CreateDbaasServiceOpensearchReq) SetForkMinusFromMinusService(val OptDbaasServiceName) {
	s.ForkMinusFromMinusService = val
}

// SetIndexMinusPatterns sets the value of IndexMinusPatterns.
func (s *CreateDbaasServiceOpensearchReq) SetIndexMinusPatterns(val []CreateDbaasServiceOpensearchReqIndexMinusPatternsItem) {
	s.IndexMinusPatterns = val
}

// SetMaintenance sets the value of Maintenance.
func (s *CreateDbaasServiceOpensearchReq) SetMaintenance(val OptCreateDbaasServiceOpensearchReqMaintenance) {
	s.Maintenance = val
}

// SetIndexMinusTemplate sets the value of IndexMinusTemplate.
func (s *CreateDbaasServiceOpensearchReq) SetIndexMinusTemplate(val OptCreateDbaasServiceOpensearchReqIndexMinusTemplate) {
	s.IndexMinusTemplate = val
}

// SetOpensearchMinusSettings sets the value of OpensearchMinusSettings.
func (s *CreateDbaasServiceOpensearchReq) SetOpensearchMinusSettings(val *CreateDbaasServiceOpensearchReqOpensearchMinusSettings) {
	s.OpensearchMinusSettings = val
}

// SetVersion sets the value of Version.
func (s *CreateDbaasServiceOpensearchReq) SetVersion(val OptString) {
	s.Version = val
}

// SetRecoveryMinusBackupMinusName sets the value of RecoveryMinusBackupMinusName.
func (s *CreateDbaasServiceOpensearchReq) SetRecoveryMinusBackupMinusName(val OptString) {
	s.RecoveryMinusBackupMinusName = val
}

// SetPlan sets the value of Plan.
func (s *CreateDbaasServiceOpensearchReq) SetPlan(val string) {
	s.Plan = val
}

// SetOpensearchMinusDashboards sets the value of OpensearchMinusDashboards.
func (s *CreateDbaasServiceOpensearchReq) SetOpensearchMinusDashboards(val OptCreateDbaasServiceOpensearchReqOpensearchMinusDashboards) {
	s.OpensearchMinusDashboards = val
}

type CreateDbaasServiceOpensearchReqIndexMinusPatternsItem struct {
	// Maximum number of indexes to keep.
	MaxMinusIndexMinusCount OptInt64 `json:"max-index-count"`
	// Deletion sorting algorithm.
	SortingMinusAlgorithm OptCreateDbaasServiceOpensearchReqIndexMinusPatternsItemSortingMinusAlgorithm `json:"sorting-algorithm"`
	// Fnmatch pattern.
	Pattern OptString `json:"pattern"`
}

// GetMaxMinusIndexMinusCount returns the value of MaxMinusIndexMinusCount.
func (s *CreateDbaasServiceOpensearchReqIndexMinusPatternsItem) GetMaxMinusIndexMinusCount() OptInt64 {
	return s.MaxMinusIndexMinusCount
}

// GetSortingMinusAlgorithm returns the value of SortingMinusAlgorithm.
func (s *CreateDbaasServiceOpensearchReqIndexMinusPatternsItem) GetSortingMinusAlgorithm() OptCreateDbaasServiceOpensearchReqIndexMinusPatternsItemSortingMinusAlgorithm {
	return s.SortingMinusAlgorithm
}

// GetPattern returns the value of Pattern.
func (s *CreateDbaasServiceOpensearchReqIndexMinusPatternsItem) GetPattern() OptString {
	return s.Pattern
}

// SetMaxMinusIndexMinusCount sets the value of MaxMinusIndexMinusCount.
func (s *CreateDbaasServiceOpensearchReqIndexMinusPatternsItem) SetMaxMinusIndexMinusCount(val OptInt64) {
	s.MaxMinusIndexMinusCount = val
}

// SetSortingMinusAlgorithm sets the value of SortingMinusAlgorithm.
func (s *CreateDbaasServiceOpensearchReqIndexMinusPatternsItem) SetSortingMinusAlgorithm(val OptCreateDbaasServiceOpensearchReqIndexMinusPatternsItemSortingMinusAlgorithm) {
	s.SortingMinusAlgorithm = val
}

// SetPattern sets the value of Pattern.
func (s *CreateDbaasServiceOpensearchReqIndexMinusPatternsItem) SetPattern(val OptString) {
	s.Pattern = val
}

// Deletion sorting algorithm.
type CreateDbaasServiceOpensearchReqIndexMinusPatternsItemSortingMinusAlgorithm string

const (
	CreateDbaasServiceOpensearchReqIndexMinusPatternsItemSortingMinusAlgorithmAlphabetical CreateDbaasServiceOpensearchReqIndexMinusPatternsItemSortingMinusAlgorithm = "alphabetical"
	CreateDbaasServiceOpensearchReqIndexMinusPatternsItemSortingMinusAlgorithmCreationDate CreateDbaasServiceOpensearchReqIndexMinusPatternsItemSortingMinusAlgorithm = "creation_date"
)

// MarshalText implements encoding.TextMarshaler.
func (s CreateDbaasServiceOpensearchReqIndexMinusPatternsItemSortingMinusAlgorithm) MarshalText() ([]byte, error) {
	switch s {
	case CreateDbaasServiceOpensearchReqIndexMinusPatternsItemSortingMinusAlgorithmAlphabetical:
		return []byte(s), nil
	case CreateDbaasServiceOpensearchReqIndexMinusPatternsItemSortingMinusAlgorithmCreationDate:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *CreateDbaasServiceOpensearchReqIndexMinusPatternsItemSortingMinusAlgorithm) UnmarshalText(data []byte) error {
	switch CreateDbaasServiceOpensearchReqIndexMinusPatternsItemSortingMinusAlgorithm(data) {
	case CreateDbaasServiceOpensearchReqIndexMinusPatternsItemSortingMinusAlgorithmAlphabetical:
		*s = CreateDbaasServiceOpensearchReqIndexMinusPatternsItemSortingMinusAlgorithmAlphabetical
		return nil
	case CreateDbaasServiceOpensearchReqIndexMinusPatternsItemSortingMinusAlgorithmCreationDate:
		*s = CreateDbaasServiceOpensearchReqIndexMinusPatternsItemSortingMinusAlgorithmCreationDate
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Template settings for all new indexes.
type CreateDbaasServiceOpensearchReqIndexMinusTemplate struct {
	// The maximum number of nested JSON objects that a single document can contain across all nested
	// types. This limit helps to prevent out of memory errors when a document contains too many nested
	// objects. Default is 10000.
	MappingMinusNestedMinusObjectsMinusLimit OptInt64 `json:"mapping-nested-objects-limit"`
	// The number of replicas each primary shard has.
	NumberMinusOfMinusReplicas OptInt64 `json:"number-of-replicas"`
	// The number of primary shards that an index should have.
	NumberMinusOfMinusShards OptInt64 `json:"number-of-shards"`
}

// GetMappingMinusNestedMinusObjectsMinusLimit returns the value of MappingMinusNestedMinusObjectsMinusLimit.
func (s *CreateDbaasServiceOpensearchReqIndexMinusTemplate) GetMappingMinusNestedMinusObjectsMinusLimit() OptInt64 {
	return s.MappingMinusNestedMinusObjectsMinusLimit
}

// GetNumberMinusOfMinusReplicas returns the value of NumberMinusOfMinusReplicas.
func (s *CreateDbaasServiceOpensearchReqIndexMinusTemplate) GetNumberMinusOfMinusReplicas() OptInt64 {
	return s.NumberMinusOfMinusReplicas
}

// GetNumberMinusOfMinusShards returns the value of NumberMinusOfMinusShards.
func (s *CreateDbaasServiceOpensearchReqIndexMinusTemplate) GetNumberMinusOfMinusShards() OptInt64 {
	return s.NumberMinusOfMinusShards
}

// SetMappingMinusNestedMinusObjectsMinusLimit sets the value of MappingMinusNestedMinusObjectsMinusLimit.
func (s *CreateDbaasServiceOpensearchReqIndexMinusTemplate) SetMappingMinusNestedMinusObjectsMinusLimit(val OptInt64) {
	s.MappingMinusNestedMinusObjectsMinusLimit = val
}

// SetNumberMinusOfMinusReplicas sets the value of NumberMinusOfMinusReplicas.
func (s *CreateDbaasServiceOpensearchReqIndexMinusTemplate) SetNumberMinusOfMinusReplicas(val OptInt64) {
	s.NumberMinusOfMinusReplicas = val
}

// SetNumberMinusOfMinusShards sets the value of NumberMinusOfMinusShards.
func (s *CreateDbaasServiceOpensearchReqIndexMinusTemplate) SetNumberMinusOfMinusShards(val OptInt64) {
	s.NumberMinusOfMinusShards = val
}

type CreateDbaasServiceOpensearchReqIntegrationsItem struct {
	// Integration type.
	Type EnumIntegrationTypes `json:"type"`
	// A source service.
	SourceMinusService OptDbaasServiceName `json:"source-service"`
	// A destination service.
	DestMinusService OptDbaasServiceName `json:"dest-service"`
	// Integration settings.
	Settings *CreateDbaasServiceOpensearchReqIntegrationsItemSettings `json:"settings"`
}

// GetType returns the value of Type.
func (s *CreateDbaasServiceOpensearchReqIntegrationsItem) GetType() EnumIntegrationTypes {
	return s.Type
}

// GetSourceMinusService returns the value of SourceMinusService.
func (s *CreateDbaasServiceOpensearchReqIntegrationsItem) GetSourceMinusService() OptDbaasServiceName {
	return s.SourceMinusService
}

// GetDestMinusService returns the value of DestMinusService.
func (s *CreateDbaasServiceOpensearchReqIntegrationsItem) GetDestMinusService() OptDbaasServiceName {
	return s.DestMinusService
}

// GetSettings returns the value of Settings.
func (s *CreateDbaasServiceOpensearchReqIntegrationsItem) GetSettings() *CreateDbaasServiceOpensearchReqIntegrationsItemSettings {
	return s.Settings
}

// SetType sets the value of Type.
func (s *CreateDbaasServiceOpensearchReqIntegrationsItem) SetType(val EnumIntegrationTypes) {
	s.Type = val
}

// SetSourceMinusService sets the value of SourceMinusService.
func (s *CreateDbaasServiceOpensearchReqIntegrationsItem) SetSourceMinusService(val OptDbaasServiceName) {
	s.SourceMinusService = val
}

// SetDestMinusService sets the value of DestMinusService.
func (s *CreateDbaasServiceOpensearchReqIntegrationsItem) SetDestMinusService(val OptDbaasServiceName) {
	s.DestMinusService = val
}

// SetSettings sets the value of Settings.
func (s *CreateDbaasServiceOpensearchReqIntegrationsItem) SetSettings(val *CreateDbaasServiceOpensearchReqIntegrationsItemSettings) {
	s.Settings = val
}

// Integration settings.
type CreateDbaasServiceOpensearchReqIntegrationsItemSettings struct{}

// Automatic maintenance settings.
type CreateDbaasServiceOpensearchReqMaintenance struct {
	// Day of week for installing updates.
	Dow CreateDbaasServiceOpensearchReqMaintenanceDow `json:"dow"`
	// Time for installing updates, UTC.
	Time string `json:"time"`
}

// GetDow returns the value of Dow.
func (s *CreateDbaasServiceOpensearchReqMaintenance) GetDow() CreateDbaasServiceOpensearchReqMaintenanceDow {
	return s.Dow
}

// GetTime returns the value of Time.
func (s *CreateDbaasServiceOpensearchReqMaintenance) GetTime() string {
	return s.Time
}

// SetDow sets the value of Dow.
func (s *CreateDbaasServiceOpensearchReqMaintenance) SetDow(val CreateDbaasServiceOpensearchReqMaintenanceDow) {
	s.Dow = val
}

// SetTime sets the value of Time.
func (s *CreateDbaasServiceOpensearchReqMaintenance) SetTime(val string) {
	s.Time = val
}

// Day of week for installing updates.
type CreateDbaasServiceOpensearchReqMaintenanceDow string

const (
	CreateDbaasServiceOpensearchReqMaintenanceDowSaturday  CreateDbaasServiceOpensearchReqMaintenanceDow = "saturday"
	CreateDbaasServiceOpensearchReqMaintenanceDowTuesday   CreateDbaasServiceOpensearchReqMaintenanceDow = "tuesday"
	CreateDbaasServiceOpensearchReqMaintenanceDowNever     CreateDbaasServiceOpensearchReqMaintenanceDow = "never"
	CreateDbaasServiceOpensearchReqMaintenanceDowWednesday CreateDbaasServiceOpensearchReqMaintenanceDow = "wednesday"
	CreateDbaasServiceOpensearchReqMaintenanceDowSunday    CreateDbaasServiceOpensearchReqMaintenanceDow = "sunday"
	CreateDbaasServiceOpensearchReqMaintenanceDowFriday    CreateDbaasServiceOpensearchReqMaintenanceDow = "friday"
	CreateDbaasServiceOpensearchReqMaintenanceDowMonday    CreateDbaasServiceOpensearchReqMaintenanceDow = "monday"
	CreateDbaasServiceOpensearchReqMaintenanceDowThursday  CreateDbaasServiceOpensearchReqMaintenanceDow = "thursday"
)

// MarshalText implements encoding.TextMarshaler.
func (s CreateDbaasServiceOpensearchReqMaintenanceDow) MarshalText() ([]byte, error) {
	switch s {
	case CreateDbaasServiceOpensearchReqMaintenanceDowSaturday:
		return []byte(s), nil
	case CreateDbaasServiceOpensearchReqMaintenanceDowTuesday:
		return []byte(s), nil
	case CreateDbaasServiceOpensearchReqMaintenanceDowNever:
		return []byte(s), nil
	case CreateDbaasServiceOpensearchReqMaintenanceDowWednesday:
		return []byte(s), nil
	case CreateDbaasServiceOpensearchReqMaintenanceDowSunday:
		return []byte(s), nil
	case CreateDbaasServiceOpensearchReqMaintenanceDowFriday:
		return []byte(s), nil
	case CreateDbaasServiceOpensearchReqMaintenanceDowMonday:
		return []byte(s), nil
	case CreateDbaasServiceOpensearchReqMaintenanceDowThursday:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *CreateDbaasServiceOpensearchReqMaintenanceDow) UnmarshalText(data []byte) error {
	switch CreateDbaasServiceOpensearchReqMaintenanceDow(data) {
	case CreateDbaasServiceOpensearchReqMaintenanceDowSaturday:
		*s = CreateDbaasServiceOpensearchReqMaintenanceDowSaturday
		return nil
	case CreateDbaasServiceOpensearchReqMaintenanceDowTuesday:
		*s = CreateDbaasServiceOpensearchReqMaintenanceDowTuesday
		return nil
	case CreateDbaasServiceOpensearchReqMaintenanceDowNever:
		*s = CreateDbaasServiceOpensearchReqMaintenanceDowNever
		return nil
	case CreateDbaasServiceOpensearchReqMaintenanceDowWednesday:
		*s = CreateDbaasServiceOpensearchReqMaintenanceDowWednesday
		return nil
	case CreateDbaasServiceOpensearchReqMaintenanceDowSunday:
		*s = CreateDbaasServiceOpensearchReqMaintenanceDowSunday
		return nil
	case CreateDbaasServiceOpensearchReqMaintenanceDowFriday:
		*s = CreateDbaasServiceOpensearchReqMaintenanceDowFriday
		return nil
	case CreateDbaasServiceOpensearchReqMaintenanceDowMonday:
		*s = CreateDbaasServiceOpensearchReqMaintenanceDowMonday
		return nil
	case CreateDbaasServiceOpensearchReqMaintenanceDowThursday:
		*s = CreateDbaasServiceOpensearchReqMaintenanceDowThursday
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// OpenSearch Dashboards settings.
type CreateDbaasServiceOpensearchReqOpensearchMinusDashboards struct {
	// Timeout in milliseconds for requests made by OpenSearch Dashboards towards OpenSearch (default:
	// 30000).
	OpensearchMinusRequestMinusTimeout OptInt64 `json:"opensearch-request-timeout"`
	// Enable or disable OpenSearch Dashboards (default: true).
	Enabled OptBool `json:"enabled"`
	// Limits the maximum amount of memory (in MiB) the OpenSearch Dashboards process can use. This sets
	// the max_old_space_size option of the nodejs running the OpenSearch Dashboards. Note: the memory
	// reserved by OpenSearch Dashboards is not available for OpenSearch. (default: 128).
	MaxMinusOldMinusSpaceMinusSize OptInt64 `json:"max-old-space-size"`
}

// GetOpensearchMinusRequestMinusTimeout returns the value of OpensearchMinusRequestMinusTimeout.
func (s *CreateDbaasServiceOpensearchReqOpensearchMinusDashboards) GetOpensearchMinusRequestMinusTimeout() OptInt64 {
	return s.OpensearchMinusRequestMinusTimeout
}

// GetEnabled returns the value of Enabled.
func (s *CreateDbaasServiceOpensearchReqOpensearchMinusDashboards) GetEnabled() OptBool {
	return s.Enabled
}

// GetMaxMinusOldMinusSpaceMinusSize returns the value of MaxMinusOldMinusSpaceMinusSize.
func (s *CreateDbaasServiceOpensearchReqOpensearchMinusDashboards) GetMaxMinusOldMinusSpaceMinusSize() OptInt64 {
	return s.MaxMinusOldMinusSpaceMinusSize
}

// SetOpensearchMinusRequestMinusTimeout sets the value of OpensearchMinusRequestMinusTimeout.
func (s *CreateDbaasServiceOpensearchReqOpensearchMinusDashboards) SetOpensearchMinusRequestMinusTimeout(val OptInt64) {
	s.OpensearchMinusRequestMinusTimeout = val
}

// SetEnabled sets the value of Enabled.
func (s *CreateDbaasServiceOpensearchReqOpensearchMinusDashboards) SetEnabled(val OptBool) {
	s.Enabled = val
}

// SetMaxMinusOldMinusSpaceMinusSize sets the value of MaxMinusOldMinusSpaceMinusSize.
func (s *CreateDbaasServiceOpensearchReqOpensearchMinusDashboards) SetMaxMinusOldMinusSpaceMinusSize(val OptInt64) {
	s.MaxMinusOldMinusSpaceMinusSize = val
}

// OpenSearch-specific settings.
type CreateDbaasServiceOpensearchReqOpensearchMinusSettings struct{}

type CreateDbaasServicePgReq struct {
	// PGBouncer connection pooling settings.
	PgbouncerMinusSettings *CreateDbaasServicePgReqPgbouncerMinusSettings `json:"pgbouncer-settings"`
	BackupMinusSchedule    OptCreateDbaasServicePgReqBackupMinusSchedule  `json:"backup-schedule"`
	// Variant of the PostgreSQL service, may affect the features that are exposed by default.
	Variant OptEnumPgVariant `json:"variant"`
	// Service integrations to enable for the service. Some integration types affect how a service is
	// created and they must be provided as part of the creation call instead of being defined later.
	Integrations []CreateDbaasServicePgReqIntegrationsItem `json:"integrations"`
	// TimescaleDB extension configuration values.
	TimescaledbMinusSettings *CreateDbaasServicePgReqTimescaledbMinusSettings `json:"timescaledb-settings"`
	// Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
	IPMinusFilter []string `json:"ip-filter"`
	// Service is protected against termination and powering off.
	TerminationMinusProtection OptBool `json:"termination-protection"`
	// Service to fork from.
	ForkMinusFromMinusService OptDbaasServiceName `json:"fork-from-service"`
	// Synchronous replication type. Note that the service plan also needs to support synchronous
	// replication.
	SynchronousMinusReplication OptEnumPgSynchronousReplication `json:"synchronous-replication"`
	// ISO time of a backup to recover from for services that support arbitrary times.
	RecoveryMinusBackupMinusTime OptString `json:"recovery-backup-time"`
	// PGLookout settings.
	PglookoutMinusSettings *CreateDbaasServicePgReqPglookoutMinusSettings `json:"pglookout-settings"`
	// Automatic maintenance settings.
	Maintenance OptCreateDbaasServicePgReqMaintenance `json:"maintenance"`
	// Custom username for admin user. This must be set only when a new service is being created.
	AdminMinusUsername OptString `json:"admin-username"`
	// PostgreSQL major version.
	Version OptString `json:"version"`
	// Subscription plan.
	Plan string `json:"plan"`
	// Sets the maximum amount of memory to be used by a query operation (such as a sort or hash table)
	// before writing to temporary disk files, in MB. Default is 1MB + 0.075% of total RAM (up to 32MB).
	WorkMinusMem OptInt64 `json:"work-mem"`
	// Percentage of total RAM that the database server uses for shared memory buffers. Valid range is
	// 20-60 (float), which corresponds to 20% - 60%. This setting adjusts the shared_buffers
	// configuration value.
	SharedMinusBuffersMinusPercentage OptInt64 `json:"shared-buffers-percentage"`
	// PostgreSQL-specific settings.
	PgMinusSettings *CreateDbaasServicePgReqPgMinusSettings `json:"pg-settings"`
	// Custom password for admin user. Defaults to random string. This must be set only when a new
	// service is being created.
	AdminMinusPassword OptString `json:"admin-password"`
	// Migrate data from existing server.
	Migration OptCreateDbaasServicePgReqMigration `json:"migration"`
}

// GetPgbouncerMinusSettings returns the value of PgbouncerMinusSettings.
func (s *CreateDbaasServicePgReq) GetPgbouncerMinusSettings() *CreateDbaasServicePgReqPgbouncerMinusSettings {
	return s.PgbouncerMinusSettings
}

// GetBackupMinusSchedule returns the value of BackupMinusSchedule.
func (s *CreateDbaasServicePgReq) GetBackupMinusSchedule() OptCreateDbaasServicePgReqBackupMinusSchedule {
	return s.BackupMinusSchedule
}

// GetVariant returns the value of Variant.
func (s *CreateDbaasServicePgReq) GetVariant() OptEnumPgVariant {
	return s.Variant
}

// GetIntegrations returns the value of Integrations.
func (s *CreateDbaasServicePgReq) GetIntegrations() []CreateDbaasServicePgReqIntegrationsItem {
	return s.Integrations
}

// GetTimescaledbMinusSettings returns the value of TimescaledbMinusSettings.
func (s *CreateDbaasServicePgReq) GetTimescaledbMinusSettings() *CreateDbaasServicePgReqTimescaledbMinusSettings {
	return s.TimescaledbMinusSettings
}

// GetIPMinusFilter returns the value of IPMinusFilter.
func (s *CreateDbaasServicePgReq) GetIPMinusFilter() []string {
	return s.IPMinusFilter
}

// GetTerminationMinusProtection returns the value of TerminationMinusProtection.
func (s *CreateDbaasServicePgReq) GetTerminationMinusProtection() OptBool {
	return s.TerminationMinusProtection
}

// GetForkMinusFromMinusService returns the value of ForkMinusFromMinusService.
func (s *CreateDbaasServicePgReq) GetForkMinusFromMinusService() OptDbaasServiceName {
	return s.ForkMinusFromMinusService
}

// GetSynchronousMinusReplication returns the value of SynchronousMinusReplication.
func (s *CreateDbaasServicePgReq) GetSynchronousMinusReplication() OptEnumPgSynchronousReplication {
	return s.SynchronousMinusReplication
}

// GetRecoveryMinusBackupMinusTime returns the value of RecoveryMinusBackupMinusTime.
func (s *CreateDbaasServicePgReq) GetRecoveryMinusBackupMinusTime() OptString {
	return s.RecoveryMinusBackupMinusTime
}

// GetPglookoutMinusSettings returns the value of PglookoutMinusSettings.
func (s *CreateDbaasServicePgReq) GetPglookoutMinusSettings() *CreateDbaasServicePgReqPglookoutMinusSettings {
	return s.PglookoutMinusSettings
}

// GetMaintenance returns the value of Maintenance.
func (s *CreateDbaasServicePgReq) GetMaintenance() OptCreateDbaasServicePgReqMaintenance {
	return s.Maintenance
}

// GetAdminMinusUsername returns the value of AdminMinusUsername.
func (s *CreateDbaasServicePgReq) GetAdminMinusUsername() OptString {
	return s.AdminMinusUsername
}

// GetVersion returns the value of Version.
func (s *CreateDbaasServicePgReq) GetVersion() OptString {
	return s.Version
}

// GetPlan returns the value of Plan.
func (s *CreateDbaasServicePgReq) GetPlan() string {
	return s.Plan
}

// GetWorkMinusMem returns the value of WorkMinusMem.
func (s *CreateDbaasServicePgReq) GetWorkMinusMem() OptInt64 {
	return s.WorkMinusMem
}

// GetSharedMinusBuffersMinusPercentage returns the value of SharedMinusBuffersMinusPercentage.
func (s *CreateDbaasServicePgReq) GetSharedMinusBuffersMinusPercentage() OptInt64 {
	return s.SharedMinusBuffersMinusPercentage
}

// GetPgMinusSettings returns the value of PgMinusSettings.
func (s *CreateDbaasServicePgReq) GetPgMinusSettings() *CreateDbaasServicePgReqPgMinusSettings {
	return s.PgMinusSettings
}

// GetAdminMinusPassword returns the value of AdminMinusPassword.
func (s *CreateDbaasServicePgReq) GetAdminMinusPassword() OptString {
	return s.AdminMinusPassword
}

// GetMigration returns the value of Migration.
func (s *CreateDbaasServicePgReq) GetMigration() OptCreateDbaasServicePgReqMigration {
	return s.Migration
}

// SetPgbouncerMinusSettings sets the value of PgbouncerMinusSettings.
func (s *CreateDbaasServicePgReq) SetPgbouncerMinusSettings(val *CreateDbaasServicePgReqPgbouncerMinusSettings) {
	s.PgbouncerMinusSettings = val
}

// SetBackupMinusSchedule sets the value of BackupMinusSchedule.
func (s *CreateDbaasServicePgReq) SetBackupMinusSchedule(val OptCreateDbaasServicePgReqBackupMinusSchedule) {
	s.BackupMinusSchedule = val
}

// SetVariant sets the value of Variant.
func (s *CreateDbaasServicePgReq) SetVariant(val OptEnumPgVariant) {
	s.Variant = val
}

// SetIntegrations sets the value of Integrations.
func (s *CreateDbaasServicePgReq) SetIntegrations(val []CreateDbaasServicePgReqIntegrationsItem) {
	s.Integrations = val
}

// SetTimescaledbMinusSettings sets the value of TimescaledbMinusSettings.
func (s *CreateDbaasServicePgReq) SetTimescaledbMinusSettings(val *CreateDbaasServicePgReqTimescaledbMinusSettings) {
	s.TimescaledbMinusSettings = val
}

// SetIPMinusFilter sets the value of IPMinusFilter.
func (s *CreateDbaasServicePgReq) SetIPMinusFilter(val []string) {
	s.IPMinusFilter = val
}

// SetTerminationMinusProtection sets the value of TerminationMinusProtection.
func (s *CreateDbaasServicePgReq) SetTerminationMinusProtection(val OptBool) {
	s.TerminationMinusProtection = val
}

// SetForkMinusFromMinusService sets the value of ForkMinusFromMinusService.
func (s *CreateDbaasServicePgReq) SetForkMinusFromMinusService(val OptDbaasServiceName) {
	s.ForkMinusFromMinusService = val
}

// SetSynchronousMinusReplication sets the value of SynchronousMinusReplication.
func (s *CreateDbaasServicePgReq) SetSynchronousMinusReplication(val OptEnumPgSynchronousReplication) {
	s.SynchronousMinusReplication = val
}

// SetRecoveryMinusBackupMinusTime sets the value of RecoveryMinusBackupMinusTime.
func (s *CreateDbaasServicePgReq) SetRecoveryMinusBackupMinusTime(val OptString) {
	s.RecoveryMinusBackupMinusTime = val
}

// SetPglookoutMinusSettings sets the value of PglookoutMinusSettings.
func (s *CreateDbaasServicePgReq) SetPglookoutMinusSettings(val *CreateDbaasServicePgReqPglookoutMinusSettings) {
	s.PglookoutMinusSettings = val
}

// SetMaintenance sets the value of Maintenance.
func (s *CreateDbaasServicePgReq) SetMaintenance(val OptCreateDbaasServicePgReqMaintenance) {
	s.Maintenance = val
}

// SetAdminMinusUsername sets the value of AdminMinusUsername.
func (s *CreateDbaasServicePgReq) SetAdminMinusUsername(val OptString) {
	s.AdminMinusUsername = val
}

// SetVersion sets the value of Version.
func (s *CreateDbaasServicePgReq) SetVersion(val OptString) {
	s.Version = val
}

// SetPlan sets the value of Plan.
func (s *CreateDbaasServicePgReq) SetPlan(val string) {
	s.Plan = val
}

// SetWorkMinusMem sets the value of WorkMinusMem.
func (s *CreateDbaasServicePgReq) SetWorkMinusMem(val OptInt64) {
	s.WorkMinusMem = val
}

// SetSharedMinusBuffersMinusPercentage sets the value of SharedMinusBuffersMinusPercentage.
func (s *CreateDbaasServicePgReq) SetSharedMinusBuffersMinusPercentage(val OptInt64) {
	s.SharedMinusBuffersMinusPercentage = val
}

// SetPgMinusSettings sets the value of PgMinusSettings.
func (s *CreateDbaasServicePgReq) SetPgMinusSettings(val *CreateDbaasServicePgReqPgMinusSettings) {
	s.PgMinusSettings = val
}

// SetAdminMinusPassword sets the value of AdminMinusPassword.
func (s *CreateDbaasServicePgReq) SetAdminMinusPassword(val OptString) {
	s.AdminMinusPassword = val
}

// SetMigration sets the value of Migration.
func (s *CreateDbaasServicePgReq) SetMigration(val OptCreateDbaasServicePgReqMigration) {
	s.Migration = val
}

type CreateDbaasServicePgReqBackupMinusSchedule struct {
	// The hour of day (in UTC) when backup for the service is started. New backup is only started if
	// previous backup has already completed.
	BackupMinusHour OptInt64 `json:"backup-hour"`
	// The minute of an hour when backup for the service is started. New backup is only started if
	// previous backup has already completed.
	BackupMinusMinute OptInt64 `json:"backup-minute"`
}

// GetBackupMinusHour returns the value of BackupMinusHour.
func (s *CreateDbaasServicePgReqBackupMinusSchedule) GetBackupMinusHour() OptInt64 {
	return s.BackupMinusHour
}

// GetBackupMinusMinute returns the value of BackupMinusMinute.
func (s *CreateDbaasServicePgReqBackupMinusSchedule) GetBackupMinusMinute() OptInt64 {
	return s.BackupMinusMinute
}

// SetBackupMinusHour sets the value of BackupMinusHour.
func (s *CreateDbaasServicePgReqBackupMinusSchedule) SetBackupMinusHour(val OptInt64) {
	s.BackupMinusHour = val
}

// SetBackupMinusMinute sets the value of BackupMinusMinute.
func (s *CreateDbaasServicePgReqBackupMinusSchedule) SetBackupMinusMinute(val OptInt64) {
	s.BackupMinusMinute = val
}

type CreateDbaasServicePgReqIntegrationsItem struct {
	// Integration type.
	Type EnumIntegrationTypes `json:"type"`
	// A source service.
	SourceMinusService OptDbaasServiceName `json:"source-service"`
	// A destination service.
	DestMinusService OptDbaasServiceName `json:"dest-service"`
	// Integration settings.
	Settings *CreateDbaasServicePgReqIntegrationsItemSettings `json:"settings"`
}

// GetType returns the value of Type.
func (s *CreateDbaasServicePgReqIntegrationsItem) GetType() EnumIntegrationTypes {
	return s.Type
}

// GetSourceMinusService returns the value of SourceMinusService.
func (s *CreateDbaasServicePgReqIntegrationsItem) GetSourceMinusService() OptDbaasServiceName {
	return s.SourceMinusService
}

// GetDestMinusService returns the value of DestMinusService.
func (s *CreateDbaasServicePgReqIntegrationsItem) GetDestMinusService() OptDbaasServiceName {
	return s.DestMinusService
}

// GetSettings returns the value of Settings.
func (s *CreateDbaasServicePgReqIntegrationsItem) GetSettings() *CreateDbaasServicePgReqIntegrationsItemSettings {
	return s.Settings
}

// SetType sets the value of Type.
func (s *CreateDbaasServicePgReqIntegrationsItem) SetType(val EnumIntegrationTypes) {
	s.Type = val
}

// SetSourceMinusService sets the value of SourceMinusService.
func (s *CreateDbaasServicePgReqIntegrationsItem) SetSourceMinusService(val OptDbaasServiceName) {
	s.SourceMinusService = val
}

// SetDestMinusService sets the value of DestMinusService.
func (s *CreateDbaasServicePgReqIntegrationsItem) SetDestMinusService(val OptDbaasServiceName) {
	s.DestMinusService = val
}

// SetSettings sets the value of Settings.
func (s *CreateDbaasServicePgReqIntegrationsItem) SetSettings(val *CreateDbaasServicePgReqIntegrationsItemSettings) {
	s.Settings = val
}

// Integration settings.
type CreateDbaasServicePgReqIntegrationsItemSettings struct{}

// Automatic maintenance settings.
type CreateDbaasServicePgReqMaintenance struct {
	// Day of week for installing updates.
	Dow CreateDbaasServicePgReqMaintenanceDow `json:"dow"`
	// Time for installing updates, UTC.
	Time string `json:"time"`
}

// GetDow returns the value of Dow.
func (s *CreateDbaasServicePgReqMaintenance) GetDow() CreateDbaasServicePgReqMaintenanceDow {
	return s.Dow
}

// GetTime returns the value of Time.
func (s *CreateDbaasServicePgReqMaintenance) GetTime() string {
	return s.Time
}

// SetDow sets the value of Dow.
func (s *CreateDbaasServicePgReqMaintenance) SetDow(val CreateDbaasServicePgReqMaintenanceDow) {
	s.Dow = val
}

// SetTime sets the value of Time.
func (s *CreateDbaasServicePgReqMaintenance) SetTime(val string) {
	s.Time = val
}

// Day of week for installing updates.
type CreateDbaasServicePgReqMaintenanceDow string

const (
	CreateDbaasServicePgReqMaintenanceDowSaturday  CreateDbaasServicePgReqMaintenanceDow = "saturday"
	CreateDbaasServicePgReqMaintenanceDowTuesday   CreateDbaasServicePgReqMaintenanceDow = "tuesday"
	CreateDbaasServicePgReqMaintenanceDowNever     CreateDbaasServicePgReqMaintenanceDow = "never"
	CreateDbaasServicePgReqMaintenanceDowWednesday CreateDbaasServicePgReqMaintenanceDow = "wednesday"
	CreateDbaasServicePgReqMaintenanceDowSunday    CreateDbaasServicePgReqMaintenanceDow = "sunday"
	CreateDbaasServicePgReqMaintenanceDowFriday    CreateDbaasServicePgReqMaintenanceDow = "friday"
	CreateDbaasServicePgReqMaintenanceDowMonday    CreateDbaasServicePgReqMaintenanceDow = "monday"
	CreateDbaasServicePgReqMaintenanceDowThursday  CreateDbaasServicePgReqMaintenanceDow = "thursday"
)

// MarshalText implements encoding.TextMarshaler.
func (s CreateDbaasServicePgReqMaintenanceDow) MarshalText() ([]byte, error) {
	switch s {
	case CreateDbaasServicePgReqMaintenanceDowSaturday:
		return []byte(s), nil
	case CreateDbaasServicePgReqMaintenanceDowTuesday:
		return []byte(s), nil
	case CreateDbaasServicePgReqMaintenanceDowNever:
		return []byte(s), nil
	case CreateDbaasServicePgReqMaintenanceDowWednesday:
		return []byte(s), nil
	case CreateDbaasServicePgReqMaintenanceDowSunday:
		return []byte(s), nil
	case CreateDbaasServicePgReqMaintenanceDowFriday:
		return []byte(s), nil
	case CreateDbaasServicePgReqMaintenanceDowMonday:
		return []byte(s), nil
	case CreateDbaasServicePgReqMaintenanceDowThursday:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *CreateDbaasServicePgReqMaintenanceDow) UnmarshalText(data []byte) error {
	switch CreateDbaasServicePgReqMaintenanceDow(data) {
	case CreateDbaasServicePgReqMaintenanceDowSaturday:
		*s = CreateDbaasServicePgReqMaintenanceDowSaturday
		return nil
	case CreateDbaasServicePgReqMaintenanceDowTuesday:
		*s = CreateDbaasServicePgReqMaintenanceDowTuesday
		return nil
	case CreateDbaasServicePgReqMaintenanceDowNever:
		*s = CreateDbaasServicePgReqMaintenanceDowNever
		return nil
	case CreateDbaasServicePgReqMaintenanceDowWednesday:
		*s = CreateDbaasServicePgReqMaintenanceDowWednesday
		return nil
	case CreateDbaasServicePgReqMaintenanceDowSunday:
		*s = CreateDbaasServicePgReqMaintenanceDowSunday
		return nil
	case CreateDbaasServicePgReqMaintenanceDowFriday:
		*s = CreateDbaasServicePgReqMaintenanceDowFriday
		return nil
	case CreateDbaasServicePgReqMaintenanceDowMonday:
		*s = CreateDbaasServicePgReqMaintenanceDowMonday
		return nil
	case CreateDbaasServicePgReqMaintenanceDowThursday:
		*s = CreateDbaasServicePgReqMaintenanceDowThursday
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Migrate data from existing server.
type CreateDbaasServicePgReqMigration struct {
	// Hostname or IP address of the server where to migrate data from.
	Host string `json:"host"`
	// Port number of the server where to migrate data from.
	Port int64 `json:"port"`
	// Password for authentication with the server where to migrate data from.
	Password OptString `json:"password"`
	// The server where to migrate data from is secured with SSL.
	Ssl OptBool `json:"ssl"`
	// User name for authentication with the server where to migrate data from.
	Username OptString `json:"username"`
	// Database name for bootstrapping the initial connection.
	Dbname OptString `json:"dbname"`
	// Comma-separated list of databases, which should be ignored during migration (supported by MySQL
	// only at the moment).
	IgnoreMinusDbs OptString `json:"ignore-dbs"`
	// The migration method to be used.
	Method OptEnumMigrationMethod `json:"method"`
}

// GetHost returns the value of Host.
func (s *CreateDbaasServicePgReqMigration) GetHost() string {
	return s.Host
}

// GetPort returns the value of Port.
func (s *CreateDbaasServicePgReqMigration) GetPort() int64 {
	return s.Port
}

// GetPassword returns the value of Password.
func (s *CreateDbaasServicePgReqMigration) GetPassword() OptString {
	return s.Password
}

// GetSsl returns the value of Ssl.
func (s *CreateDbaasServicePgReqMigration) GetSsl() OptBool {
	return s.Ssl
}

// GetUsername returns the value of Username.
func (s *CreateDbaasServicePgReqMigration) GetUsername() OptString {
	return s.Username
}

// GetDbname returns the value of Dbname.
func (s *CreateDbaasServicePgReqMigration) GetDbname() OptString {
	return s.Dbname
}

// GetIgnoreMinusDbs returns the value of IgnoreMinusDbs.
func (s *CreateDbaasServicePgReqMigration) GetIgnoreMinusDbs() OptString {
	return s.IgnoreMinusDbs
}

// GetMethod returns the value of Method.
func (s *CreateDbaasServicePgReqMigration) GetMethod() OptEnumMigrationMethod {
	return s.Method
}

// SetHost sets the value of Host.
func (s *CreateDbaasServicePgReqMigration) SetHost(val string) {
	s.Host = val
}

// SetPort sets the value of Port.
func (s *CreateDbaasServicePgReqMigration) SetPort(val int64) {
	s.Port = val
}

// SetPassword sets the value of Password.
func (s *CreateDbaasServicePgReqMigration) SetPassword(val OptString) {
	s.Password = val
}

// SetSsl sets the value of Ssl.
func (s *CreateDbaasServicePgReqMigration) SetSsl(val OptBool) {
	s.Ssl = val
}

// SetUsername sets the value of Username.
func (s *CreateDbaasServicePgReqMigration) SetUsername(val OptString) {
	s.Username = val
}

// SetDbname sets the value of Dbname.
func (s *CreateDbaasServicePgReqMigration) SetDbname(val OptString) {
	s.Dbname = val
}

// SetIgnoreMinusDbs sets the value of IgnoreMinusDbs.
func (s *CreateDbaasServicePgReqMigration) SetIgnoreMinusDbs(val OptString) {
	s.IgnoreMinusDbs = val
}

// SetMethod sets the value of Method.
func (s *CreateDbaasServicePgReqMigration) SetMethod(val OptEnumMigrationMethod) {
	s.Method = val
}

// PostgreSQL-specific settings.
type CreateDbaasServicePgReqPgMinusSettings struct{}

// PGBouncer connection pooling settings.
type CreateDbaasServicePgReqPgbouncerMinusSettings struct{}

// PGLookout settings.
type CreateDbaasServicePgReqPglookoutMinusSettings struct{}

// TimescaleDB extension configuration values.
type CreateDbaasServicePgReqTimescaledbMinusSettings struct{}

type CreateDbaasServiceRedisReq struct {
	// Service integrations to enable for the service. Some integration types affect how a service is
	// created and they must be provided as part of the creation call instead of being defined later.
	Integrations []CreateDbaasServiceRedisReqIntegrationsItem `json:"integrations"`
	// Redis.conf settings.
	RedisMinusSettings *CreateDbaasServiceRedisReqRedisMinusSettings `json:"redis-settings"`
	// Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
	IPMinusFilter []string `json:"ip-filter"`
	// Service is protected against termination and powering off.
	TerminationMinusProtection OptBool `json:"termination-protection"`
	// Service to fork from.
	ForkMinusFromMinusService OptDbaasServiceName `json:"fork-from-service"`
	// Automatic maintenance settings.
	Maintenance OptCreateDbaasServiceRedisReqMaintenance `json:"maintenance"`
	// Name of a backup to recover from for services that support backup names.
	RecoveryMinusBackupMinusName OptString `json:"recovery-backup-name"`
	// Subscription plan.
	Plan string `json:"plan"`
	// Migrate data from existing server.
	Migration OptCreateDbaasServiceRedisReqMigration `json:"migration"`
}

// GetIntegrations returns the value of Integrations.
func (s *CreateDbaasServiceRedisReq) GetIntegrations() []CreateDbaasServiceRedisReqIntegrationsItem {
	return s.Integrations
}

// GetRedisMinusSettings returns the value of RedisMinusSettings.
func (s *CreateDbaasServiceRedisReq) GetRedisMinusSettings() *CreateDbaasServiceRedisReqRedisMinusSettings {
	return s.RedisMinusSettings
}

// GetIPMinusFilter returns the value of IPMinusFilter.
func (s *CreateDbaasServiceRedisReq) GetIPMinusFilter() []string {
	return s.IPMinusFilter
}

// GetTerminationMinusProtection returns the value of TerminationMinusProtection.
func (s *CreateDbaasServiceRedisReq) GetTerminationMinusProtection() OptBool {
	return s.TerminationMinusProtection
}

// GetForkMinusFromMinusService returns the value of ForkMinusFromMinusService.
func (s *CreateDbaasServiceRedisReq) GetForkMinusFromMinusService() OptDbaasServiceName {
	return s.ForkMinusFromMinusService
}

// GetMaintenance returns the value of Maintenance.
func (s *CreateDbaasServiceRedisReq) GetMaintenance() OptCreateDbaasServiceRedisReqMaintenance {
	return s.Maintenance
}

// GetRecoveryMinusBackupMinusName returns the value of RecoveryMinusBackupMinusName.
func (s *CreateDbaasServiceRedisReq) GetRecoveryMinusBackupMinusName() OptString {
	return s.RecoveryMinusBackupMinusName
}

// GetPlan returns the value of Plan.
func (s *CreateDbaasServiceRedisReq) GetPlan() string {
	return s.Plan
}

// GetMigration returns the value of Migration.
func (s *CreateDbaasServiceRedisReq) GetMigration() OptCreateDbaasServiceRedisReqMigration {
	return s.Migration
}

// SetIntegrations sets the value of Integrations.
func (s *CreateDbaasServiceRedisReq) SetIntegrations(val []CreateDbaasServiceRedisReqIntegrationsItem) {
	s.Integrations = val
}

// SetRedisMinusSettings sets the value of RedisMinusSettings.
func (s *CreateDbaasServiceRedisReq) SetRedisMinusSettings(val *CreateDbaasServiceRedisReqRedisMinusSettings) {
	s.RedisMinusSettings = val
}

// SetIPMinusFilter sets the value of IPMinusFilter.
func (s *CreateDbaasServiceRedisReq) SetIPMinusFilter(val []string) {
	s.IPMinusFilter = val
}

// SetTerminationMinusProtection sets the value of TerminationMinusProtection.
func (s *CreateDbaasServiceRedisReq) SetTerminationMinusProtection(val OptBool) {
	s.TerminationMinusProtection = val
}

// SetForkMinusFromMinusService sets the value of ForkMinusFromMinusService.
func (s *CreateDbaasServiceRedisReq) SetForkMinusFromMinusService(val OptDbaasServiceName) {
	s.ForkMinusFromMinusService = val
}

// SetMaintenance sets the value of Maintenance.
func (s *CreateDbaasServiceRedisReq) SetMaintenance(val OptCreateDbaasServiceRedisReqMaintenance) {
	s.Maintenance = val
}

// SetRecoveryMinusBackupMinusName sets the value of RecoveryMinusBackupMinusName.
func (s *CreateDbaasServiceRedisReq) SetRecoveryMinusBackupMinusName(val OptString) {
	s.RecoveryMinusBackupMinusName = val
}

// SetPlan sets the value of Plan.
func (s *CreateDbaasServiceRedisReq) SetPlan(val string) {
	s.Plan = val
}

// SetMigration sets the value of Migration.
func (s *CreateDbaasServiceRedisReq) SetMigration(val OptCreateDbaasServiceRedisReqMigration) {
	s.Migration = val
}

type CreateDbaasServiceRedisReqIntegrationsItem struct {
	// Integration type.
	Type EnumIntegrationTypes `json:"type"`
	// A source service.
	SourceMinusService OptDbaasServiceName `json:"source-service"`
	// A destination service.
	DestMinusService OptDbaasServiceName `json:"dest-service"`
	// Integration settings.
	Settings *CreateDbaasServiceRedisReqIntegrationsItemSettings `json:"settings"`
}

// GetType returns the value of Type.
func (s *CreateDbaasServiceRedisReqIntegrationsItem) GetType() EnumIntegrationTypes {
	return s.Type
}

// GetSourceMinusService returns the value of SourceMinusService.
func (s *CreateDbaasServiceRedisReqIntegrationsItem) GetSourceMinusService() OptDbaasServiceName {
	return s.SourceMinusService
}

// GetDestMinusService returns the value of DestMinusService.
func (s *CreateDbaasServiceRedisReqIntegrationsItem) GetDestMinusService() OptDbaasServiceName {
	return s.DestMinusService
}

// GetSettings returns the value of Settings.
func (s *CreateDbaasServiceRedisReqIntegrationsItem) GetSettings() *CreateDbaasServiceRedisReqIntegrationsItemSettings {
	return s.Settings
}

// SetType sets the value of Type.
func (s *CreateDbaasServiceRedisReqIntegrationsItem) SetType(val EnumIntegrationTypes) {
	s.Type = val
}

// SetSourceMinusService sets the value of SourceMinusService.
func (s *CreateDbaasServiceRedisReqIntegrationsItem) SetSourceMinusService(val OptDbaasServiceName) {
	s.SourceMinusService = val
}

// SetDestMinusService sets the value of DestMinusService.
func (s *CreateDbaasServiceRedisReqIntegrationsItem) SetDestMinusService(val OptDbaasServiceName) {
	s.DestMinusService = val
}

// SetSettings sets the value of Settings.
func (s *CreateDbaasServiceRedisReqIntegrationsItem) SetSettings(val *CreateDbaasServiceRedisReqIntegrationsItemSettings) {
	s.Settings = val
}

// Integration settings.
type CreateDbaasServiceRedisReqIntegrationsItemSettings struct{}

// Automatic maintenance settings.
type CreateDbaasServiceRedisReqMaintenance struct {
	// Day of week for installing updates.
	Dow CreateDbaasServiceRedisReqMaintenanceDow `json:"dow"`
	// Time for installing updates, UTC.
	Time string `json:"time"`
}

// GetDow returns the value of Dow.
func (s *CreateDbaasServiceRedisReqMaintenance) GetDow() CreateDbaasServiceRedisReqMaintenanceDow {
	return s.Dow
}

// GetTime returns the value of Time.
func (s *CreateDbaasServiceRedisReqMaintenance) GetTime() string {
	return s.Time
}

// SetDow sets the value of Dow.
func (s *CreateDbaasServiceRedisReqMaintenance) SetDow(val CreateDbaasServiceRedisReqMaintenanceDow) {
	s.Dow = val
}

// SetTime sets the value of Time.
func (s *CreateDbaasServiceRedisReqMaintenance) SetTime(val string) {
	s.Time = val
}

// Day of week for installing updates.
type CreateDbaasServiceRedisReqMaintenanceDow string

const (
	CreateDbaasServiceRedisReqMaintenanceDowSaturday  CreateDbaasServiceRedisReqMaintenanceDow = "saturday"
	CreateDbaasServiceRedisReqMaintenanceDowTuesday   CreateDbaasServiceRedisReqMaintenanceDow = "tuesday"
	CreateDbaasServiceRedisReqMaintenanceDowNever     CreateDbaasServiceRedisReqMaintenanceDow = "never"
	CreateDbaasServiceRedisReqMaintenanceDowWednesday CreateDbaasServiceRedisReqMaintenanceDow = "wednesday"
	CreateDbaasServiceRedisReqMaintenanceDowSunday    CreateDbaasServiceRedisReqMaintenanceDow = "sunday"
	CreateDbaasServiceRedisReqMaintenanceDowFriday    CreateDbaasServiceRedisReqMaintenanceDow = "friday"
	CreateDbaasServiceRedisReqMaintenanceDowMonday    CreateDbaasServiceRedisReqMaintenanceDow = "monday"
	CreateDbaasServiceRedisReqMaintenanceDowThursday  CreateDbaasServiceRedisReqMaintenanceDow = "thursday"
)

// MarshalText implements encoding.TextMarshaler.
func (s CreateDbaasServiceRedisReqMaintenanceDow) MarshalText() ([]byte, error) {
	switch s {
	case CreateDbaasServiceRedisReqMaintenanceDowSaturday:
		return []byte(s), nil
	case CreateDbaasServiceRedisReqMaintenanceDowTuesday:
		return []byte(s), nil
	case CreateDbaasServiceRedisReqMaintenanceDowNever:
		return []byte(s), nil
	case CreateDbaasServiceRedisReqMaintenanceDowWednesday:
		return []byte(s), nil
	case CreateDbaasServiceRedisReqMaintenanceDowSunday:
		return []byte(s), nil
	case CreateDbaasServiceRedisReqMaintenanceDowFriday:
		return []byte(s), nil
	case CreateDbaasServiceRedisReqMaintenanceDowMonday:
		return []byte(s), nil
	case CreateDbaasServiceRedisReqMaintenanceDowThursday:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *CreateDbaasServiceRedisReqMaintenanceDow) UnmarshalText(data []byte) error {
	switch CreateDbaasServiceRedisReqMaintenanceDow(data) {
	case CreateDbaasServiceRedisReqMaintenanceDowSaturday:
		*s = CreateDbaasServiceRedisReqMaintenanceDowSaturday
		return nil
	case CreateDbaasServiceRedisReqMaintenanceDowTuesday:
		*s = CreateDbaasServiceRedisReqMaintenanceDowTuesday
		return nil
	case CreateDbaasServiceRedisReqMaintenanceDowNever:
		*s = CreateDbaasServiceRedisReqMaintenanceDowNever
		return nil
	case CreateDbaasServiceRedisReqMaintenanceDowWednesday:
		*s = CreateDbaasServiceRedisReqMaintenanceDowWednesday
		return nil
	case CreateDbaasServiceRedisReqMaintenanceDowSunday:
		*s = CreateDbaasServiceRedisReqMaintenanceDowSunday
		return nil
	case CreateDbaasServiceRedisReqMaintenanceDowFriday:
		*s = CreateDbaasServiceRedisReqMaintenanceDowFriday
		return nil
	case CreateDbaasServiceRedisReqMaintenanceDowMonday:
		*s = CreateDbaasServiceRedisReqMaintenanceDowMonday
		return nil
	case CreateDbaasServiceRedisReqMaintenanceDowThursday:
		*s = CreateDbaasServiceRedisReqMaintenanceDowThursday
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Migrate data from existing server.
type CreateDbaasServiceRedisReqMigration struct {
	// Hostname or IP address of the server where to migrate data from.
	Host string `json:"host"`
	// Port number of the server where to migrate data from.
	Port int64 `json:"port"`
	// Password for authentication with the server where to migrate data from.
	Password OptString `json:"password"`
	// The server where to migrate data from is secured with SSL.
	Ssl OptBool `json:"ssl"`
	// User name for authentication with the server where to migrate data from.
	Username OptString `json:"username"`
	// Database name for bootstrapping the initial connection.
	Dbname OptString `json:"dbname"`
	// Comma-separated list of databases, which should be ignored during migration (supported by MySQL
	// only at the moment).
	IgnoreMinusDbs OptString `json:"ignore-dbs"`
	// The migration method to be used.
	Method OptEnumMigrationMethod `json:"method"`
}

// GetHost returns the value of Host.
func (s *CreateDbaasServiceRedisReqMigration) GetHost() string {
	return s.Host
}

// GetPort returns the value of Port.
func (s *CreateDbaasServiceRedisReqMigration) GetPort() int64 {
	return s.Port
}

// GetPassword returns the value of Password.
func (s *CreateDbaasServiceRedisReqMigration) GetPassword() OptString {
	return s.Password
}

// GetSsl returns the value of Ssl.
func (s *CreateDbaasServiceRedisReqMigration) GetSsl() OptBool {
	return s.Ssl
}

// GetUsername returns the value of Username.
func (s *CreateDbaasServiceRedisReqMigration) GetUsername() OptString {
	return s.Username
}

// GetDbname returns the value of Dbname.
func (s *CreateDbaasServiceRedisReqMigration) GetDbname() OptString {
	return s.Dbname
}

// GetIgnoreMinusDbs returns the value of IgnoreMinusDbs.
func (s *CreateDbaasServiceRedisReqMigration) GetIgnoreMinusDbs() OptString {
	return s.IgnoreMinusDbs
}

// GetMethod returns the value of Method.
func (s *CreateDbaasServiceRedisReqMigration) GetMethod() OptEnumMigrationMethod {
	return s.Method
}

// SetHost sets the value of Host.
func (s *CreateDbaasServiceRedisReqMigration) SetHost(val string) {
	s.Host = val
}

// SetPort sets the value of Port.
func (s *CreateDbaasServiceRedisReqMigration) SetPort(val int64) {
	s.Port = val
}

// SetPassword sets the value of Password.
func (s *CreateDbaasServiceRedisReqMigration) SetPassword(val OptString) {
	s.Password = val
}

// SetSsl sets the value of Ssl.
func (s *CreateDbaasServiceRedisReqMigration) SetSsl(val OptBool) {
	s.Ssl = val
}

// SetUsername sets the value of Username.
func (s *CreateDbaasServiceRedisReqMigration) SetUsername(val OptString) {
	s.Username = val
}

// SetDbname sets the value of Dbname.
func (s *CreateDbaasServiceRedisReqMigration) SetDbname(val OptString) {
	s.Dbname = val
}

// SetIgnoreMinusDbs sets the value of IgnoreMinusDbs.
func (s *CreateDbaasServiceRedisReqMigration) SetIgnoreMinusDbs(val OptString) {
	s.IgnoreMinusDbs = val
}

// SetMethod sets the value of Method.
func (s *CreateDbaasServiceRedisReqMigration) SetMethod(val OptEnumMigrationMethod) {
	s.Method = val
}

// Redis.conf settings.
type CreateDbaasServiceRedisReqRedisMinusSettings struct{}

type CreateDbaasTaskMigrationCheckReq struct {
	// Service URI of the source MySQL or PostgreSQL database with admin credentials.
	SourceMinusServiceMinusURI string `json:"source-service-uri"`
	// The migration method to be used (currently supported only by Redis and MySQL service types).
	Method OptEnumMigrationMethod `json:"method"`
	// Comma-separated list of databases, which should be ignored during migration (supported by MySQL
	// only at the moment).
	IgnoreMinusDbs OptString `json:"ignore-dbs"`
}

// GetSourceMinusServiceMinusURI returns the value of SourceMinusServiceMinusURI.
func (s *CreateDbaasTaskMigrationCheckReq) GetSourceMinusServiceMinusURI() string {
	return s.SourceMinusServiceMinusURI
}

// GetMethod returns the value of Method.
func (s *CreateDbaasTaskMigrationCheckReq) GetMethod() OptEnumMigrationMethod {
	return s.Method
}

// GetIgnoreMinusDbs returns the value of IgnoreMinusDbs.
func (s *CreateDbaasTaskMigrationCheckReq) GetIgnoreMinusDbs() OptString {
	return s.IgnoreMinusDbs
}

// SetSourceMinusServiceMinusURI sets the value of SourceMinusServiceMinusURI.
func (s *CreateDbaasTaskMigrationCheckReq) SetSourceMinusServiceMinusURI(val string) {
	s.SourceMinusServiceMinusURI = val
}

// SetMethod sets the value of Method.
func (s *CreateDbaasTaskMigrationCheckReq) SetMethod(val OptEnumMigrationMethod) {
	s.Method = val
}

// SetIgnoreMinusDbs sets the value of IgnoreMinusDbs.
func (s *CreateDbaasTaskMigrationCheckReq) SetIgnoreMinusDbs(val OptString) {
	s.IgnoreMinusDbs = val
}

type CreateElasticIPReq struct {
	// Elastic IP address family (default: :inet4).
	Addressfamily OptCreateElasticIPReqAddressfamily `json:"addressfamily"`
	// Elastic IP description.
	Description OptString `json:"description"`
	// Elastic IP healthcheck.
	Healthcheck OptElasticIPHealthcheck `json:"healthcheck"`
	// Elastic IP labels.
	Labels OptLabels `json:"labels"`
}

// GetAddressfamily returns the value of Addressfamily.
func (s *CreateElasticIPReq) GetAddressfamily() OptCreateElasticIPReqAddressfamily {
	return s.Addressfamily
}

// GetDescription returns the value of Description.
func (s *CreateElasticIPReq) GetDescription() OptString {
	return s.Description
}

// GetHealthcheck returns the value of Healthcheck.
func (s *CreateElasticIPReq) GetHealthcheck() OptElasticIPHealthcheck {
	return s.Healthcheck
}

// GetLabels returns the value of Labels.
func (s *CreateElasticIPReq) GetLabels() OptLabels {
	return s.Labels
}

// SetAddressfamily sets the value of Addressfamily.
func (s *CreateElasticIPReq) SetAddressfamily(val OptCreateElasticIPReqAddressfamily) {
	s.Addressfamily = val
}

// SetDescription sets the value of Description.
func (s *CreateElasticIPReq) SetDescription(val OptString) {
	s.Description = val
}

// SetHealthcheck sets the value of Healthcheck.
func (s *CreateElasticIPReq) SetHealthcheck(val OptElasticIPHealthcheck) {
	s.Healthcheck = val
}

// SetLabels sets the value of Labels.
func (s *CreateElasticIPReq) SetLabels(val OptLabels) {
	s.Labels = val
}

// Elastic IP address family (default: :inet4).
type CreateElasticIPReqAddressfamily string

const (
	CreateElasticIPReqAddressfamilyInet4 CreateElasticIPReqAddressfamily = "inet4"
	CreateElasticIPReqAddressfamilyInet6 CreateElasticIPReqAddressfamily = "inet6"
)

// MarshalText implements encoding.TextMarshaler.
func (s CreateElasticIPReqAddressfamily) MarshalText() ([]byte, error) {
	switch s {
	case CreateElasticIPReqAddressfamilyInet4:
		return []byte(s), nil
	case CreateElasticIPReqAddressfamilyInet6:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *CreateElasticIPReqAddressfamily) UnmarshalText(data []byte) error {
	switch CreateElasticIPReqAddressfamily(data) {
	case CreateElasticIPReqAddressfamilyInet4:
		*s = CreateElasticIPReqAddressfamilyInet4
		return nil
	case CreateElasticIPReqAddressfamilyInet6:
		*s = CreateElasticIPReqAddressfamilyInet6
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type CreateIamRoleReq struct {
	// IAM Role name.
	Name string `json:"name"`
	// IAM Role description.
	Description OptString `json:"description"`
	// Make IAM Role editable (default: true).
	Editable OptBool `json:"editable"`
	// IAM Role labels.
	Labels OptLabels `json:"labels"`
	// IAM Role policy.
	Policy OptIamPolicy `json:"policy"`
}

// GetName returns the value of Name.
func (s *CreateIamRoleReq) GetName() string {
	return s.Name
}

// GetDescription returns the value of Description.
func (s *CreateIamRoleReq) GetDescription() OptString {
	return s.Description
}

// GetEditable returns the value of Editable.
func (s *CreateIamRoleReq) GetEditable() OptBool {
	return s.Editable
}

// GetLabels returns the value of Labels.
func (s *CreateIamRoleReq) GetLabels() OptLabels {
	return s.Labels
}

// GetPolicy returns the value of Policy.
func (s *CreateIamRoleReq) GetPolicy() OptIamPolicy {
	return s.Policy
}

// SetName sets the value of Name.
func (s *CreateIamRoleReq) SetName(val string) {
	s.Name = val
}

// SetDescription sets the value of Description.
func (s *CreateIamRoleReq) SetDescription(val OptString) {
	s.Description = val
}

// SetEditable sets the value of Editable.
func (s *CreateIamRoleReq) SetEditable(val OptBool) {
	s.Editable = val
}

// SetLabels sets the value of Labels.
func (s *CreateIamRoleReq) SetLabels(val OptLabels) {
	s.Labels = val
}

// SetPolicy sets the value of Policy.
func (s *CreateIamRoleReq) SetPolicy(val OptIamPolicy) {
	s.Policy = val
}

type CreateLoadBalancerReq struct {
	// Load Balancer description.
	Description OptString `json:"description"`
	// Load Balancer name.
	Name string `json:"name"`
	// Load balancer labels.
	Labels OptLabels `json:"labels"`
}

// GetDescription returns the value of Description.
func (s *CreateLoadBalancerReq) GetDescription() OptString {
	return s.Description
}

// GetName returns the value of Name.
func (s *CreateLoadBalancerReq) GetName() string {
	return s.Name
}

// GetLabels returns the value of Labels.
func (s *CreateLoadBalancerReq) GetLabels() OptLabels {
	return s.Labels
}

// SetDescription sets the value of Description.
func (s *CreateLoadBalancerReq) SetDescription(val OptString) {
	s.Description = val
}

// SetName sets the value of Name.
func (s *CreateLoadBalancerReq) SetName(val string) {
	s.Name = val
}

// SetLabels sets the value of Labels.
func (s *CreateLoadBalancerReq) SetLabels(val OptLabels) {
	s.Labels = val
}

type CreatePrivateNetworkReq struct {
	// Private Network name.
	Name string `json:"name"`
	// Private Network description.
	Description OptString `json:"description"`
	// Private Network netmask.
	Netmask OptIPv4 `json:"netmask"`
	// Private Network start IP address.
	StartMinusIP OptIPv4 `json:"start-ip"`
	// Private Network end IP address.
	EndMinusIP OptIPv4 `json:"end-ip"`
	// Private Network labels.
	Labels OptLabels `json:"labels"`
}

// GetName returns the value of Name.
func (s *CreatePrivateNetworkReq) GetName() string {
	return s.Name
}

// GetDescription returns the value of Description.
func (s *CreatePrivateNetworkReq) GetDescription() OptString {
	return s.Description
}

// GetNetmask returns the value of Netmask.
func (s *CreatePrivateNetworkReq) GetNetmask() OptIPv4 {
	return s.Netmask
}

// GetStartMinusIP returns the value of StartMinusIP.
func (s *CreatePrivateNetworkReq) GetStartMinusIP() OptIPv4 {
	return s.StartMinusIP
}

// GetEndMinusIP returns the value of EndMinusIP.
func (s *CreatePrivateNetworkReq) GetEndMinusIP() OptIPv4 {
	return s.EndMinusIP
}

// GetLabels returns the value of Labels.
func (s *CreatePrivateNetworkReq) GetLabels() OptLabels {
	return s.Labels
}

// SetName sets the value of Name.
func (s *CreatePrivateNetworkReq) SetName(val string) {
	s.Name = val
}

// SetDescription sets the value of Description.
func (s *CreatePrivateNetworkReq) SetDescription(val OptString) {
	s.Description = val
}

// SetNetmask sets the value of Netmask.
func (s *CreatePrivateNetworkReq) SetNetmask(val OptIPv4) {
	s.Netmask = val
}

// SetStartMinusIP sets the value of StartMinusIP.
func (s *CreatePrivateNetworkReq) SetStartMinusIP(val OptIPv4) {
	s.StartMinusIP = val
}

// SetEndMinusIP sets the value of EndMinusIP.
func (s *CreatePrivateNetworkReq) SetEndMinusIP(val OptIPv4) {
	s.EndMinusIP = val
}

// SetLabels sets the value of Labels.
func (s *CreatePrivateNetworkReq) SetLabels(val OptLabels) {
	s.Labels = val
}

type CreateSecurityGroupReq struct {
	// Security Group name.
	Name string `json:"name"`
	// Security Group description.
	Description OptString `json:"description"`
}

// GetName returns the value of Name.
func (s *CreateSecurityGroupReq) GetName() string {
	return s.Name
}

// GetDescription returns the value of Description.
func (s *CreateSecurityGroupReq) GetDescription() OptString {
	return s.Description
}

// SetName sets the value of Name.
func (s *CreateSecurityGroupReq) SetName(val string) {
	s.Name = val
}

// SetDescription sets the value of Description.
func (s *CreateSecurityGroupReq) SetDescription(val OptString) {
	s.Description = val
}

type CreateSksClusterReq struct {
	// Cluster description.
	Description OptString `json:"description"`
	// Cluster Labels.
	Labels OptLabels `json:"labels"`
	// Cluster CNI.
	Cni OptCreateSksClusterReqCni `json:"cni"`
	// Enable auto upgrade of the control plane to the latest patch version available.
	AutoMinusUpgrade OptBool `json:"auto-upgrade"`
	// Cluster OpenID configmap.
	Oidc OptSksOidc `json:"oidc"`
	// Cluster name.
	Name string `json:"name"`
	// Cluster service level.
	Level CreateSksClusterReqLevel `json:"level"`
	// Cluster addons.
	Addons []CreateSksClusterReqAddonsItem `json:"addons"`
	// Control plane Kubernetes version.
	Version string `json:"version"`
}

// GetDescription returns the value of Description.
func (s *CreateSksClusterReq) GetDescription() OptString {
	return s.Description
}

// GetLabels returns the value of Labels.
func (s *CreateSksClusterReq) GetLabels() OptLabels {
	return s.Labels
}

// GetCni returns the value of Cni.
func (s *CreateSksClusterReq) GetCni() OptCreateSksClusterReqCni {
	return s.Cni
}

// GetAutoMinusUpgrade returns the value of AutoMinusUpgrade.
func (s *CreateSksClusterReq) GetAutoMinusUpgrade() OptBool {
	return s.AutoMinusUpgrade
}

// GetOidc returns the value of Oidc.
func (s *CreateSksClusterReq) GetOidc() OptSksOidc {
	return s.Oidc
}

// GetName returns the value of Name.
func (s *CreateSksClusterReq) GetName() string {
	return s.Name
}

// GetLevel returns the value of Level.
func (s *CreateSksClusterReq) GetLevel() CreateSksClusterReqLevel {
	return s.Level
}

// GetAddons returns the value of Addons.
func (s *CreateSksClusterReq) GetAddons() []CreateSksClusterReqAddonsItem {
	return s.Addons
}

// GetVersion returns the value of Version.
func (s *CreateSksClusterReq) GetVersion() string {
	return s.Version
}

// SetDescription sets the value of Description.
func (s *CreateSksClusterReq) SetDescription(val OptString) {
	s.Description = val
}

// SetLabels sets the value of Labels.
func (s *CreateSksClusterReq) SetLabels(val OptLabels) {
	s.Labels = val
}

// SetCni sets the value of Cni.
func (s *CreateSksClusterReq) SetCni(val OptCreateSksClusterReqCni) {
	s.Cni = val
}

// SetAutoMinusUpgrade sets the value of AutoMinusUpgrade.
func (s *CreateSksClusterReq) SetAutoMinusUpgrade(val OptBool) {
	s.AutoMinusUpgrade = val
}

// SetOidc sets the value of Oidc.
func (s *CreateSksClusterReq) SetOidc(val OptSksOidc) {
	s.Oidc = val
}

// SetName sets the value of Name.
func (s *CreateSksClusterReq) SetName(val string) {
	s.Name = val
}

// SetLevel sets the value of Level.
func (s *CreateSksClusterReq) SetLevel(val CreateSksClusterReqLevel) {
	s.Level = val
}

// SetAddons sets the value of Addons.
func (s *CreateSksClusterReq) SetAddons(val []CreateSksClusterReqAddonsItem) {
	s.Addons = val
}

// SetVersion sets the value of Version.
func (s *CreateSksClusterReq) SetVersion(val string) {
	s.Version = val
}

type CreateSksClusterReqAddonsItem string

const (
	CreateSksClusterReqAddonsItemExoscaleCloudController CreateSksClusterReqAddonsItem = "exoscale-cloud-controller"
	CreateSksClusterReqAddonsItemMetricsServer           CreateSksClusterReqAddonsItem = "metrics-server"
)

// MarshalText implements encoding.TextMarshaler.
func (s CreateSksClusterReqAddonsItem) MarshalText() ([]byte, error) {
	switch s {
	case CreateSksClusterReqAddonsItemExoscaleCloudController:
		return []byte(s), nil
	case CreateSksClusterReqAddonsItemMetricsServer:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *CreateSksClusterReqAddonsItem) UnmarshalText(data []byte) error {
	switch CreateSksClusterReqAddonsItem(data) {
	case CreateSksClusterReqAddonsItemExoscaleCloudController:
		*s = CreateSksClusterReqAddonsItemExoscaleCloudController
		return nil
	case CreateSksClusterReqAddonsItemMetricsServer:
		*s = CreateSksClusterReqAddonsItemMetricsServer
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Cluster CNI.
type CreateSksClusterReqCni string

const (
	CreateSksClusterReqCniCalico CreateSksClusterReqCni = "calico"
	CreateSksClusterReqCniCilium CreateSksClusterReqCni = "cilium"
)

// MarshalText implements encoding.TextMarshaler.
func (s CreateSksClusterReqCni) MarshalText() ([]byte, error) {
	switch s {
	case CreateSksClusterReqCniCalico:
		return []byte(s), nil
	case CreateSksClusterReqCniCilium:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *CreateSksClusterReqCni) UnmarshalText(data []byte) error {
	switch CreateSksClusterReqCni(data) {
	case CreateSksClusterReqCniCalico:
		*s = CreateSksClusterReqCniCalico
		return nil
	case CreateSksClusterReqCniCilium:
		*s = CreateSksClusterReqCniCilium
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Cluster service level.
type CreateSksClusterReqLevel string

const (
	CreateSksClusterReqLevelStarter CreateSksClusterReqLevel = "starter"
	CreateSksClusterReqLevelPro     CreateSksClusterReqLevel = "pro"
)

// MarshalText implements encoding.TextMarshaler.
func (s CreateSksClusterReqLevel) MarshalText() ([]byte, error) {
	switch s {
	case CreateSksClusterReqLevelStarter:
		return []byte(s), nil
	case CreateSksClusterReqLevelPro:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *CreateSksClusterReqLevel) UnmarshalText(data []byte) error {
	switch CreateSksClusterReqLevel(data) {
	case CreateSksClusterReqLevelStarter:
		*s = CreateSksClusterReqLevelStarter
		return nil
	case CreateSksClusterReqLevelPro:
		*s = CreateSksClusterReqLevelPro
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// DNS domain.
// Ref: #/components/schemas/dns-domain
type DNSDomain struct {
	// DNS domain ID.
	ID OptUUID `json:"id"`
	// DNS domain creation date.
	CreatedMinusAt OptDateTime `json:"created-at"`
	// DNS domain unicode name.
	UnicodeMinusName OptString `json:"unicode-name"`
}

// GetID returns the value of ID.
func (s *DNSDomain) GetID() OptUUID {
	return s.ID
}

// GetCreatedMinusAt returns the value of CreatedMinusAt.
func (s *DNSDomain) GetCreatedMinusAt() OptDateTime {
	return s.CreatedMinusAt
}

// GetUnicodeMinusName returns the value of UnicodeMinusName.
func (s *DNSDomain) GetUnicodeMinusName() OptString {
	return s.UnicodeMinusName
}

// SetID sets the value of ID.
func (s *DNSDomain) SetID(val OptUUID) {
	s.ID = val
}

// SetCreatedMinusAt sets the value of CreatedMinusAt.
func (s *DNSDomain) SetCreatedMinusAt(val OptDateTime) {
	s.CreatedMinusAt = val
}

// SetUnicodeMinusName sets the value of UnicodeMinusName.
func (s *DNSDomain) SetUnicodeMinusName(val OptString) {
	s.UnicodeMinusName = val
}

// DNS domain record.
// Ref: #/components/schemas/dns-domain-record
type DNSDomainRecord struct {
	// DNS domain record ID.
	ID OptUUID `json:"id"`
	// DNS domain record priority.
	Priority OptInt64 `json:"priority"`
	// DNS domain record content.
	Content OptString `json:"content"`
	// DNS domain record type.
	Type OptDNSDomainRecordType `json:"type"`
	// DNS domain record TTL.
	TTL OptInt64 `json:"ttl"`
	// DNS domain record name.
	Name OptString `json:"name"`
	// DNS domain record creation date.
	CreatedMinusAt OptDateTime `json:"created-at"`
	// DNS domain record update date.
	UpdatedMinusAt OptDateTime `json:"updated-at"`
}

// GetID returns the value of ID.
func (s *DNSDomainRecord) GetID() OptUUID {
	return s.ID
}

// GetPriority returns the value of Priority.
func (s *DNSDomainRecord) GetPriority() OptInt64 {
	return s.Priority
}

// GetContent returns the value of Content.
func (s *DNSDomainRecord) GetContent() OptString {
	return s.Content
}

// GetType returns the value of Type.
func (s *DNSDomainRecord) GetType() OptDNSDomainRecordType {
	return s.Type
}

// GetTTL returns the value of TTL.
func (s *DNSDomainRecord) GetTTL() OptInt64 {
	return s.TTL
}

// GetName returns the value of Name.
func (s *DNSDomainRecord) GetName() OptString {
	return s.Name
}

// GetCreatedMinusAt returns the value of CreatedMinusAt.
func (s *DNSDomainRecord) GetCreatedMinusAt() OptDateTime {
	return s.CreatedMinusAt
}

// GetUpdatedMinusAt returns the value of UpdatedMinusAt.
func (s *DNSDomainRecord) GetUpdatedMinusAt() OptDateTime {
	return s.UpdatedMinusAt
}

// SetID sets the value of ID.
func (s *DNSDomainRecord) SetID(val OptUUID) {
	s.ID = val
}

// SetPriority sets the value of Priority.
func (s *DNSDomainRecord) SetPriority(val OptInt64) {
	s.Priority = val
}

// SetContent sets the value of Content.
func (s *DNSDomainRecord) SetContent(val OptString) {
	s.Content = val
}

// SetType sets the value of Type.
func (s *DNSDomainRecord) SetType(val OptDNSDomainRecordType) {
	s.Type = val
}

// SetTTL sets the value of TTL.
func (s *DNSDomainRecord) SetTTL(val OptInt64) {
	s.TTL = val
}

// SetName sets the value of Name.
func (s *DNSDomainRecord) SetName(val OptString) {
	s.Name = val
}

// SetCreatedMinusAt sets the value of CreatedMinusAt.
func (s *DNSDomainRecord) SetCreatedMinusAt(val OptDateTime) {
	s.CreatedMinusAt = val
}

// SetUpdatedMinusAt sets the value of UpdatedMinusAt.
func (s *DNSDomainRecord) SetUpdatedMinusAt(val OptDateTime) {
	s.UpdatedMinusAt = val
}

// DNS domain record type.
type DNSDomainRecordType string

const (
	DNSDomainRecordTypeNS      DNSDomainRecordType = "NS"
	DNSDomainRecordTypeCAA     DNSDomainRecordType = "CAA"
	DNSDomainRecordTypeNAPTR   DNSDomainRecordType = "NAPTR"
	DNSDomainRecordTypeCDNSKEY DNSDomainRecordType = "CDNSKEY"
	DNSDomainRecordTypePOOL    DNSDomainRecordType = "POOL"
	DNSDomainRecordTypeA       DNSDomainRecordType = "A"
	DNSDomainRecordTypeHINFO   DNSDomainRecordType = "HINFO"
	DNSDomainRecordTypeCNAME   DNSDomainRecordType = "CNAME"
	DNSDomainRecordTypeSOA     DNSDomainRecordType = "SOA"
	DNSDomainRecordTypeSSHFP   DNSDomainRecordType = "SSHFP"
	DNSDomainRecordTypeSRV     DNSDomainRecordType = "SRV"
	DNSDomainRecordTypeAAAA    DNSDomainRecordType = "AAAA"
	DNSDomainRecordTypeMX      DNSDomainRecordType = "MX"
	DNSDomainRecordTypeDNSKEY  DNSDomainRecordType = "DNSKEY"
	DNSDomainRecordTypeTXT     DNSDomainRecordType = "TXT"
	DNSDomainRecordTypeDS      DNSDomainRecordType = "DS"
	DNSDomainRecordTypePTR     DNSDomainRecordType = "PTR"
	DNSDomainRecordTypeALIAS   DNSDomainRecordType = "ALIAS"
	DNSDomainRecordTypeURL     DNSDomainRecordType = "URL"
	DNSDomainRecordTypeCDS     DNSDomainRecordType = "CDS"
	DNSDomainRecordTypeSPF     DNSDomainRecordType = "SPF"
)

// MarshalText implements encoding.TextMarshaler.
func (s DNSDomainRecordType) MarshalText() ([]byte, error) {
	switch s {
	case DNSDomainRecordTypeNS:
		return []byte(s), nil
	case DNSDomainRecordTypeCAA:
		return []byte(s), nil
	case DNSDomainRecordTypeNAPTR:
		return []byte(s), nil
	case DNSDomainRecordTypeCDNSKEY:
		return []byte(s), nil
	case DNSDomainRecordTypePOOL:
		return []byte(s), nil
	case DNSDomainRecordTypeA:
		return []byte(s), nil
	case DNSDomainRecordTypeHINFO:
		return []byte(s), nil
	case DNSDomainRecordTypeCNAME:
		return []byte(s), nil
	case DNSDomainRecordTypeSOA:
		return []byte(s), nil
	case DNSDomainRecordTypeSSHFP:
		return []byte(s), nil
	case DNSDomainRecordTypeSRV:
		return []byte(s), nil
	case DNSDomainRecordTypeAAAA:
		return []byte(s), nil
	case DNSDomainRecordTypeMX:
		return []byte(s), nil
	case DNSDomainRecordTypeDNSKEY:
		return []byte(s), nil
	case DNSDomainRecordTypeTXT:
		return []byte(s), nil
	case DNSDomainRecordTypeDS:
		return []byte(s), nil
	case DNSDomainRecordTypePTR:
		return []byte(s), nil
	case DNSDomainRecordTypeALIAS:
		return []byte(s), nil
	case DNSDomainRecordTypeURL:
		return []byte(s), nil
	case DNSDomainRecordTypeCDS:
		return []byte(s), nil
	case DNSDomainRecordTypeSPF:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *DNSDomainRecordType) UnmarshalText(data []byte) error {
	switch DNSDomainRecordType(data) {
	case DNSDomainRecordTypeNS:
		*s = DNSDomainRecordTypeNS
		return nil
	case DNSDomainRecordTypeCAA:
		*s = DNSDomainRecordTypeCAA
		return nil
	case DNSDomainRecordTypeNAPTR:
		*s = DNSDomainRecordTypeNAPTR
		return nil
	case DNSDomainRecordTypeCDNSKEY:
		*s = DNSDomainRecordTypeCDNSKEY
		return nil
	case DNSDomainRecordTypePOOL:
		*s = DNSDomainRecordTypePOOL
		return nil
	case DNSDomainRecordTypeA:
		*s = DNSDomainRecordTypeA
		return nil
	case DNSDomainRecordTypeHINFO:
		*s = DNSDomainRecordTypeHINFO
		return nil
	case DNSDomainRecordTypeCNAME:
		*s = DNSDomainRecordTypeCNAME
		return nil
	case DNSDomainRecordTypeSOA:
		*s = DNSDomainRecordTypeSOA
		return nil
	case DNSDomainRecordTypeSSHFP:
		*s = DNSDomainRecordTypeSSHFP
		return nil
	case DNSDomainRecordTypeSRV:
		*s = DNSDomainRecordTypeSRV
		return nil
	case DNSDomainRecordTypeAAAA:
		*s = DNSDomainRecordTypeAAAA
		return nil
	case DNSDomainRecordTypeMX:
		*s = DNSDomainRecordTypeMX
		return nil
	case DNSDomainRecordTypeDNSKEY:
		*s = DNSDomainRecordTypeDNSKEY
		return nil
	case DNSDomainRecordTypeTXT:
		*s = DNSDomainRecordTypeTXT
		return nil
	case DNSDomainRecordTypeDS:
		*s = DNSDomainRecordTypeDS
		return nil
	case DNSDomainRecordTypePTR:
		*s = DNSDomainRecordTypePTR
		return nil
	case DNSDomainRecordTypeALIAS:
		*s = DNSDomainRecordTypeALIAS
		return nil
	case DNSDomainRecordTypeURL:
		*s = DNSDomainRecordTypeURL
		return nil
	case DNSDomainRecordTypeCDS:
		*s = DNSDomainRecordTypeCDS
		return nil
	case DNSDomainRecordTypeSPF:
		*s = DNSDomainRecordTypeSPF
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// DBaaS plan backup config.
// Ref: #/components/schemas/dbaas-backup-config
type DbaasBackupConfig struct {
	// Maximum number of backups to keep. Zero when no backups are created.
	MaxMinusCount OptInt64 `json:"max-count"`
	// The interval, in hours, at which backups are generated.
	// For some services, like PostgreSQL, this is the interval
	// at which full snapshots are taken and continuous incremental
	// backup stream is maintained in addition to that.
	Interval OptInt64 `json:"interval"`
	// Mechanism how backups can be restored. 'regular'
	// means a backup is restored as is so that the system
	// is restored to the state it was when the backup was generated.
	// 'pitr' means point-in-time-recovery, which allows restoring
	// the system to any state since the first available full snapshot.
	RecoveryMinusMode OptString `json:"recovery-mode"`
	// Interval of taking a frequent backup in service types supporting different backup schedules.
	FrequentMinusIntervalMinusMinutes OptInt64 `json:"frequent-interval-minutes"`
	// Maximum age of the oldest frequent backup in service types supporting different backup schedules.
	FrequentMinusOldestMinusAgeMinusMinutes OptInt64 `json:"frequent-oldest-age-minutes"`
	// Interval of taking a frequent backup in service types supporting different backup schedules.
	InfrequentMinusIntervalMinusMinutes OptInt64 `json:"infrequent-interval-minutes"`
	// Maximum age of the oldest infrequent backup in service types supporting different backup schedules.
	InfrequentMinusOldestMinusAgeMinusMinutes OptInt64 `json:"infrequent-oldest-age-minutes"`
}

// GetMaxMinusCount returns the value of MaxMinusCount.
func (s *DbaasBackupConfig) GetMaxMinusCount() OptInt64 {
	return s.MaxMinusCount
}

// GetInterval returns the value of Interval.
func (s *DbaasBackupConfig) GetInterval() OptInt64 {
	return s.Interval
}

// GetRecoveryMinusMode returns the value of RecoveryMinusMode.
func (s *DbaasBackupConfig) GetRecoveryMinusMode() OptString {
	return s.RecoveryMinusMode
}

// GetFrequentMinusIntervalMinusMinutes returns the value of FrequentMinusIntervalMinusMinutes.
func (s *DbaasBackupConfig) GetFrequentMinusIntervalMinusMinutes() OptInt64 {
	return s.FrequentMinusIntervalMinusMinutes
}

// GetFrequentMinusOldestMinusAgeMinusMinutes returns the value of FrequentMinusOldestMinusAgeMinusMinutes.
func (s *DbaasBackupConfig) GetFrequentMinusOldestMinusAgeMinusMinutes() OptInt64 {
	return s.FrequentMinusOldestMinusAgeMinusMinutes
}

// GetInfrequentMinusIntervalMinusMinutes returns the value of InfrequentMinusIntervalMinusMinutes.
func (s *DbaasBackupConfig) GetInfrequentMinusIntervalMinusMinutes() OptInt64 {
	return s.InfrequentMinusIntervalMinusMinutes
}

// GetInfrequentMinusOldestMinusAgeMinusMinutes returns the value of InfrequentMinusOldestMinusAgeMinusMinutes.
func (s *DbaasBackupConfig) GetInfrequentMinusOldestMinusAgeMinusMinutes() OptInt64 {
	return s.InfrequentMinusOldestMinusAgeMinusMinutes
}

// SetMaxMinusCount sets the value of MaxMinusCount.
func (s *DbaasBackupConfig) SetMaxMinusCount(val OptInt64) {
	s.MaxMinusCount = val
}

// SetInterval sets the value of Interval.
func (s *DbaasBackupConfig) SetInterval(val OptInt64) {
	s.Interval = val
}

// SetRecoveryMinusMode sets the value of RecoveryMinusMode.
func (s *DbaasBackupConfig) SetRecoveryMinusMode(val OptString) {
	s.RecoveryMinusMode = val
}

// SetFrequentMinusIntervalMinusMinutes sets the value of FrequentMinusIntervalMinusMinutes.
func (s *DbaasBackupConfig) SetFrequentMinusIntervalMinusMinutes(val OptInt64) {
	s.FrequentMinusIntervalMinusMinutes = val
}

// SetFrequentMinusOldestMinusAgeMinusMinutes sets the value of FrequentMinusOldestMinusAgeMinusMinutes.
func (s *DbaasBackupConfig) SetFrequentMinusOldestMinusAgeMinusMinutes(val OptInt64) {
	s.FrequentMinusOldestMinusAgeMinusMinutes = val
}

// SetInfrequentMinusIntervalMinusMinutes sets the value of InfrequentMinusIntervalMinusMinutes.
func (s *DbaasBackupConfig) SetInfrequentMinusIntervalMinusMinutes(val OptInt64) {
	s.InfrequentMinusIntervalMinusMinutes = val
}

// SetInfrequentMinusOldestMinusAgeMinusMinutes sets the value of InfrequentMinusOldestMinusAgeMinusMinutes.
func (s *DbaasBackupConfig) SetInfrequentMinusOldestMinusAgeMinusMinutes(val OptInt64) {
	s.InfrequentMinusOldestMinusAgeMinusMinutes = val
}

// Ref: #/components/schemas/dbaas-integration
type DbaasIntegration struct {
	// Description of the integration.
	Description OptString `json:"description"`
	// Integration settings.
	Settings *DbaasIntegrationSettings `json:"settings"`
	// Integration type.
	Type OptString `json:"type"`
	// Whether the integration is enabled or not.
	IsMinusEnabled OptBool `json:"is-enabled"`
	// Source service name.
	Source OptString `json:"source"`
	// Whether the integration is active or not.
	IsMinusActive OptBool `json:"is-active"`
	// Integration status.
	Status OptString `json:"status"`
	// Integration id.
	ID OptUUID `json:"id"`
	// Destination service name.
	Dest OptString `json:"dest"`
}

// GetDescription returns the value of Description.
func (s *DbaasIntegration) GetDescription() OptString {
	return s.Description
}

// GetSettings returns the value of Settings.
func (s *DbaasIntegration) GetSettings() *DbaasIntegrationSettings {
	return s.Settings
}

// GetType returns the value of Type.
func (s *DbaasIntegration) GetType() OptString {
	return s.Type
}

// GetIsMinusEnabled returns the value of IsMinusEnabled.
func (s *DbaasIntegration) GetIsMinusEnabled() OptBool {
	return s.IsMinusEnabled
}

// GetSource returns the value of Source.
func (s *DbaasIntegration) GetSource() OptString {
	return s.Source
}

// GetIsMinusActive returns the value of IsMinusActive.
func (s *DbaasIntegration) GetIsMinusActive() OptBool {
	return s.IsMinusActive
}

// GetStatus returns the value of Status.
func (s *DbaasIntegration) GetStatus() OptString {
	return s.Status
}

// GetID returns the value of ID.
func (s *DbaasIntegration) GetID() OptUUID {
	return s.ID
}

// GetDest returns the value of Dest.
func (s *DbaasIntegration) GetDest() OptString {
	return s.Dest
}

// SetDescription sets the value of Description.
func (s *DbaasIntegration) SetDescription(val OptString) {
	s.Description = val
}

// SetSettings sets the value of Settings.
func (s *DbaasIntegration) SetSettings(val *DbaasIntegrationSettings) {
	s.Settings = val
}

// SetType sets the value of Type.
func (s *DbaasIntegration) SetType(val OptString) {
	s.Type = val
}

// SetIsMinusEnabled sets the value of IsMinusEnabled.
func (s *DbaasIntegration) SetIsMinusEnabled(val OptBool) {
	s.IsMinusEnabled = val
}

// SetSource sets the value of Source.
func (s *DbaasIntegration) SetSource(val OptString) {
	s.Source = val
}

// SetIsMinusActive sets the value of IsMinusActive.
func (s *DbaasIntegration) SetIsMinusActive(val OptBool) {
	s.IsMinusActive = val
}

// SetStatus sets the value of Status.
func (s *DbaasIntegration) SetStatus(val OptString) {
	s.Status = val
}

// SetID sets the value of ID.
func (s *DbaasIntegration) SetID(val OptUUID) {
	s.ID = val
}

// SetDest sets the value of Dest.
func (s *DbaasIntegration) SetDest(val OptString) {
	s.Dest = val
}

// Integration settings.
type DbaasIntegrationSettings struct{}

// Ref: #/components/schemas/dbaas-integration-type
type DbaasIntegrationType struct {
	// The type of the integration.
	Type OptString `json:"type"`
	// The description of the source service types.
	SourceMinusDescription OptString `json:"source-description"`
	// A list of the source service types the integration supports.
	SourceMinusServiceMinusTypes []string `json:"source-service-types"`
	// The description of the destination service types.
	DestMinusDescription OptString `json:"dest-description"`
	// A list of the destination service types the integration supports.
	DestMinusServiceMinusTypes []string `json:"dest-service-types"`
	// A JSON schema of additional settings of the integration.
	Settings OptDbaasIntegrationTypeSettings `json:"settings"`
}

// GetType returns the value of Type.
func (s *DbaasIntegrationType) GetType() OptString {
	return s.Type
}

// GetSourceMinusDescription returns the value of SourceMinusDescription.
func (s *DbaasIntegrationType) GetSourceMinusDescription() OptString {
	return s.SourceMinusDescription
}

// GetSourceMinusServiceMinusTypes returns the value of SourceMinusServiceMinusTypes.
func (s *DbaasIntegrationType) GetSourceMinusServiceMinusTypes() []string {
	return s.SourceMinusServiceMinusTypes
}

// GetDestMinusDescription returns the value of DestMinusDescription.
func (s *DbaasIntegrationType) GetDestMinusDescription() OptString {
	return s.DestMinusDescription
}

// GetDestMinusServiceMinusTypes returns the value of DestMinusServiceMinusTypes.
func (s *DbaasIntegrationType) GetDestMinusServiceMinusTypes() []string {
	return s.DestMinusServiceMinusTypes
}

// GetSettings returns the value of Settings.
func (s *DbaasIntegrationType) GetSettings() OptDbaasIntegrationTypeSettings {
	return s.Settings
}

// SetType sets the value of Type.
func (s *DbaasIntegrationType) SetType(val OptString) {
	s.Type = val
}

// SetSourceMinusDescription sets the value of SourceMinusDescription.
func (s *DbaasIntegrationType) SetSourceMinusDescription(val OptString) {
	s.SourceMinusDescription = val
}

// SetSourceMinusServiceMinusTypes sets the value of SourceMinusServiceMinusTypes.
func (s *DbaasIntegrationType) SetSourceMinusServiceMinusTypes(val []string) {
	s.SourceMinusServiceMinusTypes = val
}

// SetDestMinusDescription sets the value of DestMinusDescription.
func (s *DbaasIntegrationType) SetDestMinusDescription(val OptString) {
	s.DestMinusDescription = val
}

// SetDestMinusServiceMinusTypes sets the value of DestMinusServiceMinusTypes.
func (s *DbaasIntegrationType) SetDestMinusServiceMinusTypes(val []string) {
	s.DestMinusServiceMinusTypes = val
}

// SetSettings sets the value of Settings.
func (s *DbaasIntegrationType) SetSettings(val OptDbaasIntegrationTypeSettings) {
	s.Settings = val
}

// A JSON schema of additional settings of the integration.
type DbaasIntegrationTypeSettings struct {
	Properties           *DbaasIntegrationTypeSettingsProperties `json:"properties"`
	AdditionalProperties OptBool                                 `json:"additionalProperties"`
	Type                 OptString                               `json:"type"`
	Title                OptString                               `json:"title"`
}

// GetProperties returns the value of Properties.
func (s *DbaasIntegrationTypeSettings) GetProperties() *DbaasIntegrationTypeSettingsProperties {
	return s.Properties
}

// GetAdditionalProperties returns the value of AdditionalProperties.
func (s *DbaasIntegrationTypeSettings) GetAdditionalProperties() OptBool {
	return s.AdditionalProperties
}

// GetType returns the value of Type.
func (s *DbaasIntegrationTypeSettings) GetType() OptString {
	return s.Type
}

// GetTitle returns the value of Title.
func (s *DbaasIntegrationTypeSettings) GetTitle() OptString {
	return s.Title
}

// SetProperties sets the value of Properties.
func (s *DbaasIntegrationTypeSettings) SetProperties(val *DbaasIntegrationTypeSettingsProperties) {
	s.Properties = val
}

// SetAdditionalProperties sets the value of AdditionalProperties.
func (s *DbaasIntegrationTypeSettings) SetAdditionalProperties(val OptBool) {
	s.AdditionalProperties = val
}

// SetType sets the value of Type.
func (s *DbaasIntegrationTypeSettings) SetType(val OptString) {
	s.Type = val
}

// SetTitle sets the value of Title.
func (s *DbaasIntegrationTypeSettings) SetTitle(val OptString) {
	s.Title = val
}

type DbaasIntegrationTypeSettingsProperties struct{}

type DbaasKafkaACLID string

// Ref: #/components/schemas/dbaas-kafka-acls
type DbaasKafkaAcls struct {
	TopicMinusACL               []DbaasKafkaTopicACLEntry          `json:"topic-acl"`
	SchemaMinusRegistryMinusACL []DbaasKafkaSchemaRegistryACLEntry `json:"schema-registry-acl"`
}

// GetTopicMinusACL returns the value of TopicMinusACL.
func (s *DbaasKafkaAcls) GetTopicMinusACL() []DbaasKafkaTopicACLEntry {
	return s.TopicMinusACL
}

// GetSchemaMinusRegistryMinusACL returns the value of SchemaMinusRegistryMinusACL.
func (s *DbaasKafkaAcls) GetSchemaMinusRegistryMinusACL() []DbaasKafkaSchemaRegistryACLEntry {
	return s.SchemaMinusRegistryMinusACL
}

// SetTopicMinusACL sets the value of TopicMinusACL.
func (s *DbaasKafkaAcls) SetTopicMinusACL(val []DbaasKafkaTopicACLEntry) {
	s.TopicMinusACL = val
}

// SetSchemaMinusRegistryMinusACL sets the value of SchemaMinusRegistryMinusACL.
func (s *DbaasKafkaAcls) SetSchemaMinusRegistryMinusACL(val []DbaasKafkaSchemaRegistryACLEntry) {
	s.SchemaMinusRegistryMinusACL = val
}

// Ref: #/components/schemas/dbaas-kafka-schema-registry-acl-entry
type DbaasKafkaSchemaRegistryACLEntry struct {
	// Kafka ACL ID.
	ID OptDbaasKafkaACLID `json:"id"`
	// Kafka username or username pattern.
	Username string `json:"username"`
	// Kafka Schema Registry name or pattern.
	Resource string `json:"resource"`
	// Kafka Schema Registry permission.
	Permission DbaasKafkaSchemaRegistryACLEntryPermission `json:"permission"`
}

// GetID returns the value of ID.
func (s *DbaasKafkaSchemaRegistryACLEntry) GetID() OptDbaasKafkaACLID {
	return s.ID
}

// GetUsername returns the value of Username.
func (s *DbaasKafkaSchemaRegistryACLEntry) GetUsername() string {
	return s.Username
}

// GetResource returns the value of Resource.
func (s *DbaasKafkaSchemaRegistryACLEntry) GetResource() string {
	return s.Resource
}

// GetPermission returns the value of Permission.
func (s *DbaasKafkaSchemaRegistryACLEntry) GetPermission() DbaasKafkaSchemaRegistryACLEntryPermission {
	return s.Permission
}

// SetID sets the value of ID.
func (s *DbaasKafkaSchemaRegistryACLEntry) SetID(val OptDbaasKafkaACLID) {
	s.ID = val
}

// SetUsername sets the value of Username.
func (s *DbaasKafkaSchemaRegistryACLEntry) SetUsername(val string) {
	s.Username = val
}

// SetResource sets the value of Resource.
func (s *DbaasKafkaSchemaRegistryACLEntry) SetResource(val string) {
	s.Resource = val
}

// SetPermission sets the value of Permission.
func (s *DbaasKafkaSchemaRegistryACLEntry) SetPermission(val DbaasKafkaSchemaRegistryACLEntryPermission) {
	s.Permission = val
}

// Kafka Schema Registry permission.
type DbaasKafkaSchemaRegistryACLEntryPermission string

const (
	DbaasKafkaSchemaRegistryACLEntryPermissionSchemaRegistryRead  DbaasKafkaSchemaRegistryACLEntryPermission = "schema_registry_read"
	DbaasKafkaSchemaRegistryACLEntryPermissionSchemaRegistryWrite DbaasKafkaSchemaRegistryACLEntryPermission = "schema_registry_write"
)

// MarshalText implements encoding.TextMarshaler.
func (s DbaasKafkaSchemaRegistryACLEntryPermission) MarshalText() ([]byte, error) {
	switch s {
	case DbaasKafkaSchemaRegistryACLEntryPermissionSchemaRegistryRead:
		return []byte(s), nil
	case DbaasKafkaSchemaRegistryACLEntryPermissionSchemaRegistryWrite:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *DbaasKafkaSchemaRegistryACLEntryPermission) UnmarshalText(data []byte) error {
	switch DbaasKafkaSchemaRegistryACLEntryPermission(data) {
	case DbaasKafkaSchemaRegistryACLEntryPermissionSchemaRegistryRead:
		*s = DbaasKafkaSchemaRegistryACLEntryPermissionSchemaRegistryRead
		return nil
	case DbaasKafkaSchemaRegistryACLEntryPermissionSchemaRegistryWrite:
		*s = DbaasKafkaSchemaRegistryACLEntryPermissionSchemaRegistryWrite
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/dbaas-kafka-topic-acl-entry
type DbaasKafkaTopicACLEntry struct {
	// Kafka ACL ID.
	ID OptDbaasKafkaACLID `json:"id"`
	// Kafka username or username pattern.
	Username string `json:"username"`
	// Kafka topic name or pattern.
	Topic string `json:"topic"`
	// Kafka permission.
	Permission DbaasKafkaTopicACLEntryPermission `json:"permission"`
}

// GetID returns the value of ID.
func (s *DbaasKafkaTopicACLEntry) GetID() OptDbaasKafkaACLID {
	return s.ID
}

// GetUsername returns the value of Username.
func (s *DbaasKafkaTopicACLEntry) GetUsername() string {
	return s.Username
}

// GetTopic returns the value of Topic.
func (s *DbaasKafkaTopicACLEntry) GetTopic() string {
	return s.Topic
}

// GetPermission returns the value of Permission.
func (s *DbaasKafkaTopicACLEntry) GetPermission() DbaasKafkaTopicACLEntryPermission {
	return s.Permission
}

// SetID sets the value of ID.
func (s *DbaasKafkaTopicACLEntry) SetID(val OptDbaasKafkaACLID) {
	s.ID = val
}

// SetUsername sets the value of Username.
func (s *DbaasKafkaTopicACLEntry) SetUsername(val string) {
	s.Username = val
}

// SetTopic sets the value of Topic.
func (s *DbaasKafkaTopicACLEntry) SetTopic(val string) {
	s.Topic = val
}

// SetPermission sets the value of Permission.
func (s *DbaasKafkaTopicACLEntry) SetPermission(val DbaasKafkaTopicACLEntryPermission) {
	s.Permission = val
}

// Kafka permission.
type DbaasKafkaTopicACLEntryPermission string

const (
	DbaasKafkaTopicACLEntryPermissionAdmin     DbaasKafkaTopicACLEntryPermission = "admin"
	DbaasKafkaTopicACLEntryPermissionRead      DbaasKafkaTopicACLEntryPermission = "read"
	DbaasKafkaTopicACLEntryPermissionReadwrite DbaasKafkaTopicACLEntryPermission = "readwrite"
	DbaasKafkaTopicACLEntryPermissionWrite     DbaasKafkaTopicACLEntryPermission = "write"
)

// MarshalText implements encoding.TextMarshaler.
func (s DbaasKafkaTopicACLEntryPermission) MarshalText() ([]byte, error) {
	switch s {
	case DbaasKafkaTopicACLEntryPermissionAdmin:
		return []byte(s), nil
	case DbaasKafkaTopicACLEntryPermissionRead:
		return []byte(s), nil
	case DbaasKafkaTopicACLEntryPermissionReadwrite:
		return []byte(s), nil
	case DbaasKafkaTopicACLEntryPermissionWrite:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *DbaasKafkaTopicACLEntryPermission) UnmarshalText(data []byte) error {
	switch DbaasKafkaTopicACLEntryPermission(data) {
	case DbaasKafkaTopicACLEntryPermissionAdmin:
		*s = DbaasKafkaTopicACLEntryPermissionAdmin
		return nil
	case DbaasKafkaTopicACLEntryPermissionRead:
		*s = DbaasKafkaTopicACLEntryPermissionRead
		return nil
	case DbaasKafkaTopicACLEntryPermissionReadwrite:
		*s = DbaasKafkaTopicACLEntryPermissionReadwrite
		return nil
	case DbaasKafkaTopicACLEntryPermissionWrite:
		*s = DbaasKafkaTopicACLEntryPermissionWrite
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/dbaas-migration-status
type DbaasMigrationStatus struct {
	// Error message in case that migration has failed.
	Error OptString `json:"error"`
	// Redis only: how many seconds since last I/O with redis master.
	MasterMinusLastMinusIoMinusSecondsMinusAgo OptInt64 `json:"master-last-io-seconds-ago"`
	// Redis only: replication master link status.
	MasterMinusLinkMinusStatus OptEnumMasterLinkStatus `json:"master-link-status"`
	// Migration method. Empty in case of multiple methods or error.
	Method OptString `json:"method"`
	// Migration status.
	Status OptString `json:"status"`
	// Migration status per database.
	Details []DbaasMigrationStatusDetailsItem `json:"details"`
}

// GetError returns the value of Error.
func (s *DbaasMigrationStatus) GetError() OptString {
	return s.Error
}

// GetMasterMinusLastMinusIoMinusSecondsMinusAgo returns the value of MasterMinusLastMinusIoMinusSecondsMinusAgo.
func (s *DbaasMigrationStatus) GetMasterMinusLastMinusIoMinusSecondsMinusAgo() OptInt64 {
	return s.MasterMinusLastMinusIoMinusSecondsMinusAgo
}

// GetMasterMinusLinkMinusStatus returns the value of MasterMinusLinkMinusStatus.
func (s *DbaasMigrationStatus) GetMasterMinusLinkMinusStatus() OptEnumMasterLinkStatus {
	return s.MasterMinusLinkMinusStatus
}

// GetMethod returns the value of Method.
func (s *DbaasMigrationStatus) GetMethod() OptString {
	return s.Method
}

// GetStatus returns the value of Status.
func (s *DbaasMigrationStatus) GetStatus() OptString {
	return s.Status
}

// GetDetails returns the value of Details.
func (s *DbaasMigrationStatus) GetDetails() []DbaasMigrationStatusDetailsItem {
	return s.Details
}

// SetError sets the value of Error.
func (s *DbaasMigrationStatus) SetError(val OptString) {
	s.Error = val
}

// SetMasterMinusLastMinusIoMinusSecondsMinusAgo sets the value of MasterMinusLastMinusIoMinusSecondsMinusAgo.
func (s *DbaasMigrationStatus) SetMasterMinusLastMinusIoMinusSecondsMinusAgo(val OptInt64) {
	s.MasterMinusLastMinusIoMinusSecondsMinusAgo = val
}

// SetMasterMinusLinkMinusStatus sets the value of MasterMinusLinkMinusStatus.
func (s *DbaasMigrationStatus) SetMasterMinusLinkMinusStatus(val OptEnumMasterLinkStatus) {
	s.MasterMinusLinkMinusStatus = val
}

// SetMethod sets the value of Method.
func (s *DbaasMigrationStatus) SetMethod(val OptString) {
	s.Method = val
}

// SetStatus sets the value of Status.
func (s *DbaasMigrationStatus) SetStatus(val OptString) {
	s.Status = val
}

// SetDetails sets the value of Details.
func (s *DbaasMigrationStatus) SetDetails(val []DbaasMigrationStatusDetailsItem) {
	s.Details = val
}

type DbaasMigrationStatusDetailsItem struct {
	// Migrated db name (PG) or number (Redis).
	Dbname OptString `json:"dbname"`
	// Error message in case that migration has failed.
	Error OptString `json:"error"`
	// Migration method.
	Method OptString `json:"method"`
	// Migration status.
	Status OptEnumMigrationStatus `json:"status"`
}

// GetDbname returns the value of Dbname.
func (s *DbaasMigrationStatusDetailsItem) GetDbname() OptString {
	return s.Dbname
}

// GetError returns the value of Error.
func (s *DbaasMigrationStatusDetailsItem) GetError() OptString {
	return s.Error
}

// GetMethod returns the value of Method.
func (s *DbaasMigrationStatusDetailsItem) GetMethod() OptString {
	return s.Method
}

// GetStatus returns the value of Status.
func (s *DbaasMigrationStatusDetailsItem) GetStatus() OptEnumMigrationStatus {
	return s.Status
}

// SetDbname sets the value of Dbname.
func (s *DbaasMigrationStatusDetailsItem) SetDbname(val OptString) {
	s.Dbname = val
}

// SetError sets the value of Error.
func (s *DbaasMigrationStatusDetailsItem) SetError(val OptString) {
	s.Error = val
}

// SetMethod sets the value of Method.
func (s *DbaasMigrationStatusDetailsItem) SetMethod(val OptString) {
	s.Method = val
}

// SetStatus sets the value of Status.
func (s *DbaasMigrationStatusDetailsItem) SetStatus(val OptEnumMigrationStatus) {
	s.Status = val
}

// Automatic maintenance settings.
// Ref: #/components/schemas/dbaas-node-state
type DbaasNodeState struct {
	// Name of the service node.
	Name string `json:"name"`
	// Extra information regarding the progress for current state.
	ProgressMinusUpdates []DbaasNodeStateProgressUpdate `json:"progress-updates"`
	// Role of this node. Only returned for a subset of service types.
	Role OptDbaasNodeStateRole `json:"role"`
	// Current state of the service node.
	State DbaasNodeStateState `json:"state"`
}

// GetName returns the value of Name.
func (s *DbaasNodeState) GetName() string {
	return s.Name
}

// GetProgressMinusUpdates returns the value of ProgressMinusUpdates.
func (s *DbaasNodeState) GetProgressMinusUpdates() []DbaasNodeStateProgressUpdate {
	return s.ProgressMinusUpdates
}

// GetRole returns the value of Role.
func (s *DbaasNodeState) GetRole() OptDbaasNodeStateRole {
	return s.Role
}

// GetState returns the value of State.
func (s *DbaasNodeState) GetState() DbaasNodeStateState {
	return s.State
}

// SetName sets the value of Name.
func (s *DbaasNodeState) SetName(val string) {
	s.Name = val
}

// SetProgressMinusUpdates sets the value of ProgressMinusUpdates.
func (s *DbaasNodeState) SetProgressMinusUpdates(val []DbaasNodeStateProgressUpdate) {
	s.ProgressMinusUpdates = val
}

// SetRole sets the value of Role.
func (s *DbaasNodeState) SetRole(val OptDbaasNodeStateRole) {
	s.Role = val
}

// SetState sets the value of State.
func (s *DbaasNodeState) SetState(val DbaasNodeStateState) {
	s.State = val
}

// Extra information regarding the progress for current state.
// Ref: #/components/schemas/dbaas-node-state-progress-update
type DbaasNodeStateProgressUpdate struct {
	// Indicates whether this phase has been completed or not.
	Completed bool `json:"completed"`
	// Current progress for this phase. May be missing or null.
	Current OptInt64 `json:"current"`
	// Maximum progress value for this phase. May be missing or null. May change.
	Max OptInt64 `json:"max"`
	// Minimum progress value for this phase. May be missing or null.
	Min OptInt64 `json:"min"`
	// Key identifying this phase.
	Phase DbaasNodeStateProgressUpdatePhase `json:"phase"`
	// Unit for current/min/max values. New units may be added.
	// If null should be treated as generic unit.
	Unit OptString `json:"unit"`
}

// GetCompleted returns the value of Completed.
func (s *DbaasNodeStateProgressUpdate) GetCompleted() bool {
	return s.Completed
}

// GetCurrent returns the value of Current.
func (s *DbaasNodeStateProgressUpdate) GetCurrent() OptInt64 {
	return s.Current
}

// GetMax returns the value of Max.
func (s *DbaasNodeStateProgressUpdate) GetMax() OptInt64 {
	return s.Max
}

// GetMin returns the value of Min.
func (s *DbaasNodeStateProgressUpdate) GetMin() OptInt64 {
	return s.Min
}

// GetPhase returns the value of Phase.
func (s *DbaasNodeStateProgressUpdate) GetPhase() DbaasNodeStateProgressUpdatePhase {
	return s.Phase
}

// GetUnit returns the value of Unit.
func (s *DbaasNodeStateProgressUpdate) GetUnit() OptString {
	return s.Unit
}

// SetCompleted sets the value of Completed.
func (s *DbaasNodeStateProgressUpdate) SetCompleted(val bool) {
	s.Completed = val
}

// SetCurrent sets the value of Current.
func (s *DbaasNodeStateProgressUpdate) SetCurrent(val OptInt64) {
	s.Current = val
}

// SetMax sets the value of Max.
func (s *DbaasNodeStateProgressUpdate) SetMax(val OptInt64) {
	s.Max = val
}

// SetMin sets the value of Min.
func (s *DbaasNodeStateProgressUpdate) SetMin(val OptInt64) {
	s.Min = val
}

// SetPhase sets the value of Phase.
func (s *DbaasNodeStateProgressUpdate) SetPhase(val DbaasNodeStateProgressUpdatePhase) {
	s.Phase = val
}

// SetUnit sets the value of Unit.
func (s *DbaasNodeStateProgressUpdate) SetUnit(val OptString) {
	s.Unit = val
}

// Key identifying this phase.
type DbaasNodeStateProgressUpdatePhase string

const (
	DbaasNodeStateProgressUpdatePhaseStream     DbaasNodeStateProgressUpdatePhase = "stream"
	DbaasNodeStateProgressUpdatePhaseBasebackup DbaasNodeStateProgressUpdatePhase = "basebackup"
	DbaasNodeStateProgressUpdatePhasePrepare    DbaasNodeStateProgressUpdatePhase = "prepare"
	DbaasNodeStateProgressUpdatePhaseFinalize   DbaasNodeStateProgressUpdatePhase = "finalize"
)

// MarshalText implements encoding.TextMarshaler.
func (s DbaasNodeStateProgressUpdatePhase) MarshalText() ([]byte, error) {
	switch s {
	case DbaasNodeStateProgressUpdatePhaseStream:
		return []byte(s), nil
	case DbaasNodeStateProgressUpdatePhaseBasebackup:
		return []byte(s), nil
	case DbaasNodeStateProgressUpdatePhasePrepare:
		return []byte(s), nil
	case DbaasNodeStateProgressUpdatePhaseFinalize:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *DbaasNodeStateProgressUpdatePhase) UnmarshalText(data []byte) error {
	switch DbaasNodeStateProgressUpdatePhase(data) {
	case DbaasNodeStateProgressUpdatePhaseStream:
		*s = DbaasNodeStateProgressUpdatePhaseStream
		return nil
	case DbaasNodeStateProgressUpdatePhaseBasebackup:
		*s = DbaasNodeStateProgressUpdatePhaseBasebackup
		return nil
	case DbaasNodeStateProgressUpdatePhasePrepare:
		*s = DbaasNodeStateProgressUpdatePhasePrepare
		return nil
	case DbaasNodeStateProgressUpdatePhaseFinalize:
		*s = DbaasNodeStateProgressUpdatePhaseFinalize
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Role of this node. Only returned for a subset of service types.
type DbaasNodeStateRole string

const (
	DbaasNodeStateRoleStandby     DbaasNodeStateRole = "standby"
	DbaasNodeStateRoleMaster      DbaasNodeStateRole = "master"
	DbaasNodeStateRoleReadReplica DbaasNodeStateRole = "read-replica"
)

// MarshalText implements encoding.TextMarshaler.
func (s DbaasNodeStateRole) MarshalText() ([]byte, error) {
	switch s {
	case DbaasNodeStateRoleStandby:
		return []byte(s), nil
	case DbaasNodeStateRoleMaster:
		return []byte(s), nil
	case DbaasNodeStateRoleReadReplica:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *DbaasNodeStateRole) UnmarshalText(data []byte) error {
	switch DbaasNodeStateRole(data) {
	case DbaasNodeStateRoleStandby:
		*s = DbaasNodeStateRoleStandby
		return nil
	case DbaasNodeStateRoleMaster:
		*s = DbaasNodeStateRoleMaster
		return nil
	case DbaasNodeStateRoleReadReplica:
		*s = DbaasNodeStateRoleReadReplica
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Current state of the service node.
type DbaasNodeStateState string

const (
	DbaasNodeStateStateLeaving     DbaasNodeStateState = "leaving"
	DbaasNodeStateStateRunning     DbaasNodeStateState = "running"
	DbaasNodeStateStateSyncingData DbaasNodeStateState = "syncing_data"
	DbaasNodeStateStateSettingUpVM DbaasNodeStateState = "setting_up_vm"
	DbaasNodeStateStateUnknown     DbaasNodeStateState = "unknown"
)

// MarshalText implements encoding.TextMarshaler.
func (s DbaasNodeStateState) MarshalText() ([]byte, error) {
	switch s {
	case DbaasNodeStateStateLeaving:
		return []byte(s), nil
	case DbaasNodeStateStateRunning:
		return []byte(s), nil
	case DbaasNodeStateStateSyncingData:
		return []byte(s), nil
	case DbaasNodeStateStateSettingUpVM:
		return []byte(s), nil
	case DbaasNodeStateStateUnknown:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *DbaasNodeStateState) UnmarshalText(data []byte) error {
	switch DbaasNodeStateState(data) {
	case DbaasNodeStateStateLeaving:
		*s = DbaasNodeStateStateLeaving
		return nil
	case DbaasNodeStateStateRunning:
		*s = DbaasNodeStateStateRunning
		return nil
	case DbaasNodeStateStateSyncingData:
		*s = DbaasNodeStateStateSyncingData
		return nil
	case DbaasNodeStateStateSettingUpVM:
		*s = DbaasNodeStateStateSettingUpVM
		return nil
	case DbaasNodeStateStateUnknown:
		*s = DbaasNodeStateStateUnknown
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type DbaasPgDatabaseName string

type DbaasPgPoolName string

type DbaasPgPoolSize int64

type DbaasPgPoolUsername string

// DBaaS plan.
// Ref: #/components/schemas/dbaas-plan
type DbaasPlan struct {
	// DBaaS plan name.
	Name OptString `json:"name"`
	// DBaaS plan node count.
	NodeMinusCount OptInt64 `json:"node-count"`
	// DBaaS plan CPU count per node.
	NodeMinusCPUMinusCount OptInt64 `json:"node-cpu-count"`
	// DBaaS plan disk space.
	DiskMinusSpace OptInt64 `json:"disk-space"`
	// DBaaS plan memory count per node.
	NodeMinusMemory OptInt64 `json:"node-memory"`
	// DBaaS plan max memory allocated percentage.
	MaxMinusMemoryMinusPercent OptInt64 `json:"max-memory-percent"`
	// DBaaS plan backup config.
	BackupMinusConfig OptDbaasBackupConfig `json:"backup-config"`
	// Requires authorization or publicly available.
	Authorized OptBool `json:"authorized"`
}

// GetName returns the value of Name.
func (s *DbaasPlan) GetName() OptString {
	return s.Name
}

// GetNodeMinusCount returns the value of NodeMinusCount.
func (s *DbaasPlan) GetNodeMinusCount() OptInt64 {
	return s.NodeMinusCount
}

// GetNodeMinusCPUMinusCount returns the value of NodeMinusCPUMinusCount.
func (s *DbaasPlan) GetNodeMinusCPUMinusCount() OptInt64 {
	return s.NodeMinusCPUMinusCount
}

// GetDiskMinusSpace returns the value of DiskMinusSpace.
func (s *DbaasPlan) GetDiskMinusSpace() OptInt64 {
	return s.DiskMinusSpace
}

// GetNodeMinusMemory returns the value of NodeMinusMemory.
func (s *DbaasPlan) GetNodeMinusMemory() OptInt64 {
	return s.NodeMinusMemory
}

// GetMaxMinusMemoryMinusPercent returns the value of MaxMinusMemoryMinusPercent.
func (s *DbaasPlan) GetMaxMinusMemoryMinusPercent() OptInt64 {
	return s.MaxMinusMemoryMinusPercent
}

// GetBackupMinusConfig returns the value of BackupMinusConfig.
func (s *DbaasPlan) GetBackupMinusConfig() OptDbaasBackupConfig {
	return s.BackupMinusConfig
}

// GetAuthorized returns the value of Authorized.
func (s *DbaasPlan) GetAuthorized() OptBool {
	return s.Authorized
}

// SetName sets the value of Name.
func (s *DbaasPlan) SetName(val OptString) {
	s.Name = val
}

// SetNodeMinusCount sets the value of NodeMinusCount.
func (s *DbaasPlan) SetNodeMinusCount(val OptInt64) {
	s.NodeMinusCount = val
}

// SetNodeMinusCPUMinusCount sets the value of NodeMinusCPUMinusCount.
func (s *DbaasPlan) SetNodeMinusCPUMinusCount(val OptInt64) {
	s.NodeMinusCPUMinusCount = val
}

// SetDiskMinusSpace sets the value of DiskMinusSpace.
func (s *DbaasPlan) SetDiskMinusSpace(val OptInt64) {
	s.DiskMinusSpace = val
}

// SetNodeMinusMemory sets the value of NodeMinusMemory.
func (s *DbaasPlan) SetNodeMinusMemory(val OptInt64) {
	s.NodeMinusMemory = val
}

// SetMaxMinusMemoryMinusPercent sets the value of MaxMinusMemoryMinusPercent.
func (s *DbaasPlan) SetMaxMinusMemoryMinusPercent(val OptInt64) {
	s.MaxMinusMemoryMinusPercent = val
}

// SetBackupMinusConfig sets the value of BackupMinusConfig.
func (s *DbaasPlan) SetBackupMinusConfig(val OptDbaasBackupConfig) {
	s.BackupMinusConfig = val
}

// SetAuthorized sets the value of Authorized.
func (s *DbaasPlan) SetAuthorized(val OptBool) {
	s.Authorized = val
}

// Ref: #/components/schemas/dbaas-postgres-users
type DbaasPostgresUsers struct {
	Users []DbaasPostgresUsersUsersItem `json:"users"`
}

// GetUsers returns the value of Users.
func (s *DbaasPostgresUsers) GetUsers() []DbaasPostgresUsersUsersItem {
	return s.Users
}

// SetUsers sets the value of Users.
func (s *DbaasPostgresUsers) SetUsers(val []DbaasPostgresUsersUsersItem) {
	s.Users = val
}

type DbaasPostgresUsersUsersItem struct {
	// Username.
	Username              DbaasUserUsername `json:"username"`
	AllowMinusReplication OptBool           `json:"allow-replication"`
}

// GetUsername returns the value of Username.
func (s *DbaasPostgresUsersUsersItem) GetUsername() DbaasUserUsername {
	return s.Username
}

// GetAllowMinusReplication returns the value of AllowMinusReplication.
func (s *DbaasPostgresUsersUsersItem) GetAllowMinusReplication() OptBool {
	return s.AllowMinusReplication
}

// SetUsername sets the value of Username.
func (s *DbaasPostgresUsersUsersItem) SetUsername(val DbaasUserUsername) {
	s.Username = val
}

// SetAllowMinusReplication sets the value of AllowMinusReplication.
func (s *DbaasPostgresUsersUsersItem) SetAllowMinusReplication(val OptBool) {
	s.AllowMinusReplication = val
}

// List of backups for the service.
// Ref: #/components/schemas/dbaas-service-backup
type DbaasServiceBackup struct {
	// Internal name of this backup.
	BackupMinusName string `json:"backup-name"`
	// Backup timestamp (ISO 8601).
	BackupMinusTime time.Time `json:"backup-time"`
	// Backup's original size before compression.
	DataMinusSize int64 `json:"data-size"`
}

// GetBackupMinusName returns the value of BackupMinusName.
func (s *DbaasServiceBackup) GetBackupMinusName() string {
	return s.BackupMinusName
}

// GetBackupMinusTime returns the value of BackupMinusTime.
func (s *DbaasServiceBackup) GetBackupMinusTime() time.Time {
	return s.BackupMinusTime
}

// GetDataMinusSize returns the value of DataMinusSize.
func (s *DbaasServiceBackup) GetDataMinusSize() int64 {
	return s.DataMinusSize
}

// SetBackupMinusName sets the value of BackupMinusName.
func (s *DbaasServiceBackup) SetBackupMinusName(val string) {
	s.BackupMinusName = val
}

// SetBackupMinusTime sets the value of BackupMinusTime.
func (s *DbaasServiceBackup) SetBackupMinusTime(val time.Time) {
	s.BackupMinusTime = val
}

// SetDataMinusSize sets the value of DataMinusSize.
func (s *DbaasServiceBackup) SetDataMinusSize(val int64) {
	s.DataMinusSize = val
}

// Ref: #/components/schemas/dbaas-service-common
type DbaasServiceCommon struct {
	// Service last update timestamp (ISO 8601).
	UpdatedMinusAt OptDateTime `json:"updated-at"`
	// Number of service nodes in the active plan.
	NodeMinusCount OptInt64 `json:"node-count"`
	// Number of CPUs for each node.
	NodeMinusCPUMinusCount OptInt64 `json:"node-cpu-count"`
	// Service integrations.
	Integrations []DbaasIntegration `json:"integrations"`
	// Service name.
	Name DbaasServiceName `json:"name"`
	// Service type code.
	Type DbaasServiceTypeName `json:"type"`
	// State of the service.
	State OptEnumServiceState `json:"state"`
	// Service is protected against termination and powering off.
	TerminationMinusProtection OptBool `json:"termination-protection"`
	// Service notifications.
	Notifications []DbaasServiceNotification `json:"notifications"`
	// TODO UNIT disk space for data storage.
	DiskMinusSize OptInt64 `json:"disk-size"`
	// TODO UNIT of memory for each node.
	NodeMinusMemory OptInt64 `json:"node-memory"`
	// Service creation timestamp (ISO 8601).
	CreatedMinusAt OptDateTime `json:"created-at"`
	// Subscription plan.
	Plan string `json:"plan"`
}

// GetUpdatedMinusAt returns the value of UpdatedMinusAt.
func (s *DbaasServiceCommon) GetUpdatedMinusAt() OptDateTime {
	return s.UpdatedMinusAt
}

// GetNodeMinusCount returns the value of NodeMinusCount.
func (s *DbaasServiceCommon) GetNodeMinusCount() OptInt64 {
	return s.NodeMinusCount
}

// GetNodeMinusCPUMinusCount returns the value of NodeMinusCPUMinusCount.
func (s *DbaasServiceCommon) GetNodeMinusCPUMinusCount() OptInt64 {
	return s.NodeMinusCPUMinusCount
}

// GetIntegrations returns the value of Integrations.
func (s *DbaasServiceCommon) GetIntegrations() []DbaasIntegration {
	return s.Integrations
}

// GetName returns the value of Name.
func (s *DbaasServiceCommon) GetName() DbaasServiceName {
	return s.Name
}

// GetType returns the value of Type.
func (s *DbaasServiceCommon) GetType() DbaasServiceTypeName {
	return s.Type
}

// GetState returns the value of State.
func (s *DbaasServiceCommon) GetState() OptEnumServiceState {
	return s.State
}

// GetTerminationMinusProtection returns the value of TerminationMinusProtection.
func (s *DbaasServiceCommon) GetTerminationMinusProtection() OptBool {
	return s.TerminationMinusProtection
}

// GetNotifications returns the value of Notifications.
func (s *DbaasServiceCommon) GetNotifications() []DbaasServiceNotification {
	return s.Notifications
}

// GetDiskMinusSize returns the value of DiskMinusSize.
func (s *DbaasServiceCommon) GetDiskMinusSize() OptInt64 {
	return s.DiskMinusSize
}

// GetNodeMinusMemory returns the value of NodeMinusMemory.
func (s *DbaasServiceCommon) GetNodeMinusMemory() OptInt64 {
	return s.NodeMinusMemory
}

// GetCreatedMinusAt returns the value of CreatedMinusAt.
func (s *DbaasServiceCommon) GetCreatedMinusAt() OptDateTime {
	return s.CreatedMinusAt
}

// GetPlan returns the value of Plan.
func (s *DbaasServiceCommon) GetPlan() string {
	return s.Plan
}

// SetUpdatedMinusAt sets the value of UpdatedMinusAt.
func (s *DbaasServiceCommon) SetUpdatedMinusAt(val OptDateTime) {
	s.UpdatedMinusAt = val
}

// SetNodeMinusCount sets the value of NodeMinusCount.
func (s *DbaasServiceCommon) SetNodeMinusCount(val OptInt64) {
	s.NodeMinusCount = val
}

// SetNodeMinusCPUMinusCount sets the value of NodeMinusCPUMinusCount.
func (s *DbaasServiceCommon) SetNodeMinusCPUMinusCount(val OptInt64) {
	s.NodeMinusCPUMinusCount = val
}

// SetIntegrations sets the value of Integrations.
func (s *DbaasServiceCommon) SetIntegrations(val []DbaasIntegration) {
	s.Integrations = val
}

// SetName sets the value of Name.
func (s *DbaasServiceCommon) SetName(val DbaasServiceName) {
	s.Name = val
}

// SetType sets the value of Type.
func (s *DbaasServiceCommon) SetType(val DbaasServiceTypeName) {
	s.Type = val
}

// SetState sets the value of State.
func (s *DbaasServiceCommon) SetState(val OptEnumServiceState) {
	s.State = val
}

// SetTerminationMinusProtection sets the value of TerminationMinusProtection.
func (s *DbaasServiceCommon) SetTerminationMinusProtection(val OptBool) {
	s.TerminationMinusProtection = val
}

// SetNotifications sets the value of Notifications.
func (s *DbaasServiceCommon) SetNotifications(val []DbaasServiceNotification) {
	s.Notifications = val
}

// SetDiskMinusSize sets the value of DiskMinusSize.
func (s *DbaasServiceCommon) SetDiskMinusSize(val OptInt64) {
	s.DiskMinusSize = val
}

// SetNodeMinusMemory sets the value of NodeMinusMemory.
func (s *DbaasServiceCommon) SetNodeMinusMemory(val OptInt64) {
	s.NodeMinusMemory = val
}

// SetCreatedMinusAt sets the value of CreatedMinusAt.
func (s *DbaasServiceCommon) SetCreatedMinusAt(val OptDateTime) {
	s.CreatedMinusAt = val
}

// SetPlan sets the value of Plan.
func (s *DbaasServiceCommon) SetPlan(val string) {
	s.Plan = val
}

// Ref: #/components/schemas/dbaas-service-kafka
type DbaasServiceKafka struct {
	// Service last update timestamp (ISO 8601).
	UpdatedMinusAt OptDateTime `json:"updated-at"`
	// Kafka authentication methods.
	AuthenticationMinusMethods OptDbaasServiceKafkaAuthenticationMinusMethods `json:"authentication-methods"`
	// Number of service nodes in the active plan.
	NodeMinusCount OptInt64 `json:"node-count"`
	// Kafka connection information properties.
	ConnectionMinusInfo OptDbaasServiceKafkaConnectionMinusInfo `json:"connection-info"`
	// Number of CPUs for each node.
	NodeMinusCPUMinusCount OptInt64 `json:"node-cpu-count"`
	// Whether Kafka REST is enabled.
	KafkaMinusRestMinusEnabled OptBool `json:"kafka-rest-enabled"`
	// Service integrations.
	Integrations []DbaasIntegration `json:"integrations"`
	// State of individual service nodes.
	NodeMinusStates []DbaasNodeState `json:"node-states"`
	// Service name.
	Name DbaasServiceName `json:"name"`
	// Whether Kafka Connect is enabled.
	KafkaMinusConnectMinusEnabled OptBool `json:"kafka-connect-enabled"`
	// Service type code.
	Type DbaasServiceTypeName `json:"type"`
	// State of the service.
	State OptEnumServiceState `json:"state"`
	// Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
	IPMinusFilter []string `json:"ip-filter"`
	// Schema Registry configuration.
	SchemaMinusRegistryMinusSettings *DbaasServiceKafkaSchemaMinusRegistryMinusSettings `json:"schema-registry-settings"`
	// List of backups for the service.
	Backups []DbaasServiceBackup `json:"backups"`
	// Kafka REST configuration.
	KafkaMinusRestMinusSettings *DbaasServiceKafkaKafkaMinusRestMinusSettings `json:"kafka-rest-settings"`
	// Service is protected against termination and powering off.
	TerminationMinusProtection OptBool `json:"termination-protection"`
	// Service notifications.
	Notifications []DbaasServiceNotification `json:"notifications"`
	// Kafka Connect configuration values.
	KafkaMinusConnectMinusSettings *DbaasServiceKafkaKafkaMinusConnectMinusSettings `json:"kafka-connect-settings"`
	// Service component information objects.
	Components []DbaasServiceKafkaComponentsItem `json:"components"`
	// Automatic maintenance settings.
	Maintenance OptDbaasServiceMaintenance `json:"maintenance"`
	// Kafka-specific settings.
	KafkaMinusSettings *DbaasServiceKafkaKafkaMinusSettings `json:"kafka-settings"`
	// TODO UNIT disk space for data storage.
	DiskMinusSize OptInt64 `json:"disk-size"`
	// TODO UNIT of memory for each node.
	NodeMinusMemory OptInt64 `json:"node-memory"`
	// URI for connecting to the service (may be absent).
	URI OptString `json:"uri"`
	// Service_uri parameterized into key-value pairs.
	URIMinusParams *DbaasServiceKafkaURIMinusParams `json:"uri-params"`
	// Whether Schema-Registry is enabled.
	SchemaMinusRegistryMinusEnabled OptBool `json:"schema-registry-enabled"`
	// Kafka version.
	Version OptString `json:"version"`
	// Service creation timestamp (ISO 8601).
	CreatedMinusAt OptDateTime `json:"created-at"`
	// Subscription plan.
	Plan string `json:"plan"`
	// List of service users.
	Users []DbaasServiceKafkaUsersItem `json:"users"`
}

// GetUpdatedMinusAt returns the value of UpdatedMinusAt.
func (s *DbaasServiceKafka) GetUpdatedMinusAt() OptDateTime {
	return s.UpdatedMinusAt
}

// GetAuthenticationMinusMethods returns the value of AuthenticationMinusMethods.
func (s *DbaasServiceKafka) GetAuthenticationMinusMethods() OptDbaasServiceKafkaAuthenticationMinusMethods {
	return s.AuthenticationMinusMethods
}

// GetNodeMinusCount returns the value of NodeMinusCount.
func (s *DbaasServiceKafka) GetNodeMinusCount() OptInt64 {
	return s.NodeMinusCount
}

// GetConnectionMinusInfo returns the value of ConnectionMinusInfo.
func (s *DbaasServiceKafka) GetConnectionMinusInfo() OptDbaasServiceKafkaConnectionMinusInfo {
	return s.ConnectionMinusInfo
}

// GetNodeMinusCPUMinusCount returns the value of NodeMinusCPUMinusCount.
func (s *DbaasServiceKafka) GetNodeMinusCPUMinusCount() OptInt64 {
	return s.NodeMinusCPUMinusCount
}

// GetKafkaMinusRestMinusEnabled returns the value of KafkaMinusRestMinusEnabled.
func (s *DbaasServiceKafka) GetKafkaMinusRestMinusEnabled() OptBool {
	return s.KafkaMinusRestMinusEnabled
}

// GetIntegrations returns the value of Integrations.
func (s *DbaasServiceKafka) GetIntegrations() []DbaasIntegration {
	return s.Integrations
}

// GetNodeMinusStates returns the value of NodeMinusStates.
func (s *DbaasServiceKafka) GetNodeMinusStates() []DbaasNodeState {
	return s.NodeMinusStates
}

// GetName returns the value of Name.
func (s *DbaasServiceKafka) GetName() DbaasServiceName {
	return s.Name
}

// GetKafkaMinusConnectMinusEnabled returns the value of KafkaMinusConnectMinusEnabled.
func (s *DbaasServiceKafka) GetKafkaMinusConnectMinusEnabled() OptBool {
	return s.KafkaMinusConnectMinusEnabled
}

// GetType returns the value of Type.
func (s *DbaasServiceKafka) GetType() DbaasServiceTypeName {
	return s.Type
}

// GetState returns the value of State.
func (s *DbaasServiceKafka) GetState() OptEnumServiceState {
	return s.State
}

// GetIPMinusFilter returns the value of IPMinusFilter.
func (s *DbaasServiceKafka) GetIPMinusFilter() []string {
	return s.IPMinusFilter
}

// GetSchemaMinusRegistryMinusSettings returns the value of SchemaMinusRegistryMinusSettings.
func (s *DbaasServiceKafka) GetSchemaMinusRegistryMinusSettings() *DbaasServiceKafkaSchemaMinusRegistryMinusSettings {
	return s.SchemaMinusRegistryMinusSettings
}

// GetBackups returns the value of Backups.
func (s *DbaasServiceKafka) GetBackups() []DbaasServiceBackup {
	return s.Backups
}

// GetKafkaMinusRestMinusSettings returns the value of KafkaMinusRestMinusSettings.
func (s *DbaasServiceKafka) GetKafkaMinusRestMinusSettings() *DbaasServiceKafkaKafkaMinusRestMinusSettings {
	return s.KafkaMinusRestMinusSettings
}

// GetTerminationMinusProtection returns the value of TerminationMinusProtection.
func (s *DbaasServiceKafka) GetTerminationMinusProtection() OptBool {
	return s.TerminationMinusProtection
}

// GetNotifications returns the value of Notifications.
func (s *DbaasServiceKafka) GetNotifications() []DbaasServiceNotification {
	return s.Notifications
}

// GetKafkaMinusConnectMinusSettings returns the value of KafkaMinusConnectMinusSettings.
func (s *DbaasServiceKafka) GetKafkaMinusConnectMinusSettings() *DbaasServiceKafkaKafkaMinusConnectMinusSettings {
	return s.KafkaMinusConnectMinusSettings
}

// GetComponents returns the value of Components.
func (s *DbaasServiceKafka) GetComponents() []DbaasServiceKafkaComponentsItem {
	return s.Components
}

// GetMaintenance returns the value of Maintenance.
func (s *DbaasServiceKafka) GetMaintenance() OptDbaasServiceMaintenance {
	return s.Maintenance
}

// GetKafkaMinusSettings returns the value of KafkaMinusSettings.
func (s *DbaasServiceKafka) GetKafkaMinusSettings() *DbaasServiceKafkaKafkaMinusSettings {
	return s.KafkaMinusSettings
}

// GetDiskMinusSize returns the value of DiskMinusSize.
func (s *DbaasServiceKafka) GetDiskMinusSize() OptInt64 {
	return s.DiskMinusSize
}

// GetNodeMinusMemory returns the value of NodeMinusMemory.
func (s *DbaasServiceKafka) GetNodeMinusMemory() OptInt64 {
	return s.NodeMinusMemory
}

// GetURI returns the value of URI.
func (s *DbaasServiceKafka) GetURI() OptString {
	return s.URI
}

// GetURIMinusParams returns the value of URIMinusParams.
func (s *DbaasServiceKafka) GetURIMinusParams() *DbaasServiceKafkaURIMinusParams {
	return s.URIMinusParams
}

// GetSchemaMinusRegistryMinusEnabled returns the value of SchemaMinusRegistryMinusEnabled.
func (s *DbaasServiceKafka) GetSchemaMinusRegistryMinusEnabled() OptBool {
	return s.SchemaMinusRegistryMinusEnabled
}

// GetVersion returns the value of Version.
func (s *DbaasServiceKafka) GetVersion() OptString {
	return s.Version
}

// GetCreatedMinusAt returns the value of CreatedMinusAt.
func (s *DbaasServiceKafka) GetCreatedMinusAt() OptDateTime {
	return s.CreatedMinusAt
}

// GetPlan returns the value of Plan.
func (s *DbaasServiceKafka) GetPlan() string {
	return s.Plan
}

// GetUsers returns the value of Users.
func (s *DbaasServiceKafka) GetUsers() []DbaasServiceKafkaUsersItem {
	return s.Users
}

// SetUpdatedMinusAt sets the value of UpdatedMinusAt.
func (s *DbaasServiceKafka) SetUpdatedMinusAt(val OptDateTime) {
	s.UpdatedMinusAt = val
}

// SetAuthenticationMinusMethods sets the value of AuthenticationMinusMethods.
func (s *DbaasServiceKafka) SetAuthenticationMinusMethods(val OptDbaasServiceKafkaAuthenticationMinusMethods) {
	s.AuthenticationMinusMethods = val
}

// SetNodeMinusCount sets the value of NodeMinusCount.
func (s *DbaasServiceKafka) SetNodeMinusCount(val OptInt64) {
	s.NodeMinusCount = val
}

// SetConnectionMinusInfo sets the value of ConnectionMinusInfo.
func (s *DbaasServiceKafka) SetConnectionMinusInfo(val OptDbaasServiceKafkaConnectionMinusInfo) {
	s.ConnectionMinusInfo = val
}

// SetNodeMinusCPUMinusCount sets the value of NodeMinusCPUMinusCount.
func (s *DbaasServiceKafka) SetNodeMinusCPUMinusCount(val OptInt64) {
	s.NodeMinusCPUMinusCount = val
}

// SetKafkaMinusRestMinusEnabled sets the value of KafkaMinusRestMinusEnabled.
func (s *DbaasServiceKafka) SetKafkaMinusRestMinusEnabled(val OptBool) {
	s.KafkaMinusRestMinusEnabled = val
}

// SetIntegrations sets the value of Integrations.
func (s *DbaasServiceKafka) SetIntegrations(val []DbaasIntegration) {
	s.Integrations = val
}

// SetNodeMinusStates sets the value of NodeMinusStates.
func (s *DbaasServiceKafka) SetNodeMinusStates(val []DbaasNodeState) {
	s.NodeMinusStates = val
}

// SetName sets the value of Name.
func (s *DbaasServiceKafka) SetName(val DbaasServiceName) {
	s.Name = val
}

// SetKafkaMinusConnectMinusEnabled sets the value of KafkaMinusConnectMinusEnabled.
func (s *DbaasServiceKafka) SetKafkaMinusConnectMinusEnabled(val OptBool) {
	s.KafkaMinusConnectMinusEnabled = val
}

// SetType sets the value of Type.
func (s *DbaasServiceKafka) SetType(val DbaasServiceTypeName) {
	s.Type = val
}

// SetState sets the value of State.
func (s *DbaasServiceKafka) SetState(val OptEnumServiceState) {
	s.State = val
}

// SetIPMinusFilter sets the value of IPMinusFilter.
func (s *DbaasServiceKafka) SetIPMinusFilter(val []string) {
	s.IPMinusFilter = val
}

// SetSchemaMinusRegistryMinusSettings sets the value of SchemaMinusRegistryMinusSettings.
func (s *DbaasServiceKafka) SetSchemaMinusRegistryMinusSettings(val *DbaasServiceKafkaSchemaMinusRegistryMinusSettings) {
	s.SchemaMinusRegistryMinusSettings = val
}

// SetBackups sets the value of Backups.
func (s *DbaasServiceKafka) SetBackups(val []DbaasServiceBackup) {
	s.Backups = val
}

// SetKafkaMinusRestMinusSettings sets the value of KafkaMinusRestMinusSettings.
func (s *DbaasServiceKafka) SetKafkaMinusRestMinusSettings(val *DbaasServiceKafkaKafkaMinusRestMinusSettings) {
	s.KafkaMinusRestMinusSettings = val
}

// SetTerminationMinusProtection sets the value of TerminationMinusProtection.
func (s *DbaasServiceKafka) SetTerminationMinusProtection(val OptBool) {
	s.TerminationMinusProtection = val
}

// SetNotifications sets the value of Notifications.
func (s *DbaasServiceKafka) SetNotifications(val []DbaasServiceNotification) {
	s.Notifications = val
}

// SetKafkaMinusConnectMinusSettings sets the value of KafkaMinusConnectMinusSettings.
func (s *DbaasServiceKafka) SetKafkaMinusConnectMinusSettings(val *DbaasServiceKafkaKafkaMinusConnectMinusSettings) {
	s.KafkaMinusConnectMinusSettings = val
}

// SetComponents sets the value of Components.
func (s *DbaasServiceKafka) SetComponents(val []DbaasServiceKafkaComponentsItem) {
	s.Components = val
}

// SetMaintenance sets the value of Maintenance.
func (s *DbaasServiceKafka) SetMaintenance(val OptDbaasServiceMaintenance) {
	s.Maintenance = val
}

// SetKafkaMinusSettings sets the value of KafkaMinusSettings.
func (s *DbaasServiceKafka) SetKafkaMinusSettings(val *DbaasServiceKafkaKafkaMinusSettings) {
	s.KafkaMinusSettings = val
}

// SetDiskMinusSize sets the value of DiskMinusSize.
func (s *DbaasServiceKafka) SetDiskMinusSize(val OptInt64) {
	s.DiskMinusSize = val
}

// SetNodeMinusMemory sets the value of NodeMinusMemory.
func (s *DbaasServiceKafka) SetNodeMinusMemory(val OptInt64) {
	s.NodeMinusMemory = val
}

// SetURI sets the value of URI.
func (s *DbaasServiceKafka) SetURI(val OptString) {
	s.URI = val
}

// SetURIMinusParams sets the value of URIMinusParams.
func (s *DbaasServiceKafka) SetURIMinusParams(val *DbaasServiceKafkaURIMinusParams) {
	s.URIMinusParams = val
}

// SetSchemaMinusRegistryMinusEnabled sets the value of SchemaMinusRegistryMinusEnabled.
func (s *DbaasServiceKafka) SetSchemaMinusRegistryMinusEnabled(val OptBool) {
	s.SchemaMinusRegistryMinusEnabled = val
}

// SetVersion sets the value of Version.
func (s *DbaasServiceKafka) SetVersion(val OptString) {
	s.Version = val
}

// SetCreatedMinusAt sets the value of CreatedMinusAt.
func (s *DbaasServiceKafka) SetCreatedMinusAt(val OptDateTime) {
	s.CreatedMinusAt = val
}

// SetPlan sets the value of Plan.
func (s *DbaasServiceKafka) SetPlan(val string) {
	s.Plan = val
}

// SetUsers sets the value of Users.
func (s *DbaasServiceKafka) SetUsers(val []DbaasServiceKafkaUsersItem) {
	s.Users = val
}

// Kafka authentication methods.
type DbaasServiceKafkaAuthenticationMinusMethods struct {
	// Whether certificate/SSL authentication is enabled.
	Certificate OptBool `json:"certificate"`
	// Whether SASL authentication is enabled.
	Sasl OptBool `json:"sasl"`
}

// GetCertificate returns the value of Certificate.
func (s *DbaasServiceKafkaAuthenticationMinusMethods) GetCertificate() OptBool {
	return s.Certificate
}

// GetSasl returns the value of Sasl.
func (s *DbaasServiceKafkaAuthenticationMinusMethods) GetSasl() OptBool {
	return s.Sasl
}

// SetCertificate sets the value of Certificate.
func (s *DbaasServiceKafkaAuthenticationMinusMethods) SetCertificate(val OptBool) {
	s.Certificate = val
}

// SetSasl sets the value of Sasl.
func (s *DbaasServiceKafkaAuthenticationMinusMethods) SetSasl(val OptBool) {
	s.Sasl = val
}

type DbaasServiceKafkaComponentsItem struct {
	// Service component name.
	Component string `json:"component"`
	// DNS name for connecting to the service component.
	Host string `json:"host"`
	// Kafka authentication method. This is a value specific to the 'kafka' service component.
	KafkaMinusAuthenticationMinusMethod OptEnumKafkaAuthMethod `json:"kafka-authentication-method"`
	// Port number for connecting to the service component.
	Port int64 `json:"port"`
	// Network access route.
	Route EnumComponentRoute `json:"route"`
	// DNS usage name.
	Usage EnumComponentUsage `json:"usage"`
}

// GetComponent returns the value of Component.
func (s *DbaasServiceKafkaComponentsItem) GetComponent() string {
	return s.Component
}

// GetHost returns the value of Host.
func (s *DbaasServiceKafkaComponentsItem) GetHost() string {
	return s.Host
}

// GetKafkaMinusAuthenticationMinusMethod returns the value of KafkaMinusAuthenticationMinusMethod.
func (s *DbaasServiceKafkaComponentsItem) GetKafkaMinusAuthenticationMinusMethod() OptEnumKafkaAuthMethod {
	return s.KafkaMinusAuthenticationMinusMethod
}

// GetPort returns the value of Port.
func (s *DbaasServiceKafkaComponentsItem) GetPort() int64 {
	return s.Port
}

// GetRoute returns the value of Route.
func (s *DbaasServiceKafkaComponentsItem) GetRoute() EnumComponentRoute {
	return s.Route
}

// GetUsage returns the value of Usage.
func (s *DbaasServiceKafkaComponentsItem) GetUsage() EnumComponentUsage {
	return s.Usage
}

// SetComponent sets the value of Component.
func (s *DbaasServiceKafkaComponentsItem) SetComponent(val string) {
	s.Component = val
}

// SetHost sets the value of Host.
func (s *DbaasServiceKafkaComponentsItem) SetHost(val string) {
	s.Host = val
}

// SetKafkaMinusAuthenticationMinusMethod sets the value of KafkaMinusAuthenticationMinusMethod.
func (s *DbaasServiceKafkaComponentsItem) SetKafkaMinusAuthenticationMinusMethod(val OptEnumKafkaAuthMethod) {
	s.KafkaMinusAuthenticationMinusMethod = val
}

// SetPort sets the value of Port.
func (s *DbaasServiceKafkaComponentsItem) SetPort(val int64) {
	s.Port = val
}

// SetRoute sets the value of Route.
func (s *DbaasServiceKafkaComponentsItem) SetRoute(val EnumComponentRoute) {
	s.Route = val
}

// SetUsage sets the value of Usage.
func (s *DbaasServiceKafkaComponentsItem) SetUsage(val EnumComponentUsage) {
	s.Usage = val
}

// Kafka connection information properties.
type DbaasServiceKafkaConnectionMinusInfo struct {
	Nodes            []string  `json:"nodes"`
	AccessMinusCert  OptString `json:"access-cert"`
	AccessMinusKey   OptString `json:"access-key"`
	ConnectMinusURI  OptString `json:"connect-uri"`
	RestMinusURI     OptString `json:"rest-uri"`
	RegistryMinusURI OptString `json:"registry-uri"`
}

// GetNodes returns the value of Nodes.
func (s *DbaasServiceKafkaConnectionMinusInfo) GetNodes() []string {
	return s.Nodes
}

// GetAccessMinusCert returns the value of AccessMinusCert.
func (s *DbaasServiceKafkaConnectionMinusInfo) GetAccessMinusCert() OptString {
	return s.AccessMinusCert
}

// GetAccessMinusKey returns the value of AccessMinusKey.
func (s *DbaasServiceKafkaConnectionMinusInfo) GetAccessMinusKey() OptString {
	return s.AccessMinusKey
}

// GetConnectMinusURI returns the value of ConnectMinusURI.
func (s *DbaasServiceKafkaConnectionMinusInfo) GetConnectMinusURI() OptString {
	return s.ConnectMinusURI
}

// GetRestMinusURI returns the value of RestMinusURI.
func (s *DbaasServiceKafkaConnectionMinusInfo) GetRestMinusURI() OptString {
	return s.RestMinusURI
}

// GetRegistryMinusURI returns the value of RegistryMinusURI.
func (s *DbaasServiceKafkaConnectionMinusInfo) GetRegistryMinusURI() OptString {
	return s.RegistryMinusURI
}

// SetNodes sets the value of Nodes.
func (s *DbaasServiceKafkaConnectionMinusInfo) SetNodes(val []string) {
	s.Nodes = val
}

// SetAccessMinusCert sets the value of AccessMinusCert.
func (s *DbaasServiceKafkaConnectionMinusInfo) SetAccessMinusCert(val OptString) {
	s.AccessMinusCert = val
}

// SetAccessMinusKey sets the value of AccessMinusKey.
func (s *DbaasServiceKafkaConnectionMinusInfo) SetAccessMinusKey(val OptString) {
	s.AccessMinusKey = val
}

// SetConnectMinusURI sets the value of ConnectMinusURI.
func (s *DbaasServiceKafkaConnectionMinusInfo) SetConnectMinusURI(val OptString) {
	s.ConnectMinusURI = val
}

// SetRestMinusURI sets the value of RestMinusURI.
func (s *DbaasServiceKafkaConnectionMinusInfo) SetRestMinusURI(val OptString) {
	s.RestMinusURI = val
}

// SetRegistryMinusURI sets the value of RegistryMinusURI.
func (s *DbaasServiceKafkaConnectionMinusInfo) SetRegistryMinusURI(val OptString) {
	s.RegistryMinusURI = val
}

// Kafka Connect configuration values.
type DbaasServiceKafkaKafkaMinusConnectMinusSettings struct{}

// Kafka REST configuration.
type DbaasServiceKafkaKafkaMinusRestMinusSettings struct{}

// Kafka-specific settings.
type DbaasServiceKafkaKafkaMinusSettings struct{}

// Schema Registry configuration.
type DbaasServiceKafkaSchemaMinusRegistryMinusSettings struct{}

// Service_uri parameterized into key-value pairs.
type DbaasServiceKafkaURIMinusParams struct{}

type DbaasServiceKafkaUsersItem struct {
	Type                       OptString   `json:"type"`
	Username                   OptString   `json:"username"`
	Password                   OptString   `json:"password"`
	AccessMinusCert            OptString   `json:"access-cert"`
	AccessMinusCertMinusExpiry OptDateTime `json:"access-cert-expiry"`
	AccessMinusKey             OptString   `json:"access-key"`
}

// GetType returns the value of Type.
func (s *DbaasServiceKafkaUsersItem) GetType() OptString {
	return s.Type
}

// GetUsername returns the value of Username.
func (s *DbaasServiceKafkaUsersItem) GetUsername() OptString {
	return s.Username
}

// GetPassword returns the value of Password.
func (s *DbaasServiceKafkaUsersItem) GetPassword() OptString {
	return s.Password
}

// GetAccessMinusCert returns the value of AccessMinusCert.
func (s *DbaasServiceKafkaUsersItem) GetAccessMinusCert() OptString {
	return s.AccessMinusCert
}

// GetAccessMinusCertMinusExpiry returns the value of AccessMinusCertMinusExpiry.
func (s *DbaasServiceKafkaUsersItem) GetAccessMinusCertMinusExpiry() OptDateTime {
	return s.AccessMinusCertMinusExpiry
}

// GetAccessMinusKey returns the value of AccessMinusKey.
func (s *DbaasServiceKafkaUsersItem) GetAccessMinusKey() OptString {
	return s.AccessMinusKey
}

// SetType sets the value of Type.
func (s *DbaasServiceKafkaUsersItem) SetType(val OptString) {
	s.Type = val
}

// SetUsername sets the value of Username.
func (s *DbaasServiceKafkaUsersItem) SetUsername(val OptString) {
	s.Username = val
}

// SetPassword sets the value of Password.
func (s *DbaasServiceKafkaUsersItem) SetPassword(val OptString) {
	s.Password = val
}

// SetAccessMinusCert sets the value of AccessMinusCert.
func (s *DbaasServiceKafkaUsersItem) SetAccessMinusCert(val OptString) {
	s.AccessMinusCert = val
}

// SetAccessMinusCertMinusExpiry sets the value of AccessMinusCertMinusExpiry.
func (s *DbaasServiceKafkaUsersItem) SetAccessMinusCertMinusExpiry(val OptDateTime) {
	s.AccessMinusCertMinusExpiry = val
}

// SetAccessMinusKey sets the value of AccessMinusKey.
func (s *DbaasServiceKafkaUsersItem) SetAccessMinusKey(val OptString) {
	s.AccessMinusKey = val
}

// Ref: #/components/schemas/dbaas-service-logs
type DbaasServiceLogs struct {
	Offset                   OptString                  `json:"offset"`
	FirstMinusLogMinusOffset OptString                  `json:"first-log-offset"`
	Logs                     []DbaasServiceLogsLogsItem `json:"logs"`
}

// GetOffset returns the value of Offset.
func (s *DbaasServiceLogs) GetOffset() OptString {
	return s.Offset
}

// GetFirstMinusLogMinusOffset returns the value of FirstMinusLogMinusOffset.
func (s *DbaasServiceLogs) GetFirstMinusLogMinusOffset() OptString {
	return s.FirstMinusLogMinusOffset
}

// GetLogs returns the value of Logs.
func (s *DbaasServiceLogs) GetLogs() []DbaasServiceLogsLogsItem {
	return s.Logs
}

// SetOffset sets the value of Offset.
func (s *DbaasServiceLogs) SetOffset(val OptString) {
	s.Offset = val
}

// SetFirstMinusLogMinusOffset sets the value of FirstMinusLogMinusOffset.
func (s *DbaasServiceLogs) SetFirstMinusLogMinusOffset(val OptString) {
	s.FirstMinusLogMinusOffset = val
}

// SetLogs sets the value of Logs.
func (s *DbaasServiceLogs) SetLogs(val []DbaasServiceLogsLogsItem) {
	s.Logs = val
}

type DbaasServiceLogsLogsItem struct {
	Unit    OptString `json:"unit"`
	Time    OptString `json:"time"`
	Message OptString `json:"message"`
	Node    OptString `json:"node"`
}

// GetUnit returns the value of Unit.
func (s *DbaasServiceLogsLogsItem) GetUnit() OptString {
	return s.Unit
}

// GetTime returns the value of Time.
func (s *DbaasServiceLogsLogsItem) GetTime() OptString {
	return s.Time
}

// GetMessage returns the value of Message.
func (s *DbaasServiceLogsLogsItem) GetMessage() OptString {
	return s.Message
}

// GetNode returns the value of Node.
func (s *DbaasServiceLogsLogsItem) GetNode() OptString {
	return s.Node
}

// SetUnit sets the value of Unit.
func (s *DbaasServiceLogsLogsItem) SetUnit(val OptString) {
	s.Unit = val
}

// SetTime sets the value of Time.
func (s *DbaasServiceLogsLogsItem) SetTime(val OptString) {
	s.Time = val
}

// SetMessage sets the value of Message.
func (s *DbaasServiceLogsLogsItem) SetMessage(val OptString) {
	s.Message = val
}

// SetNode sets the value of Node.
func (s *DbaasServiceLogsLogsItem) SetNode(val OptString) {
	s.Node = val
}

// Automatic maintenance settings.
// Ref: #/components/schemas/dbaas-service-maintenance
type DbaasServiceMaintenance struct {
	// Day of week for installing updates.
	Dow DbaasServiceMaintenanceDow `json:"dow"`
	// Time for installing updates, UTC.
	Time string `json:"time"`
	// List of updates waiting to be installed.
	Updates []DbaasServiceUpdate `json:"updates"`
}

// GetDow returns the value of Dow.
func (s *DbaasServiceMaintenance) GetDow() DbaasServiceMaintenanceDow {
	return s.Dow
}

// GetTime returns the value of Time.
func (s *DbaasServiceMaintenance) GetTime() string {
	return s.Time
}

// GetUpdates returns the value of Updates.
func (s *DbaasServiceMaintenance) GetUpdates() []DbaasServiceUpdate {
	return s.Updates
}

// SetDow sets the value of Dow.
func (s *DbaasServiceMaintenance) SetDow(val DbaasServiceMaintenanceDow) {
	s.Dow = val
}

// SetTime sets the value of Time.
func (s *DbaasServiceMaintenance) SetTime(val string) {
	s.Time = val
}

// SetUpdates sets the value of Updates.
func (s *DbaasServiceMaintenance) SetUpdates(val []DbaasServiceUpdate) {
	s.Updates = val
}

// Day of week for installing updates.
type DbaasServiceMaintenanceDow string

const (
	DbaasServiceMaintenanceDowSaturday  DbaasServiceMaintenanceDow = "saturday"
	DbaasServiceMaintenanceDowTuesday   DbaasServiceMaintenanceDow = "tuesday"
	DbaasServiceMaintenanceDowNever     DbaasServiceMaintenanceDow = "never"
	DbaasServiceMaintenanceDowWednesday DbaasServiceMaintenanceDow = "wednesday"
	DbaasServiceMaintenanceDowSunday    DbaasServiceMaintenanceDow = "sunday"
	DbaasServiceMaintenanceDowFriday    DbaasServiceMaintenanceDow = "friday"
	DbaasServiceMaintenanceDowMonday    DbaasServiceMaintenanceDow = "monday"
	DbaasServiceMaintenanceDowThursday  DbaasServiceMaintenanceDow = "thursday"
)

// MarshalText implements encoding.TextMarshaler.
func (s DbaasServiceMaintenanceDow) MarshalText() ([]byte, error) {
	switch s {
	case DbaasServiceMaintenanceDowSaturday:
		return []byte(s), nil
	case DbaasServiceMaintenanceDowTuesday:
		return []byte(s), nil
	case DbaasServiceMaintenanceDowNever:
		return []byte(s), nil
	case DbaasServiceMaintenanceDowWednesday:
		return []byte(s), nil
	case DbaasServiceMaintenanceDowSunday:
		return []byte(s), nil
	case DbaasServiceMaintenanceDowFriday:
		return []byte(s), nil
	case DbaasServiceMaintenanceDowMonday:
		return []byte(s), nil
	case DbaasServiceMaintenanceDowThursday:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *DbaasServiceMaintenanceDow) UnmarshalText(data []byte) error {
	switch DbaasServiceMaintenanceDow(data) {
	case DbaasServiceMaintenanceDowSaturday:
		*s = DbaasServiceMaintenanceDowSaturday
		return nil
	case DbaasServiceMaintenanceDowTuesday:
		*s = DbaasServiceMaintenanceDowTuesday
		return nil
	case DbaasServiceMaintenanceDowNever:
		*s = DbaasServiceMaintenanceDowNever
		return nil
	case DbaasServiceMaintenanceDowWednesday:
		*s = DbaasServiceMaintenanceDowWednesday
		return nil
	case DbaasServiceMaintenanceDowSunday:
		*s = DbaasServiceMaintenanceDowSunday
		return nil
	case DbaasServiceMaintenanceDowFriday:
		*s = DbaasServiceMaintenanceDowFriday
		return nil
	case DbaasServiceMaintenanceDowMonday:
		*s = DbaasServiceMaintenanceDowMonday
		return nil
	case DbaasServiceMaintenanceDowThursday:
		*s = DbaasServiceMaintenanceDowThursday
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/dbaas-service-mysql
type DbaasServiceMysql struct {
	// Service last update timestamp (ISO 8601).
	UpdatedMinusAt OptDateTime `json:"updated-at"`
	// Number of service nodes in the active plan.
	NodeMinusCount OptInt64 `json:"node-count"`
	// MySQL connection information properties.
	ConnectionMinusInfo OptDbaasServiceMysqlConnectionMinusInfo `json:"connection-info"`
	// Backup schedule.
	BackupMinusSchedule OptDbaasServiceMysqlBackupMinusSchedule `json:"backup-schedule"`
	// Number of CPUs for each node.
	NodeMinusCPUMinusCount OptInt64 `json:"node-cpu-count"`
	// Service integrations.
	Integrations []DbaasIntegration `json:"integrations"`
	// State of individual service nodes.
	NodeMinusStates []DbaasNodeState `json:"node-states"`
	// Service name.
	Name DbaasServiceName `json:"name"`
	// Service type code.
	Type DbaasServiceTypeName `json:"type"`
	// State of the service.
	State OptEnumServiceState `json:"state"`
	// Allowed CIDR address blocks for incoming connections.
	IPMinusFilter []string `json:"ip-filter"`
	// List of backups for the service.
	Backups []DbaasServiceBackup `json:"backups"`
	// Service is protected against termination and powering off.
	TerminationMinusProtection OptBool `json:"termination-protection"`
	// Service notifications.
	Notifications []DbaasServiceNotification `json:"notifications"`
	// Service component information objects.
	Components []DbaasServiceMysqlComponentsItem `json:"components"`
	// MySQL-specific settings.
	MysqlMinusSettings *DbaasServiceMysqlMysqlMinusSettings `json:"mysql-settings"`
	// Automatic maintenance settings.
	Maintenance OptDbaasServiceMaintenance `json:"maintenance"`
	// TODO UNIT disk space for data storage.
	DiskMinusSize OptInt64 `json:"disk-size"`
	// TODO UNIT of memory for each node.
	NodeMinusMemory OptInt64 `json:"node-memory"`
	// URI for connecting to the service (may be absent).
	URI OptString `json:"uri"`
	// Service_uri parameterized into key-value pairs.
	URIMinusParams *DbaasServiceMysqlURIMinusParams `json:"uri-params"`
	// MySQL version.
	Version OptString `json:"version"`
	// Service creation timestamp (ISO 8601).
	CreatedMinusAt OptDateTime `json:"created-at"`
	// Subscription plan.
	Plan string `json:"plan"`
	// List of service users.
	Users []DbaasServiceMysqlUsersItem `json:"users"`
}

// GetUpdatedMinusAt returns the value of UpdatedMinusAt.
func (s *DbaasServiceMysql) GetUpdatedMinusAt() OptDateTime {
	return s.UpdatedMinusAt
}

// GetNodeMinusCount returns the value of NodeMinusCount.
func (s *DbaasServiceMysql) GetNodeMinusCount() OptInt64 {
	return s.NodeMinusCount
}

// GetConnectionMinusInfo returns the value of ConnectionMinusInfo.
func (s *DbaasServiceMysql) GetConnectionMinusInfo() OptDbaasServiceMysqlConnectionMinusInfo {
	return s.ConnectionMinusInfo
}

// GetBackupMinusSchedule returns the value of BackupMinusSchedule.
func (s *DbaasServiceMysql) GetBackupMinusSchedule() OptDbaasServiceMysqlBackupMinusSchedule {
	return s.BackupMinusSchedule
}

// GetNodeMinusCPUMinusCount returns the value of NodeMinusCPUMinusCount.
func (s *DbaasServiceMysql) GetNodeMinusCPUMinusCount() OptInt64 {
	return s.NodeMinusCPUMinusCount
}

// GetIntegrations returns the value of Integrations.
func (s *DbaasServiceMysql) GetIntegrations() []DbaasIntegration {
	return s.Integrations
}

// GetNodeMinusStates returns the value of NodeMinusStates.
func (s *DbaasServiceMysql) GetNodeMinusStates() []DbaasNodeState {
	return s.NodeMinusStates
}

// GetName returns the value of Name.
func (s *DbaasServiceMysql) GetName() DbaasServiceName {
	return s.Name
}

// GetType returns the value of Type.
func (s *DbaasServiceMysql) GetType() DbaasServiceTypeName {
	return s.Type
}

// GetState returns the value of State.
func (s *DbaasServiceMysql) GetState() OptEnumServiceState {
	return s.State
}

// GetIPMinusFilter returns the value of IPMinusFilter.
func (s *DbaasServiceMysql) GetIPMinusFilter() []string {
	return s.IPMinusFilter
}

// GetBackups returns the value of Backups.
func (s *DbaasServiceMysql) GetBackups() []DbaasServiceBackup {
	return s.Backups
}

// GetTerminationMinusProtection returns the value of TerminationMinusProtection.
func (s *DbaasServiceMysql) GetTerminationMinusProtection() OptBool {
	return s.TerminationMinusProtection
}

// GetNotifications returns the value of Notifications.
func (s *DbaasServiceMysql) GetNotifications() []DbaasServiceNotification {
	return s.Notifications
}

// GetComponents returns the value of Components.
func (s *DbaasServiceMysql) GetComponents() []DbaasServiceMysqlComponentsItem {
	return s.Components
}

// GetMysqlMinusSettings returns the value of MysqlMinusSettings.
func (s *DbaasServiceMysql) GetMysqlMinusSettings() *DbaasServiceMysqlMysqlMinusSettings {
	return s.MysqlMinusSettings
}

// GetMaintenance returns the value of Maintenance.
func (s *DbaasServiceMysql) GetMaintenance() OptDbaasServiceMaintenance {
	return s.Maintenance
}

// GetDiskMinusSize returns the value of DiskMinusSize.
func (s *DbaasServiceMysql) GetDiskMinusSize() OptInt64 {
	return s.DiskMinusSize
}

// GetNodeMinusMemory returns the value of NodeMinusMemory.
func (s *DbaasServiceMysql) GetNodeMinusMemory() OptInt64 {
	return s.NodeMinusMemory
}

// GetURI returns the value of URI.
func (s *DbaasServiceMysql) GetURI() OptString {
	return s.URI
}

// GetURIMinusParams returns the value of URIMinusParams.
func (s *DbaasServiceMysql) GetURIMinusParams() *DbaasServiceMysqlURIMinusParams {
	return s.URIMinusParams
}

// GetVersion returns the value of Version.
func (s *DbaasServiceMysql) GetVersion() OptString {
	return s.Version
}

// GetCreatedMinusAt returns the value of CreatedMinusAt.
func (s *DbaasServiceMysql) GetCreatedMinusAt() OptDateTime {
	return s.CreatedMinusAt
}

// GetPlan returns the value of Plan.
func (s *DbaasServiceMysql) GetPlan() string {
	return s.Plan
}

// GetUsers returns the value of Users.
func (s *DbaasServiceMysql) GetUsers() []DbaasServiceMysqlUsersItem {
	return s.Users
}

// SetUpdatedMinusAt sets the value of UpdatedMinusAt.
func (s *DbaasServiceMysql) SetUpdatedMinusAt(val OptDateTime) {
	s.UpdatedMinusAt = val
}

// SetNodeMinusCount sets the value of NodeMinusCount.
func (s *DbaasServiceMysql) SetNodeMinusCount(val OptInt64) {
	s.NodeMinusCount = val
}

// SetConnectionMinusInfo sets the value of ConnectionMinusInfo.
func (s *DbaasServiceMysql) SetConnectionMinusInfo(val OptDbaasServiceMysqlConnectionMinusInfo) {
	s.ConnectionMinusInfo = val
}

// SetBackupMinusSchedule sets the value of BackupMinusSchedule.
func (s *DbaasServiceMysql) SetBackupMinusSchedule(val OptDbaasServiceMysqlBackupMinusSchedule) {
	s.BackupMinusSchedule = val
}

// SetNodeMinusCPUMinusCount sets the value of NodeMinusCPUMinusCount.
func (s *DbaasServiceMysql) SetNodeMinusCPUMinusCount(val OptInt64) {
	s.NodeMinusCPUMinusCount = val
}

// SetIntegrations sets the value of Integrations.
func (s *DbaasServiceMysql) SetIntegrations(val []DbaasIntegration) {
	s.Integrations = val
}

// SetNodeMinusStates sets the value of NodeMinusStates.
func (s *DbaasServiceMysql) SetNodeMinusStates(val []DbaasNodeState) {
	s.NodeMinusStates = val
}

// SetName sets the value of Name.
func (s *DbaasServiceMysql) SetName(val DbaasServiceName) {
	s.Name = val
}

// SetType sets the value of Type.
func (s *DbaasServiceMysql) SetType(val DbaasServiceTypeName) {
	s.Type = val
}

// SetState sets the value of State.
func (s *DbaasServiceMysql) SetState(val OptEnumServiceState) {
	s.State = val
}

// SetIPMinusFilter sets the value of IPMinusFilter.
func (s *DbaasServiceMysql) SetIPMinusFilter(val []string) {
	s.IPMinusFilter = val
}

// SetBackups sets the value of Backups.
func (s *DbaasServiceMysql) SetBackups(val []DbaasServiceBackup) {
	s.Backups = val
}

// SetTerminationMinusProtection sets the value of TerminationMinusProtection.
func (s *DbaasServiceMysql) SetTerminationMinusProtection(val OptBool) {
	s.TerminationMinusProtection = val
}

// SetNotifications sets the value of Notifications.
func (s *DbaasServiceMysql) SetNotifications(val []DbaasServiceNotification) {
	s.Notifications = val
}

// SetComponents sets the value of Components.
func (s *DbaasServiceMysql) SetComponents(val []DbaasServiceMysqlComponentsItem) {
	s.Components = val
}

// SetMysqlMinusSettings sets the value of MysqlMinusSettings.
func (s *DbaasServiceMysql) SetMysqlMinusSettings(val *DbaasServiceMysqlMysqlMinusSettings) {
	s.MysqlMinusSettings = val
}

// SetMaintenance sets the value of Maintenance.
func (s *DbaasServiceMysql) SetMaintenance(val OptDbaasServiceMaintenance) {
	s.Maintenance = val
}

// SetDiskMinusSize sets the value of DiskMinusSize.
func (s *DbaasServiceMysql) SetDiskMinusSize(val OptInt64) {
	s.DiskMinusSize = val
}

// SetNodeMinusMemory sets the value of NodeMinusMemory.
func (s *DbaasServiceMysql) SetNodeMinusMemory(val OptInt64) {
	s.NodeMinusMemory = val
}

// SetURI sets the value of URI.
func (s *DbaasServiceMysql) SetURI(val OptString) {
	s.URI = val
}

// SetURIMinusParams sets the value of URIMinusParams.
func (s *DbaasServiceMysql) SetURIMinusParams(val *DbaasServiceMysqlURIMinusParams) {
	s.URIMinusParams = val
}

// SetVersion sets the value of Version.
func (s *DbaasServiceMysql) SetVersion(val OptString) {
	s.Version = val
}

// SetCreatedMinusAt sets the value of CreatedMinusAt.
func (s *DbaasServiceMysql) SetCreatedMinusAt(val OptDateTime) {
	s.CreatedMinusAt = val
}

// SetPlan sets the value of Plan.
func (s *DbaasServiceMysql) SetPlan(val string) {
	s.Plan = val
}

// SetUsers sets the value of Users.
func (s *DbaasServiceMysql) SetUsers(val []DbaasServiceMysqlUsersItem) {
	s.Users = val
}

// Backup schedule.
type DbaasServiceMysqlBackupMinusSchedule struct {
	// The hour of day (in UTC) when backup for the service is started. New backup is only started if
	// previous backup has already completed.
	BackupMinusHour OptInt64 `json:"backup-hour"`
	// The minute of an hour when backup for the service is started. New backup is only started if
	// previous backup has already completed.
	BackupMinusMinute OptInt64 `json:"backup-minute"`
}

// GetBackupMinusHour returns the value of BackupMinusHour.
func (s *DbaasServiceMysqlBackupMinusSchedule) GetBackupMinusHour() OptInt64 {
	return s.BackupMinusHour
}

// GetBackupMinusMinute returns the value of BackupMinusMinute.
func (s *DbaasServiceMysqlBackupMinusSchedule) GetBackupMinusMinute() OptInt64 {
	return s.BackupMinusMinute
}

// SetBackupMinusHour sets the value of BackupMinusHour.
func (s *DbaasServiceMysqlBackupMinusSchedule) SetBackupMinusHour(val OptInt64) {
	s.BackupMinusHour = val
}

// SetBackupMinusMinute sets the value of BackupMinusMinute.
func (s *DbaasServiceMysqlBackupMinusSchedule) SetBackupMinusMinute(val OptInt64) {
	s.BackupMinusMinute = val
}

type DbaasServiceMysqlComponentsItem struct {
	// Service component name.
	Component string `json:"component"`
	// DNS name for connecting to the service component.
	Host string `json:"host"`
	// Port number for connecting to the service component.
	Port int64 `json:"port"`
	// Network access route.
	Route EnumComponentRoute `json:"route"`
	// DNS usage name.
	Usage EnumComponentUsage `json:"usage"`
}

// GetComponent returns the value of Component.
func (s *DbaasServiceMysqlComponentsItem) GetComponent() string {
	return s.Component
}

// GetHost returns the value of Host.
func (s *DbaasServiceMysqlComponentsItem) GetHost() string {
	return s.Host
}

// GetPort returns the value of Port.
func (s *DbaasServiceMysqlComponentsItem) GetPort() int64 {
	return s.Port
}

// GetRoute returns the value of Route.
func (s *DbaasServiceMysqlComponentsItem) GetRoute() EnumComponentRoute {
	return s.Route
}

// GetUsage returns the value of Usage.
func (s *DbaasServiceMysqlComponentsItem) GetUsage() EnumComponentUsage {
	return s.Usage
}

// SetComponent sets the value of Component.
func (s *DbaasServiceMysqlComponentsItem) SetComponent(val string) {
	s.Component = val
}

// SetHost sets the value of Host.
func (s *DbaasServiceMysqlComponentsItem) SetHost(val string) {
	s.Host = val
}

// SetPort sets the value of Port.
func (s *DbaasServiceMysqlComponentsItem) SetPort(val int64) {
	s.Port = val
}

// SetRoute sets the value of Route.
func (s *DbaasServiceMysqlComponentsItem) SetRoute(val EnumComponentRoute) {
	s.Route = val
}

// SetUsage sets the value of Usage.
func (s *DbaasServiceMysqlComponentsItem) SetUsage(val EnumComponentUsage) {
	s.Usage = val
}

// MySQL connection information properties.
type DbaasServiceMysqlConnectionMinusInfo struct {
	URI     []string                                         `json:"uri"`
	Params  []DbaasServiceMysqlConnectionMinusInfoParamsItem `json:"params"`
	Standby []string                                         `json:"standby"`
}

// GetURI returns the value of URI.
func (s *DbaasServiceMysqlConnectionMinusInfo) GetURI() []string {
	return s.URI
}

// GetParams returns the value of Params.
func (s *DbaasServiceMysqlConnectionMinusInfo) GetParams() []DbaasServiceMysqlConnectionMinusInfoParamsItem {
	return s.Params
}

// GetStandby returns the value of Standby.
func (s *DbaasServiceMysqlConnectionMinusInfo) GetStandby() []string {
	return s.Standby
}

// SetURI sets the value of URI.
func (s *DbaasServiceMysqlConnectionMinusInfo) SetURI(val []string) {
	s.URI = val
}

// SetParams sets the value of Params.
func (s *DbaasServiceMysqlConnectionMinusInfo) SetParams(val []DbaasServiceMysqlConnectionMinusInfoParamsItem) {
	s.Params = val
}

// SetStandby sets the value of Standby.
func (s *DbaasServiceMysqlConnectionMinusInfo) SetStandby(val []string) {
	s.Standby = val
}

type DbaasServiceMysqlConnectionMinusInfoParamsItem map[string]string

func (s *DbaasServiceMysqlConnectionMinusInfoParamsItem) init() DbaasServiceMysqlConnectionMinusInfoParamsItem {
	m := *s
	if m == nil {
		m = map[string]string{}
		*s = m
	}
	return m
}

// MySQL-specific settings.
type DbaasServiceMysqlMysqlMinusSettings struct{}

// Service_uri parameterized into key-value pairs.
type DbaasServiceMysqlURIMinusParams struct{}

type DbaasServiceMysqlUsersItem struct {
	Type           OptString `json:"type"`
	Username       OptString `json:"username"`
	Password       OptString `json:"password"`
	Authentication OptString `json:"authentication"`
}

// GetType returns the value of Type.
func (s *DbaasServiceMysqlUsersItem) GetType() OptString {
	return s.Type
}

// GetUsername returns the value of Username.
func (s *DbaasServiceMysqlUsersItem) GetUsername() OptString {
	return s.Username
}

// GetPassword returns the value of Password.
func (s *DbaasServiceMysqlUsersItem) GetPassword() OptString {
	return s.Password
}

// GetAuthentication returns the value of Authentication.
func (s *DbaasServiceMysqlUsersItem) GetAuthentication() OptString {
	return s.Authentication
}

// SetType sets the value of Type.
func (s *DbaasServiceMysqlUsersItem) SetType(val OptString) {
	s.Type = val
}

// SetUsername sets the value of Username.
func (s *DbaasServiceMysqlUsersItem) SetUsername(val OptString) {
	s.Username = val
}

// SetPassword sets the value of Password.
func (s *DbaasServiceMysqlUsersItem) SetPassword(val OptString) {
	s.Password = val
}

// SetAuthentication sets the value of Authentication.
func (s *DbaasServiceMysqlUsersItem) SetAuthentication(val OptString) {
	s.Authentication = val
}

type DbaasServiceName string

// Service notifications.
// Ref: #/components/schemas/dbaas-service-notification
type DbaasServiceNotification struct {
	// Notification level.
	Level DbaasServiceNotificationLevel `json:"level"`
	// Human notification message.
	Message string `json:"message"`
	// Notification type.
	Type DbaasServiceNotificationType `json:"type"`
	// Notification type.
	Metadata DbaasServiceNotificationMetadata `json:"metadata"`
}

// GetLevel returns the value of Level.
func (s *DbaasServiceNotification) GetLevel() DbaasServiceNotificationLevel {
	return s.Level
}

// GetMessage returns the value of Message.
func (s *DbaasServiceNotification) GetMessage() string {
	return s.Message
}

// GetType returns the value of Type.
func (s *DbaasServiceNotification) GetType() DbaasServiceNotificationType {
	return s.Type
}

// GetMetadata returns the value of Metadata.
func (s *DbaasServiceNotification) GetMetadata() DbaasServiceNotificationMetadata {
	return s.Metadata
}

// SetLevel sets the value of Level.
func (s *DbaasServiceNotification) SetLevel(val DbaasServiceNotificationLevel) {
	s.Level = val
}

// SetMessage sets the value of Message.
func (s *DbaasServiceNotification) SetMessage(val string) {
	s.Message = val
}

// SetType sets the value of Type.
func (s *DbaasServiceNotification) SetType(val DbaasServiceNotificationType) {
	s.Type = val
}

// SetMetadata sets the value of Metadata.
func (s *DbaasServiceNotification) SetMetadata(val DbaasServiceNotificationMetadata) {
	s.Metadata = val
}

// Notification level.
type DbaasServiceNotificationLevel string

const (
	DbaasServiceNotificationLevelWarning DbaasServiceNotificationLevel = "warning"
	DbaasServiceNotificationLevelNotice  DbaasServiceNotificationLevel = "notice"
)

// MarshalText implements encoding.TextMarshaler.
func (s DbaasServiceNotificationLevel) MarshalText() ([]byte, error) {
	switch s {
	case DbaasServiceNotificationLevelWarning:
		return []byte(s), nil
	case DbaasServiceNotificationLevelNotice:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *DbaasServiceNotificationLevel) UnmarshalText(data []byte) error {
	switch DbaasServiceNotificationLevel(data) {
	case DbaasServiceNotificationLevelWarning:
		*s = DbaasServiceNotificationLevelWarning
		return nil
	case DbaasServiceNotificationLevelNotice:
		*s = DbaasServiceNotificationLevelNotice
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Notification type.
type DbaasServiceNotificationMetadata struct{}

// Notification type.
type DbaasServiceNotificationType string

const (
	DbaasServiceNotificationTypeServicePoweredOffRemoval DbaasServiceNotificationType = "service_powered_off_removal"
	DbaasServiceNotificationTypeServiceEndOfLife         DbaasServiceNotificationType = "service_end_of_life"
)

// MarshalText implements encoding.TextMarshaler.
func (s DbaasServiceNotificationType) MarshalText() ([]byte, error) {
	switch s {
	case DbaasServiceNotificationTypeServicePoweredOffRemoval:
		return []byte(s), nil
	case DbaasServiceNotificationTypeServiceEndOfLife:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *DbaasServiceNotificationType) UnmarshalText(data []byte) error {
	switch DbaasServiceNotificationType(data) {
	case DbaasServiceNotificationTypeServicePoweredOffRemoval:
		*s = DbaasServiceNotificationTypeServicePoweredOffRemoval
		return nil
	case DbaasServiceNotificationTypeServiceEndOfLife:
		*s = DbaasServiceNotificationTypeServiceEndOfLife
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/dbaas-service-opensearch
type DbaasServiceOpensearch struct {
	// DbaaS service description.
	Description OptString `json:"description"`
	// Maximum number of indexes to keep before deleting the oldest one.
	MaxMinusIndexMinusCount OptInt64 `json:"max-index-count"`
	// Service last update timestamp (ISO 8601).
	UpdatedMinusAt OptDateTime `json:"updated-at"`
	// Number of service nodes in the active plan.
	NodeMinusCount OptInt64 `json:"node-count"`
	// Opensearch connection information properties.
	ConnectionMinusInfo OptDbaasServiceOpensearchConnectionMinusInfo `json:"connection-info"`
	// Number of CPUs for each node.
	NodeMinusCPUMinusCount OptInt64 `json:"node-cpu-count"`
	// Service integrations.
	Integrations []DbaasIntegration `json:"integrations"`
	// State of individual service nodes.
	NodeMinusStates []DbaasNodeState `json:"node-states"`
	// Service name.
	Name DbaasServiceName `json:"name"`
	// Aiven automation resets index.refresh_interval to default value for every index to be sure that
	// indices are always visible to search. If it doesn't fit your case, you can disable this by setting
	// up this flag to true.
	KeepMinusIndexMinusRefreshMinusInterval OptBool `json:"keep-index-refresh-interval"`
	// Service type code.
	Type DbaasServiceTypeName `json:"type"`
	// State of the service.
	State OptEnumServiceState `json:"state"`
	// Allowed CIDR address blocks for incoming connections.
	IPMinusFilter []string `json:"ip-filter"`
	// List of backups for the service.
	Backups []DbaasServiceBackup `json:"backups"`
	// Service is protected against termination and powering off.
	TerminationMinusProtection OptBool `json:"termination-protection"`
	// Service notifications.
	Notifications []DbaasServiceNotification `json:"notifications"`
	// Service component information objects.
	Components []DbaasServiceOpensearchComponentsItem `json:"components"`
	// Allows you to create glob style patterns and set a max number of indexes matching this pattern you
	// want to keep. Creating indexes exceeding this value will cause the oldest one to get deleted. You
	// could for example create a pattern looking like 'logs.?' and then create index logs.1, logs.2 etc,
	// it will delete logs.1 once you create logs.6. Do note 'logs.?' does not apply to logs.10. Note:
	// Setting max_index_count to 0 will do nothing and the pattern gets ignored.
	IndexMinusPatterns []DbaasServiceOpensearchIndexMinusPatternsItem `json:"index-patterns"`
	// Automatic maintenance settings.
	Maintenance OptDbaasServiceMaintenance `json:"maintenance"`
	// Template settings for all new indexes.
	IndexMinusTemplate OptDbaasServiceOpensearchIndexMinusTemplate `json:"index-template"`
	// TODO UNIT disk space for data storage.
	DiskMinusSize OptInt64 `json:"disk-size"`
	// TODO UNIT of memory for each node.
	NodeMinusMemory OptInt64 `json:"node-memory"`
	// URI for connecting to the service (may be absent).
	URI OptString `json:"uri"`
	// OpenSearch-specific settings.
	OpensearchMinusSettings *DbaasServiceOpensearchOpensearchMinusSettings `json:"opensearch-settings"`
	// Service_uri parameterized into key-value pairs.
	URIMinusParams *DbaasServiceOpensearchURIMinusParams `json:"uri-params"`
	// OpenSearch version.
	Version OptString `json:"version"`
	// Service creation timestamp (ISO 8601).
	CreatedMinusAt OptDateTime `json:"created-at"`
	// Subscription plan.
	Plan string `json:"plan"`
	// OpenSearch Dashboards settings.
	OpensearchMinusDashboards OptDbaasServiceOpensearchOpensearchMinusDashboards `json:"opensearch-dashboards"`
	// List of service users.
	Users []DbaasServiceOpensearchUsersItem `json:"users"`
}

// GetDescription returns the value of Description.
func (s *DbaasServiceOpensearch) GetDescription() OptString {
	return s.Description
}

// GetMaxMinusIndexMinusCount returns the value of MaxMinusIndexMinusCount.
func (s *DbaasServiceOpensearch) GetMaxMinusIndexMinusCount() OptInt64 {
	return s.MaxMinusIndexMinusCount
}

// GetUpdatedMinusAt returns the value of UpdatedMinusAt.
func (s *DbaasServiceOpensearch) GetUpdatedMinusAt() OptDateTime {
	return s.UpdatedMinusAt
}

// GetNodeMinusCount returns the value of NodeMinusCount.
func (s *DbaasServiceOpensearch) GetNodeMinusCount() OptInt64 {
	return s.NodeMinusCount
}

// GetConnectionMinusInfo returns the value of ConnectionMinusInfo.
func (s *DbaasServiceOpensearch) GetConnectionMinusInfo() OptDbaasServiceOpensearchConnectionMinusInfo {
	return s.ConnectionMinusInfo
}

// GetNodeMinusCPUMinusCount returns the value of NodeMinusCPUMinusCount.
func (s *DbaasServiceOpensearch) GetNodeMinusCPUMinusCount() OptInt64 {
	return s.NodeMinusCPUMinusCount
}

// GetIntegrations returns the value of Integrations.
func (s *DbaasServiceOpensearch) GetIntegrations() []DbaasIntegration {
	return s.Integrations
}

// GetNodeMinusStates returns the value of NodeMinusStates.
func (s *DbaasServiceOpensearch) GetNodeMinusStates() []DbaasNodeState {
	return s.NodeMinusStates
}

// GetName returns the value of Name.
func (s *DbaasServiceOpensearch) GetName() DbaasServiceName {
	return s.Name
}

// GetKeepMinusIndexMinusRefreshMinusInterval returns the value of KeepMinusIndexMinusRefreshMinusInterval.
func (s *DbaasServiceOpensearch) GetKeepMinusIndexMinusRefreshMinusInterval() OptBool {
	return s.KeepMinusIndexMinusRefreshMinusInterval
}

// GetType returns the value of Type.
func (s *DbaasServiceOpensearch) GetType() DbaasServiceTypeName {
	return s.Type
}

// GetState returns the value of State.
func (s *DbaasServiceOpensearch) GetState() OptEnumServiceState {
	return s.State
}

// GetIPMinusFilter returns the value of IPMinusFilter.
func (s *DbaasServiceOpensearch) GetIPMinusFilter() []string {
	return s.IPMinusFilter
}

// GetBackups returns the value of Backups.
func (s *DbaasServiceOpensearch) GetBackups() []DbaasServiceBackup {
	return s.Backups
}

// GetTerminationMinusProtection returns the value of TerminationMinusProtection.
func (s *DbaasServiceOpensearch) GetTerminationMinusProtection() OptBool {
	return s.TerminationMinusProtection
}

// GetNotifications returns the value of Notifications.
func (s *DbaasServiceOpensearch) GetNotifications() []DbaasServiceNotification {
	return s.Notifications
}

// GetComponents returns the value of Components.
func (s *DbaasServiceOpensearch) GetComponents() []DbaasServiceOpensearchComponentsItem {
	return s.Components
}

// GetIndexMinusPatterns returns the value of IndexMinusPatterns.
func (s *DbaasServiceOpensearch) GetIndexMinusPatterns() []DbaasServiceOpensearchIndexMinusPatternsItem {
	return s.IndexMinusPatterns
}

// GetMaintenance returns the value of Maintenance.
func (s *DbaasServiceOpensearch) GetMaintenance() OptDbaasServiceMaintenance {
	return s.Maintenance
}

// GetIndexMinusTemplate returns the value of IndexMinusTemplate.
func (s *DbaasServiceOpensearch) GetIndexMinusTemplate() OptDbaasServiceOpensearchIndexMinusTemplate {
	return s.IndexMinusTemplate
}

// GetDiskMinusSize returns the value of DiskMinusSize.
func (s *DbaasServiceOpensearch) GetDiskMinusSize() OptInt64 {
	return s.DiskMinusSize
}

// GetNodeMinusMemory returns the value of NodeMinusMemory.
func (s *DbaasServiceOpensearch) GetNodeMinusMemory() OptInt64 {
	return s.NodeMinusMemory
}

// GetURI returns the value of URI.
func (s *DbaasServiceOpensearch) GetURI() OptString {
	return s.URI
}

// GetOpensearchMinusSettings returns the value of OpensearchMinusSettings.
func (s *DbaasServiceOpensearch) GetOpensearchMinusSettings() *DbaasServiceOpensearchOpensearchMinusSettings {
	return s.OpensearchMinusSettings
}

// GetURIMinusParams returns the value of URIMinusParams.
func (s *DbaasServiceOpensearch) GetURIMinusParams() *DbaasServiceOpensearchURIMinusParams {
	return s.URIMinusParams
}

// GetVersion returns the value of Version.
func (s *DbaasServiceOpensearch) GetVersion() OptString {
	return s.Version
}

// GetCreatedMinusAt returns the value of CreatedMinusAt.
func (s *DbaasServiceOpensearch) GetCreatedMinusAt() OptDateTime {
	return s.CreatedMinusAt
}

// GetPlan returns the value of Plan.
func (s *DbaasServiceOpensearch) GetPlan() string {
	return s.Plan
}

// GetOpensearchMinusDashboards returns the value of OpensearchMinusDashboards.
func (s *DbaasServiceOpensearch) GetOpensearchMinusDashboards() OptDbaasServiceOpensearchOpensearchMinusDashboards {
	return s.OpensearchMinusDashboards
}

// GetUsers returns the value of Users.
func (s *DbaasServiceOpensearch) GetUsers() []DbaasServiceOpensearchUsersItem {
	return s.Users
}

// SetDescription sets the value of Description.
func (s *DbaasServiceOpensearch) SetDescription(val OptString) {
	s.Description = val
}

// SetMaxMinusIndexMinusCount sets the value of MaxMinusIndexMinusCount.
func (s *DbaasServiceOpensearch) SetMaxMinusIndexMinusCount(val OptInt64) {
	s.MaxMinusIndexMinusCount = val
}

// SetUpdatedMinusAt sets the value of UpdatedMinusAt.
func (s *DbaasServiceOpensearch) SetUpdatedMinusAt(val OptDateTime) {
	s.UpdatedMinusAt = val
}

// SetNodeMinusCount sets the value of NodeMinusCount.
func (s *DbaasServiceOpensearch) SetNodeMinusCount(val OptInt64) {
	s.NodeMinusCount = val
}

// SetConnectionMinusInfo sets the value of ConnectionMinusInfo.
func (s *DbaasServiceOpensearch) SetConnectionMinusInfo(val OptDbaasServiceOpensearchConnectionMinusInfo) {
	s.ConnectionMinusInfo = val
}

// SetNodeMinusCPUMinusCount sets the value of NodeMinusCPUMinusCount.
func (s *DbaasServiceOpensearch) SetNodeMinusCPUMinusCount(val OptInt64) {
	s.NodeMinusCPUMinusCount = val
}

// SetIntegrations sets the value of Integrations.
func (s *DbaasServiceOpensearch) SetIntegrations(val []DbaasIntegration) {
	s.Integrations = val
}

// SetNodeMinusStates sets the value of NodeMinusStates.
func (s *DbaasServiceOpensearch) SetNodeMinusStates(val []DbaasNodeState) {
	s.NodeMinusStates = val
}

// SetName sets the value of Name.
func (s *DbaasServiceOpensearch) SetName(val DbaasServiceName) {
	s.Name = val
}

// SetKeepMinusIndexMinusRefreshMinusInterval sets the value of KeepMinusIndexMinusRefreshMinusInterval.
func (s *DbaasServiceOpensearch) SetKeepMinusIndexMinusRefreshMinusInterval(val OptBool) {
	s.KeepMinusIndexMinusRefreshMinusInterval = val
}

// SetType sets the value of Type.
func (s *DbaasServiceOpensearch) SetType(val DbaasServiceTypeName) {
	s.Type = val
}

// SetState sets the value of State.
func (s *DbaasServiceOpensearch) SetState(val OptEnumServiceState) {
	s.State = val
}

// SetIPMinusFilter sets the value of IPMinusFilter.
func (s *DbaasServiceOpensearch) SetIPMinusFilter(val []string) {
	s.IPMinusFilter = val
}

// SetBackups sets the value of Backups.
func (s *DbaasServiceOpensearch) SetBackups(val []DbaasServiceBackup) {
	s.Backups = val
}

// SetTerminationMinusProtection sets the value of TerminationMinusProtection.
func (s *DbaasServiceOpensearch) SetTerminationMinusProtection(val OptBool) {
	s.TerminationMinusProtection = val
}

// SetNotifications sets the value of Notifications.
func (s *DbaasServiceOpensearch) SetNotifications(val []DbaasServiceNotification) {
	s.Notifications = val
}

// SetComponents sets the value of Components.
func (s *DbaasServiceOpensearch) SetComponents(val []DbaasServiceOpensearchComponentsItem) {
	s.Components = val
}

// SetIndexMinusPatterns sets the value of IndexMinusPatterns.
func (s *DbaasServiceOpensearch) SetIndexMinusPatterns(val []DbaasServiceOpensearchIndexMinusPatternsItem) {
	s.IndexMinusPatterns = val
}

// SetMaintenance sets the value of Maintenance.
func (s *DbaasServiceOpensearch) SetMaintenance(val OptDbaasServiceMaintenance) {
	s.Maintenance = val
}

// SetIndexMinusTemplate sets the value of IndexMinusTemplate.
func (s *DbaasServiceOpensearch) SetIndexMinusTemplate(val OptDbaasServiceOpensearchIndexMinusTemplate) {
	s.IndexMinusTemplate = val
}

// SetDiskMinusSize sets the value of DiskMinusSize.
func (s *DbaasServiceOpensearch) SetDiskMinusSize(val OptInt64) {
	s.DiskMinusSize = val
}

// SetNodeMinusMemory sets the value of NodeMinusMemory.
func (s *DbaasServiceOpensearch) SetNodeMinusMemory(val OptInt64) {
	s.NodeMinusMemory = val
}

// SetURI sets the value of URI.
func (s *DbaasServiceOpensearch) SetURI(val OptString) {
	s.URI = val
}

// SetOpensearchMinusSettings sets the value of OpensearchMinusSettings.
func (s *DbaasServiceOpensearch) SetOpensearchMinusSettings(val *DbaasServiceOpensearchOpensearchMinusSettings) {
	s.OpensearchMinusSettings = val
}

// SetURIMinusParams sets the value of URIMinusParams.
func (s *DbaasServiceOpensearch) SetURIMinusParams(val *DbaasServiceOpensearchURIMinusParams) {
	s.URIMinusParams = val
}

// SetVersion sets the value of Version.
func (s *DbaasServiceOpensearch) SetVersion(val OptString) {
	s.Version = val
}

// SetCreatedMinusAt sets the value of CreatedMinusAt.
func (s *DbaasServiceOpensearch) SetCreatedMinusAt(val OptDateTime) {
	s.CreatedMinusAt = val
}

// SetPlan sets the value of Plan.
func (s *DbaasServiceOpensearch) SetPlan(val string) {
	s.Plan = val
}

// SetOpensearchMinusDashboards sets the value of OpensearchMinusDashboards.
func (s *DbaasServiceOpensearch) SetOpensearchMinusDashboards(val OptDbaasServiceOpensearchOpensearchMinusDashboards) {
	s.OpensearchMinusDashboards = val
}

// SetUsers sets the value of Users.
func (s *DbaasServiceOpensearch) SetUsers(val []DbaasServiceOpensearchUsersItem) {
	s.Users = val
}

type DbaasServiceOpensearchComponentsItem struct {
	// Service component name.
	Component string `json:"component"`
	// DNS name for connecting to the service component.
	Host string `json:"host"`
	// Port number for connecting to the service component.
	Port int64 `json:"port"`
	// Network access route.
	Route EnumComponentRoute `json:"route"`
	// DNS usage name.
	Usage EnumComponentUsage `json:"usage"`
}

// GetComponent returns the value of Component.
func (s *DbaasServiceOpensearchComponentsItem) GetComponent() string {
	return s.Component
}

// GetHost returns the value of Host.
func (s *DbaasServiceOpensearchComponentsItem) GetHost() string {
	return s.Host
}

// GetPort returns the value of Port.
func (s *DbaasServiceOpensearchComponentsItem) GetPort() int64 {
	return s.Port
}

// GetRoute returns the value of Route.
func (s *DbaasServiceOpensearchComponentsItem) GetRoute() EnumComponentRoute {
	return s.Route
}

// GetUsage returns the value of Usage.
func (s *DbaasServiceOpensearchComponentsItem) GetUsage() EnumComponentUsage {
	return s.Usage
}

// SetComponent sets the value of Component.
func (s *DbaasServiceOpensearchComponentsItem) SetComponent(val string) {
	s.Component = val
}

// SetHost sets the value of Host.
func (s *DbaasServiceOpensearchComponentsItem) SetHost(val string) {
	s.Host = val
}

// SetPort sets the value of Port.
func (s *DbaasServiceOpensearchComponentsItem) SetPort(val int64) {
	s.Port = val
}

// SetRoute sets the value of Route.
func (s *DbaasServiceOpensearchComponentsItem) SetRoute(val EnumComponentRoute) {
	s.Route = val
}

// SetUsage sets the value of Usage.
func (s *DbaasServiceOpensearchComponentsItem) SetUsage(val EnumComponentUsage) {
	s.Usage = val
}

// Opensearch connection information properties.
type DbaasServiceOpensearchConnectionMinusInfo struct {
	URI               []string  `json:"uri"`
	Username          OptString `json:"username"`
	Password          OptString `json:"password"`
	DashboardMinusURI OptString `json:"dashboard-uri"`
}

// GetURI returns the value of URI.
func (s *DbaasServiceOpensearchConnectionMinusInfo) GetURI() []string {
	return s.URI
}

// GetUsername returns the value of Username.
func (s *DbaasServiceOpensearchConnectionMinusInfo) GetUsername() OptString {
	return s.Username
}

// GetPassword returns the value of Password.
func (s *DbaasServiceOpensearchConnectionMinusInfo) GetPassword() OptString {
	return s.Password
}

// GetDashboardMinusURI returns the value of DashboardMinusURI.
func (s *DbaasServiceOpensearchConnectionMinusInfo) GetDashboardMinusURI() OptString {
	return s.DashboardMinusURI
}

// SetURI sets the value of URI.
func (s *DbaasServiceOpensearchConnectionMinusInfo) SetURI(val []string) {
	s.URI = val
}

// SetUsername sets the value of Username.
func (s *DbaasServiceOpensearchConnectionMinusInfo) SetUsername(val OptString) {
	s.Username = val
}

// SetPassword sets the value of Password.
func (s *DbaasServiceOpensearchConnectionMinusInfo) SetPassword(val OptString) {
	s.Password = val
}

// SetDashboardMinusURI sets the value of DashboardMinusURI.
func (s *DbaasServiceOpensearchConnectionMinusInfo) SetDashboardMinusURI(val OptString) {
	s.DashboardMinusURI = val
}

type DbaasServiceOpensearchIndexMinusPatternsItem struct {
	// Maximum number of indexes to keep.
	MaxMinusIndexMinusCount OptInt64 `json:"max-index-count"`
	// Deletion sorting algorithm.
	SortingMinusAlgorithm OptDbaasServiceOpensearchIndexMinusPatternsItemSortingMinusAlgorithm `json:"sorting-algorithm"`
	// Fnmatch pattern.
	Pattern OptString `json:"pattern"`
}

// GetMaxMinusIndexMinusCount returns the value of MaxMinusIndexMinusCount.
func (s *DbaasServiceOpensearchIndexMinusPatternsItem) GetMaxMinusIndexMinusCount() OptInt64 {
	return s.MaxMinusIndexMinusCount
}

// GetSortingMinusAlgorithm returns the value of SortingMinusAlgorithm.
func (s *DbaasServiceOpensearchIndexMinusPatternsItem) GetSortingMinusAlgorithm() OptDbaasServiceOpensearchIndexMinusPatternsItemSortingMinusAlgorithm {
	return s.SortingMinusAlgorithm
}

// GetPattern returns the value of Pattern.
func (s *DbaasServiceOpensearchIndexMinusPatternsItem) GetPattern() OptString {
	return s.Pattern
}

// SetMaxMinusIndexMinusCount sets the value of MaxMinusIndexMinusCount.
func (s *DbaasServiceOpensearchIndexMinusPatternsItem) SetMaxMinusIndexMinusCount(val OptInt64) {
	s.MaxMinusIndexMinusCount = val
}

// SetSortingMinusAlgorithm sets the value of SortingMinusAlgorithm.
func (s *DbaasServiceOpensearchIndexMinusPatternsItem) SetSortingMinusAlgorithm(val OptDbaasServiceOpensearchIndexMinusPatternsItemSortingMinusAlgorithm) {
	s.SortingMinusAlgorithm = val
}

// SetPattern sets the value of Pattern.
func (s *DbaasServiceOpensearchIndexMinusPatternsItem) SetPattern(val OptString) {
	s.Pattern = val
}

// Deletion sorting algorithm.
type DbaasServiceOpensearchIndexMinusPatternsItemSortingMinusAlgorithm string

const (
	DbaasServiceOpensearchIndexMinusPatternsItemSortingMinusAlgorithmAlphabetical DbaasServiceOpensearchIndexMinusPatternsItemSortingMinusAlgorithm = "alphabetical"
	DbaasServiceOpensearchIndexMinusPatternsItemSortingMinusAlgorithmCreationDate DbaasServiceOpensearchIndexMinusPatternsItemSortingMinusAlgorithm = "creation_date"
)

// MarshalText implements encoding.TextMarshaler.
func (s DbaasServiceOpensearchIndexMinusPatternsItemSortingMinusAlgorithm) MarshalText() ([]byte, error) {
	switch s {
	case DbaasServiceOpensearchIndexMinusPatternsItemSortingMinusAlgorithmAlphabetical:
		return []byte(s), nil
	case DbaasServiceOpensearchIndexMinusPatternsItemSortingMinusAlgorithmCreationDate:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *DbaasServiceOpensearchIndexMinusPatternsItemSortingMinusAlgorithm) UnmarshalText(data []byte) error {
	switch DbaasServiceOpensearchIndexMinusPatternsItemSortingMinusAlgorithm(data) {
	case DbaasServiceOpensearchIndexMinusPatternsItemSortingMinusAlgorithmAlphabetical:
		*s = DbaasServiceOpensearchIndexMinusPatternsItemSortingMinusAlgorithmAlphabetical
		return nil
	case DbaasServiceOpensearchIndexMinusPatternsItemSortingMinusAlgorithmCreationDate:
		*s = DbaasServiceOpensearchIndexMinusPatternsItemSortingMinusAlgorithmCreationDate
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Template settings for all new indexes.
type DbaasServiceOpensearchIndexMinusTemplate struct {
	// The maximum number of nested JSON objects that a single document can contain across all nested
	// types. This limit helps to prevent out of memory errors when a document contains too many nested
	// objects. Default is 10000.
	MappingMinusNestedMinusObjectsMinusLimit OptInt64 `json:"mapping-nested-objects-limit"`
	// The number of replicas each primary shard has.
	NumberMinusOfMinusReplicas OptInt64 `json:"number-of-replicas"`
	// The number of primary shards that an index should have.
	NumberMinusOfMinusShards OptInt64 `json:"number-of-shards"`
}

// GetMappingMinusNestedMinusObjectsMinusLimit returns the value of MappingMinusNestedMinusObjectsMinusLimit.
func (s *DbaasServiceOpensearchIndexMinusTemplate) GetMappingMinusNestedMinusObjectsMinusLimit() OptInt64 {
	return s.MappingMinusNestedMinusObjectsMinusLimit
}

// GetNumberMinusOfMinusReplicas returns the value of NumberMinusOfMinusReplicas.
func (s *DbaasServiceOpensearchIndexMinusTemplate) GetNumberMinusOfMinusReplicas() OptInt64 {
	return s.NumberMinusOfMinusReplicas
}

// GetNumberMinusOfMinusShards returns the value of NumberMinusOfMinusShards.
func (s *DbaasServiceOpensearchIndexMinusTemplate) GetNumberMinusOfMinusShards() OptInt64 {
	return s.NumberMinusOfMinusShards
}

// SetMappingMinusNestedMinusObjectsMinusLimit sets the value of MappingMinusNestedMinusObjectsMinusLimit.
func (s *DbaasServiceOpensearchIndexMinusTemplate) SetMappingMinusNestedMinusObjectsMinusLimit(val OptInt64) {
	s.MappingMinusNestedMinusObjectsMinusLimit = val
}

// SetNumberMinusOfMinusReplicas sets the value of NumberMinusOfMinusReplicas.
func (s *DbaasServiceOpensearchIndexMinusTemplate) SetNumberMinusOfMinusReplicas(val OptInt64) {
	s.NumberMinusOfMinusReplicas = val
}

// SetNumberMinusOfMinusShards sets the value of NumberMinusOfMinusShards.
func (s *DbaasServiceOpensearchIndexMinusTemplate) SetNumberMinusOfMinusShards(val OptInt64) {
	s.NumberMinusOfMinusShards = val
}

// OpenSearch Dashboards settings.
type DbaasServiceOpensearchOpensearchMinusDashboards struct {
	// Timeout in milliseconds for requests made by OpenSearch Dashboards towards OpenSearch (default:
	// 30000).
	OpensearchMinusRequestMinusTimeout OptInt64 `json:"opensearch-request-timeout"`
	// Enable or disable OpenSearch Dashboards (default: true).
	Enabled OptBool `json:"enabled"`
	// Limits the maximum amount of memory (in MiB) the OpenSearch Dashboards process can use. This sets
	// the max_old_space_size option of the nodejs running the OpenSearch Dashboards. Note: the memory
	// reserved by OpenSearch Dashboards is not available for OpenSearch. (default: 128).
	MaxMinusOldMinusSpaceMinusSize OptInt64 `json:"max-old-space-size"`
}

// GetOpensearchMinusRequestMinusTimeout returns the value of OpensearchMinusRequestMinusTimeout.
func (s *DbaasServiceOpensearchOpensearchMinusDashboards) GetOpensearchMinusRequestMinusTimeout() OptInt64 {
	return s.OpensearchMinusRequestMinusTimeout
}

// GetEnabled returns the value of Enabled.
func (s *DbaasServiceOpensearchOpensearchMinusDashboards) GetEnabled() OptBool {
	return s.Enabled
}

// GetMaxMinusOldMinusSpaceMinusSize returns the value of MaxMinusOldMinusSpaceMinusSize.
func (s *DbaasServiceOpensearchOpensearchMinusDashboards) GetMaxMinusOldMinusSpaceMinusSize() OptInt64 {
	return s.MaxMinusOldMinusSpaceMinusSize
}

// SetOpensearchMinusRequestMinusTimeout sets the value of OpensearchMinusRequestMinusTimeout.
func (s *DbaasServiceOpensearchOpensearchMinusDashboards) SetOpensearchMinusRequestMinusTimeout(val OptInt64) {
	s.OpensearchMinusRequestMinusTimeout = val
}

// SetEnabled sets the value of Enabled.
func (s *DbaasServiceOpensearchOpensearchMinusDashboards) SetEnabled(val OptBool) {
	s.Enabled = val
}

// SetMaxMinusOldMinusSpaceMinusSize sets the value of MaxMinusOldMinusSpaceMinusSize.
func (s *DbaasServiceOpensearchOpensearchMinusDashboards) SetMaxMinusOldMinusSpaceMinusSize(val OptInt64) {
	s.MaxMinusOldMinusSpaceMinusSize = val
}

// OpenSearch-specific settings.
type DbaasServiceOpensearchOpensearchMinusSettings struct{}

// Service_uri parameterized into key-value pairs.
type DbaasServiceOpensearchURIMinusParams struct{}

type DbaasServiceOpensearchUsersItem struct {
	Type     OptString `json:"type"`
	Username OptString `json:"username"`
	Password OptString `json:"password"`
}

// GetType returns the value of Type.
func (s *DbaasServiceOpensearchUsersItem) GetType() OptString {
	return s.Type
}

// GetUsername returns the value of Username.
func (s *DbaasServiceOpensearchUsersItem) GetUsername() OptString {
	return s.Username
}

// GetPassword returns the value of Password.
func (s *DbaasServiceOpensearchUsersItem) GetPassword() OptString {
	return s.Password
}

// SetType sets the value of Type.
func (s *DbaasServiceOpensearchUsersItem) SetType(val OptString) {
	s.Type = val
}

// SetUsername sets the value of Username.
func (s *DbaasServiceOpensearchUsersItem) SetUsername(val OptString) {
	s.Username = val
}

// SetPassword sets the value of Password.
func (s *DbaasServiceOpensearchUsersItem) SetPassword(val OptString) {
	s.Password = val
}

// Ref: #/components/schemas/dbaas-service-pg
type DbaasServicePg struct {
	// PGBouncer connection pooling settings.
	PgbouncerMinusSettings *DbaasServicePgPgbouncerMinusSettings `json:"pgbouncer-settings"`
	// Service last update timestamp (ISO 8601).
	UpdatedMinusAt OptDateTime `json:"updated-at"`
	// Number of service nodes in the active plan.
	NodeMinusCount OptInt64 `json:"node-count"`
	// PG connection information properties.
	ConnectionMinusInfo OptDbaasServicePgConnectionMinusInfo `json:"connection-info"`
	// Backup schedule.
	BackupMinusSchedule OptDbaasServicePgBackupMinusSchedule `json:"backup-schedule"`
	// Number of CPUs for each node.
	NodeMinusCPUMinusCount OptInt64 `json:"node-cpu-count"`
	// Service integrations.
	Integrations []DbaasIntegration `json:"integrations"`
	// State of individual service nodes.
	NodeMinusStates []DbaasNodeState `json:"node-states"`
	// Service name.
	Name DbaasServiceName `json:"name"`
	// PostgreSQL PGBouncer connection pools.
	ConnectionMinusPools []DbaasServicePgConnectionMinusPoolsItem `json:"connection-pools"`
	// Service type code.
	Type DbaasServiceTypeName `json:"type"`
	// State of the service.
	State OptEnumServiceState `json:"state"`
	// TimescaleDB extension configuration values.
	TimescaledbMinusSettings *DbaasServicePgTimescaledbMinusSettings `json:"timescaledb-settings"`
	// List of PostgreSQL databases.
	Databases []DbaasPgDatabaseName `json:"databases"`
	// Allowed CIDR address blocks for incoming connections.
	IPMinusFilter []string `json:"ip-filter"`
	// List of backups for the service.
	Backups []DbaasServiceBackup `json:"backups"`
	// Service is protected against termination and powering off.
	TerminationMinusProtection OptBool `json:"termination-protection"`
	// Service notifications.
	Notifications []DbaasServiceNotification `json:"notifications"`
	// Service component information objects.
	Components []DbaasServicePgComponentsItem `json:"components"`
	// Synchronous replication type. Note that the service plan also needs to support synchronous
	// replication.
	SynchronousMinusReplication OptEnumPgSynchronousReplication `json:"synchronous-replication"`
	// PGLookout settings.
	PglookoutMinusSettings *DbaasServicePgPglookoutMinusSettings `json:"pglookout-settings"`
	// Automatic maintenance settings.
	Maintenance OptDbaasServiceMaintenance `json:"maintenance"`
	// TODO UNIT disk space for data storage.
	DiskMinusSize OptInt64 `json:"disk-size"`
	// TODO UNIT of memory for each node.
	NodeMinusMemory OptInt64 `json:"node-memory"`
	// URI for connecting to the service (may be absent).
	URI OptString `json:"uri"`
	// Service_uri parameterized into key-value pairs.
	URIMinusParams *DbaasServicePgURIMinusParams `json:"uri-params"`
	// PostgreSQL version.
	Version OptString `json:"version"`
	// Service creation timestamp (ISO 8601).
	CreatedMinusAt OptDateTime `json:"created-at"`
	// Subscription plan.
	Plan string `json:"plan"`
	// Sets the maximum amount of memory to be used by a query operation (such as a sort or hash table)
	// before writing to temporary disk files, in MB. Default is 1MB + 0.075% of total RAM (up to 32MB).
	WorkMinusMem OptInt64 `json:"work-mem"`
	// Percentage of total RAM that the database server uses for shared memory buffers. Valid range is
	// 20-60 (float), which corresponds to 20% - 60%. This setting adjusts the shared_buffers
	// configuration value.
	SharedMinusBuffersMinusPercentage OptInt64 `json:"shared-buffers-percentage"`
	// PostgreSQL-specific settings.
	PgMinusSettings *DbaasServicePgPgMinusSettings `json:"pg-settings"`
	// Maximum number of connections allowed to an instance.
	MaxMinusConnections OptInt64 `json:"max-connections"`
	// List of service users.
	Users []DbaasServicePgUsersItem `json:"users"`
}

// GetPgbouncerMinusSettings returns the value of PgbouncerMinusSettings.
func (s *DbaasServicePg) GetPgbouncerMinusSettings() *DbaasServicePgPgbouncerMinusSettings {
	return s.PgbouncerMinusSettings
}

// GetUpdatedMinusAt returns the value of UpdatedMinusAt.
func (s *DbaasServicePg) GetUpdatedMinusAt() OptDateTime {
	return s.UpdatedMinusAt
}

// GetNodeMinusCount returns the value of NodeMinusCount.
func (s *DbaasServicePg) GetNodeMinusCount() OptInt64 {
	return s.NodeMinusCount
}

// GetConnectionMinusInfo returns the value of ConnectionMinusInfo.
func (s *DbaasServicePg) GetConnectionMinusInfo() OptDbaasServicePgConnectionMinusInfo {
	return s.ConnectionMinusInfo
}

// GetBackupMinusSchedule returns the value of BackupMinusSchedule.
func (s *DbaasServicePg) GetBackupMinusSchedule() OptDbaasServicePgBackupMinusSchedule {
	return s.BackupMinusSchedule
}

// GetNodeMinusCPUMinusCount returns the value of NodeMinusCPUMinusCount.
func (s *DbaasServicePg) GetNodeMinusCPUMinusCount() OptInt64 {
	return s.NodeMinusCPUMinusCount
}

// GetIntegrations returns the value of Integrations.
func (s *DbaasServicePg) GetIntegrations() []DbaasIntegration {
	return s.Integrations
}

// GetNodeMinusStates returns the value of NodeMinusStates.
func (s *DbaasServicePg) GetNodeMinusStates() []DbaasNodeState {
	return s.NodeMinusStates
}

// GetName returns the value of Name.
func (s *DbaasServicePg) GetName() DbaasServiceName {
	return s.Name
}

// GetConnectionMinusPools returns the value of ConnectionMinusPools.
func (s *DbaasServicePg) GetConnectionMinusPools() []DbaasServicePgConnectionMinusPoolsItem {
	return s.ConnectionMinusPools
}

// GetType returns the value of Type.
func (s *DbaasServicePg) GetType() DbaasServiceTypeName {
	return s.Type
}

// GetState returns the value of State.
func (s *DbaasServicePg) GetState() OptEnumServiceState {
	return s.State
}

// GetTimescaledbMinusSettings returns the value of TimescaledbMinusSettings.
func (s *DbaasServicePg) GetTimescaledbMinusSettings() *DbaasServicePgTimescaledbMinusSettings {
	return s.TimescaledbMinusSettings
}

// GetDatabases returns the value of Databases.
func (s *DbaasServicePg) GetDatabases() []DbaasPgDatabaseName {
	return s.Databases
}

// GetIPMinusFilter returns the value of IPMinusFilter.
func (s *DbaasServicePg) GetIPMinusFilter() []string {
	return s.IPMinusFilter
}

// GetBackups returns the value of Backups.
func (s *DbaasServicePg) GetBackups() []DbaasServiceBackup {
	return s.Backups
}

// GetTerminationMinusProtection returns the value of TerminationMinusProtection.
func (s *DbaasServicePg) GetTerminationMinusProtection() OptBool {
	return s.TerminationMinusProtection
}

// GetNotifications returns the value of Notifications.
func (s *DbaasServicePg) GetNotifications() []DbaasServiceNotification {
	return s.Notifications
}

// GetComponents returns the value of Components.
func (s *DbaasServicePg) GetComponents() []DbaasServicePgComponentsItem {
	return s.Components
}

// GetSynchronousMinusReplication returns the value of SynchronousMinusReplication.
func (s *DbaasServicePg) GetSynchronousMinusReplication() OptEnumPgSynchronousReplication {
	return s.SynchronousMinusReplication
}

// GetPglookoutMinusSettings returns the value of PglookoutMinusSettings.
func (s *DbaasServicePg) GetPglookoutMinusSettings() *DbaasServicePgPglookoutMinusSettings {
	return s.PglookoutMinusSettings
}

// GetMaintenance returns the value of Maintenance.
func (s *DbaasServicePg) GetMaintenance() OptDbaasServiceMaintenance {
	return s.Maintenance
}

// GetDiskMinusSize returns the value of DiskMinusSize.
func (s *DbaasServicePg) GetDiskMinusSize() OptInt64 {
	return s.DiskMinusSize
}

// GetNodeMinusMemory returns the value of NodeMinusMemory.
func (s *DbaasServicePg) GetNodeMinusMemory() OptInt64 {
	return s.NodeMinusMemory
}

// GetURI returns the value of URI.
func (s *DbaasServicePg) GetURI() OptString {
	return s.URI
}

// GetURIMinusParams returns the value of URIMinusParams.
func (s *DbaasServicePg) GetURIMinusParams() *DbaasServicePgURIMinusParams {
	return s.URIMinusParams
}

// GetVersion returns the value of Version.
func (s *DbaasServicePg) GetVersion() OptString {
	return s.Version
}

// GetCreatedMinusAt returns the value of CreatedMinusAt.
func (s *DbaasServicePg) GetCreatedMinusAt() OptDateTime {
	return s.CreatedMinusAt
}

// GetPlan returns the value of Plan.
func (s *DbaasServicePg) GetPlan() string {
	return s.Plan
}

// GetWorkMinusMem returns the value of WorkMinusMem.
func (s *DbaasServicePg) GetWorkMinusMem() OptInt64 {
	return s.WorkMinusMem
}

// GetSharedMinusBuffersMinusPercentage returns the value of SharedMinusBuffersMinusPercentage.
func (s *DbaasServicePg) GetSharedMinusBuffersMinusPercentage() OptInt64 {
	return s.SharedMinusBuffersMinusPercentage
}

// GetPgMinusSettings returns the value of PgMinusSettings.
func (s *DbaasServicePg) GetPgMinusSettings() *DbaasServicePgPgMinusSettings {
	return s.PgMinusSettings
}

// GetMaxMinusConnections returns the value of MaxMinusConnections.
func (s *DbaasServicePg) GetMaxMinusConnections() OptInt64 {
	return s.MaxMinusConnections
}

// GetUsers returns the value of Users.
func (s *DbaasServicePg) GetUsers() []DbaasServicePgUsersItem {
	return s.Users
}

// SetPgbouncerMinusSettings sets the value of PgbouncerMinusSettings.
func (s *DbaasServicePg) SetPgbouncerMinusSettings(val *DbaasServicePgPgbouncerMinusSettings) {
	s.PgbouncerMinusSettings = val
}

// SetUpdatedMinusAt sets the value of UpdatedMinusAt.
func (s *DbaasServicePg) SetUpdatedMinusAt(val OptDateTime) {
	s.UpdatedMinusAt = val
}

// SetNodeMinusCount sets the value of NodeMinusCount.
func (s *DbaasServicePg) SetNodeMinusCount(val OptInt64) {
	s.NodeMinusCount = val
}

// SetConnectionMinusInfo sets the value of ConnectionMinusInfo.
func (s *DbaasServicePg) SetConnectionMinusInfo(val OptDbaasServicePgConnectionMinusInfo) {
	s.ConnectionMinusInfo = val
}

// SetBackupMinusSchedule sets the value of BackupMinusSchedule.
func (s *DbaasServicePg) SetBackupMinusSchedule(val OptDbaasServicePgBackupMinusSchedule) {
	s.BackupMinusSchedule = val
}

// SetNodeMinusCPUMinusCount sets the value of NodeMinusCPUMinusCount.
func (s *DbaasServicePg) SetNodeMinusCPUMinusCount(val OptInt64) {
	s.NodeMinusCPUMinusCount = val
}

// SetIntegrations sets the value of Integrations.
func (s *DbaasServicePg) SetIntegrations(val []DbaasIntegration) {
	s.Integrations = val
}

// SetNodeMinusStates sets the value of NodeMinusStates.
func (s *DbaasServicePg) SetNodeMinusStates(val []DbaasNodeState) {
	s.NodeMinusStates = val
}

// SetName sets the value of Name.
func (s *DbaasServicePg) SetName(val DbaasServiceName) {
	s.Name = val
}

// SetConnectionMinusPools sets the value of ConnectionMinusPools.
func (s *DbaasServicePg) SetConnectionMinusPools(val []DbaasServicePgConnectionMinusPoolsItem) {
	s.ConnectionMinusPools = val
}

// SetType sets the value of Type.
func (s *DbaasServicePg) SetType(val DbaasServiceTypeName) {
	s.Type = val
}

// SetState sets the value of State.
func (s *DbaasServicePg) SetState(val OptEnumServiceState) {
	s.State = val
}

// SetTimescaledbMinusSettings sets the value of TimescaledbMinusSettings.
func (s *DbaasServicePg) SetTimescaledbMinusSettings(val *DbaasServicePgTimescaledbMinusSettings) {
	s.TimescaledbMinusSettings = val
}

// SetDatabases sets the value of Databases.
func (s *DbaasServicePg) SetDatabases(val []DbaasPgDatabaseName) {
	s.Databases = val
}

// SetIPMinusFilter sets the value of IPMinusFilter.
func (s *DbaasServicePg) SetIPMinusFilter(val []string) {
	s.IPMinusFilter = val
}

// SetBackups sets the value of Backups.
func (s *DbaasServicePg) SetBackups(val []DbaasServiceBackup) {
	s.Backups = val
}

// SetTerminationMinusProtection sets the value of TerminationMinusProtection.
func (s *DbaasServicePg) SetTerminationMinusProtection(val OptBool) {
	s.TerminationMinusProtection = val
}

// SetNotifications sets the value of Notifications.
func (s *DbaasServicePg) SetNotifications(val []DbaasServiceNotification) {
	s.Notifications = val
}

// SetComponents sets the value of Components.
func (s *DbaasServicePg) SetComponents(val []DbaasServicePgComponentsItem) {
	s.Components = val
}

// SetSynchronousMinusReplication sets the value of SynchronousMinusReplication.
func (s *DbaasServicePg) SetSynchronousMinusReplication(val OptEnumPgSynchronousReplication) {
	s.SynchronousMinusReplication = val
}

// SetPglookoutMinusSettings sets the value of PglookoutMinusSettings.
func (s *DbaasServicePg) SetPglookoutMinusSettings(val *DbaasServicePgPglookoutMinusSettings) {
	s.PglookoutMinusSettings = val
}

// SetMaintenance sets the value of Maintenance.
func (s *DbaasServicePg) SetMaintenance(val OptDbaasServiceMaintenance) {
	s.Maintenance = val
}

// SetDiskMinusSize sets the value of DiskMinusSize.
func (s *DbaasServicePg) SetDiskMinusSize(val OptInt64) {
	s.DiskMinusSize = val
}

// SetNodeMinusMemory sets the value of NodeMinusMemory.
func (s *DbaasServicePg) SetNodeMinusMemory(val OptInt64) {
	s.NodeMinusMemory = val
}

// SetURI sets the value of URI.
func (s *DbaasServicePg) SetURI(val OptString) {
	s.URI = val
}

// SetURIMinusParams sets the value of URIMinusParams.
func (s *DbaasServicePg) SetURIMinusParams(val *DbaasServicePgURIMinusParams) {
	s.URIMinusParams = val
}

// SetVersion sets the value of Version.
func (s *DbaasServicePg) SetVersion(val OptString) {
	s.Version = val
}

// SetCreatedMinusAt sets the value of CreatedMinusAt.
func (s *DbaasServicePg) SetCreatedMinusAt(val OptDateTime) {
	s.CreatedMinusAt = val
}

// SetPlan sets the value of Plan.
func (s *DbaasServicePg) SetPlan(val string) {
	s.Plan = val
}

// SetWorkMinusMem sets the value of WorkMinusMem.
func (s *DbaasServicePg) SetWorkMinusMem(val OptInt64) {
	s.WorkMinusMem = val
}

// SetSharedMinusBuffersMinusPercentage sets the value of SharedMinusBuffersMinusPercentage.
func (s *DbaasServicePg) SetSharedMinusBuffersMinusPercentage(val OptInt64) {
	s.SharedMinusBuffersMinusPercentage = val
}

// SetPgMinusSettings sets the value of PgMinusSettings.
func (s *DbaasServicePg) SetPgMinusSettings(val *DbaasServicePgPgMinusSettings) {
	s.PgMinusSettings = val
}

// SetMaxMinusConnections sets the value of MaxMinusConnections.
func (s *DbaasServicePg) SetMaxMinusConnections(val OptInt64) {
	s.MaxMinusConnections = val
}

// SetUsers sets the value of Users.
func (s *DbaasServicePg) SetUsers(val []DbaasServicePgUsersItem) {
	s.Users = val
}

// Backup schedule.
type DbaasServicePgBackupMinusSchedule struct {
	// The hour of day (in UTC) when backup for the service is started. New backup is only started if
	// previous backup has already completed.
	BackupMinusHour OptInt64 `json:"backup-hour"`
	// The minute of an hour when backup for the service is started. New backup is only started if
	// previous backup has already completed.
	BackupMinusMinute OptInt64 `json:"backup-minute"`
}

// GetBackupMinusHour returns the value of BackupMinusHour.
func (s *DbaasServicePgBackupMinusSchedule) GetBackupMinusHour() OptInt64 {
	return s.BackupMinusHour
}

// GetBackupMinusMinute returns the value of BackupMinusMinute.
func (s *DbaasServicePgBackupMinusSchedule) GetBackupMinusMinute() OptInt64 {
	return s.BackupMinusMinute
}

// SetBackupMinusHour sets the value of BackupMinusHour.
func (s *DbaasServicePgBackupMinusSchedule) SetBackupMinusHour(val OptInt64) {
	s.BackupMinusHour = val
}

// SetBackupMinusMinute sets the value of BackupMinusMinute.
func (s *DbaasServicePgBackupMinusSchedule) SetBackupMinusMinute(val OptInt64) {
	s.BackupMinusMinute = val
}

type DbaasServicePgComponentsItem struct {
	// Service component name.
	Component string `json:"component"`
	// DNS name for connecting to the service component.
	Host string `json:"host"`
	// Port number for connecting to the service component.
	Port int64 `json:"port"`
	// Network access route.
	Route EnumComponentRoute `json:"route"`
	// DNS usage name.
	Usage EnumComponentUsage `json:"usage"`
}

// GetComponent returns the value of Component.
func (s *DbaasServicePgComponentsItem) GetComponent() string {
	return s.Component
}

// GetHost returns the value of Host.
func (s *DbaasServicePgComponentsItem) GetHost() string {
	return s.Host
}

// GetPort returns the value of Port.
func (s *DbaasServicePgComponentsItem) GetPort() int64 {
	return s.Port
}

// GetRoute returns the value of Route.
func (s *DbaasServicePgComponentsItem) GetRoute() EnumComponentRoute {
	return s.Route
}

// GetUsage returns the value of Usage.
func (s *DbaasServicePgComponentsItem) GetUsage() EnumComponentUsage {
	return s.Usage
}

// SetComponent sets the value of Component.
func (s *DbaasServicePgComponentsItem) SetComponent(val string) {
	s.Component = val
}

// SetHost sets the value of Host.
func (s *DbaasServicePgComponentsItem) SetHost(val string) {
	s.Host = val
}

// SetPort sets the value of Port.
func (s *DbaasServicePgComponentsItem) SetPort(val int64) {
	s.Port = val
}

// SetRoute sets the value of Route.
func (s *DbaasServicePgComponentsItem) SetRoute(val EnumComponentRoute) {
	s.Route = val
}

// SetUsage sets the value of Usage.
func (s *DbaasServicePgComponentsItem) SetUsage(val EnumComponentUsage) {
	s.Usage = val
}

// PG connection information properties.
type DbaasServicePgConnectionMinusInfo struct {
	URI     []string                                       `json:"uri"`
	Params  []DbaasServicePgConnectionMinusInfoParamsItem  `json:"params"`
	Standby []string                                       `json:"standby"`
	Syncing []DbaasServicePgConnectionMinusInfoSyncingItem `json:"syncing"`
}

// GetURI returns the value of URI.
func (s *DbaasServicePgConnectionMinusInfo) GetURI() []string {
	return s.URI
}

// GetParams returns the value of Params.
func (s *DbaasServicePgConnectionMinusInfo) GetParams() []DbaasServicePgConnectionMinusInfoParamsItem {
	return s.Params
}

// GetStandby returns the value of Standby.
func (s *DbaasServicePgConnectionMinusInfo) GetStandby() []string {
	return s.Standby
}

// GetSyncing returns the value of Syncing.
func (s *DbaasServicePgConnectionMinusInfo) GetSyncing() []DbaasServicePgConnectionMinusInfoSyncingItem {
	return s.Syncing
}

// SetURI sets the value of URI.
func (s *DbaasServicePgConnectionMinusInfo) SetURI(val []string) {
	s.URI = val
}

// SetParams sets the value of Params.
func (s *DbaasServicePgConnectionMinusInfo) SetParams(val []DbaasServicePgConnectionMinusInfoParamsItem) {
	s.Params = val
}

// SetStandby sets the value of Standby.
func (s *DbaasServicePgConnectionMinusInfo) SetStandby(val []string) {
	s.Standby = val
}

// SetSyncing sets the value of Syncing.
func (s *DbaasServicePgConnectionMinusInfo) SetSyncing(val []DbaasServicePgConnectionMinusInfoSyncingItem) {
	s.Syncing = val
}

type DbaasServicePgConnectionMinusInfoParamsItem map[string]string

func (s *DbaasServicePgConnectionMinusInfoParamsItem) init() DbaasServicePgConnectionMinusInfoParamsItem {
	m := *s
	if m == nil {
		m = map[string]string{}
		*s = m
	}
	return m
}

type DbaasServicePgConnectionMinusInfoSyncingItem struct{}

type DbaasServicePgConnectionMinusPoolsItem struct {
	// Connection URI for the DB pool.
	ConnectionMinusURI string `json:"connection-uri"`
	// Service database name.
	Database DbaasPgDatabaseName `json:"database"`
	// PGBouncer pool mode.
	Mode EnumPgPoolMode `json:"mode"`
	// Connection pool name.
	Name DbaasPgPoolName `json:"name"`
	// Size of PGBouncer's PostgreSQL side connection pool.
	Size DbaasPgPoolSize `json:"size"`
	// Pool username.
	Username DbaasPgPoolUsername `json:"username"`
}

// GetConnectionMinusURI returns the value of ConnectionMinusURI.
func (s *DbaasServicePgConnectionMinusPoolsItem) GetConnectionMinusURI() string {
	return s.ConnectionMinusURI
}

// GetDatabase returns the value of Database.
func (s *DbaasServicePgConnectionMinusPoolsItem) GetDatabase() DbaasPgDatabaseName {
	return s.Database
}

// GetMode returns the value of Mode.
func (s *DbaasServicePgConnectionMinusPoolsItem) GetMode() EnumPgPoolMode {
	return s.Mode
}

// GetName returns the value of Name.
func (s *DbaasServicePgConnectionMinusPoolsItem) GetName() DbaasPgPoolName {
	return s.Name
}

// GetSize returns the value of Size.
func (s *DbaasServicePgConnectionMinusPoolsItem) GetSize() DbaasPgPoolSize {
	return s.Size
}

// GetUsername returns the value of Username.
func (s *DbaasServicePgConnectionMinusPoolsItem) GetUsername() DbaasPgPoolUsername {
	return s.Username
}

// SetConnectionMinusURI sets the value of ConnectionMinusURI.
func (s *DbaasServicePgConnectionMinusPoolsItem) SetConnectionMinusURI(val string) {
	s.ConnectionMinusURI = val
}

// SetDatabase sets the value of Database.
func (s *DbaasServicePgConnectionMinusPoolsItem) SetDatabase(val DbaasPgDatabaseName) {
	s.Database = val
}

// SetMode sets the value of Mode.
func (s *DbaasServicePgConnectionMinusPoolsItem) SetMode(val EnumPgPoolMode) {
	s.Mode = val
}

// SetName sets the value of Name.
func (s *DbaasServicePgConnectionMinusPoolsItem) SetName(val DbaasPgPoolName) {
	s.Name = val
}

// SetSize sets the value of Size.
func (s *DbaasServicePgConnectionMinusPoolsItem) SetSize(val DbaasPgPoolSize) {
	s.Size = val
}

// SetUsername sets the value of Username.
func (s *DbaasServicePgConnectionMinusPoolsItem) SetUsername(val DbaasPgPoolUsername) {
	s.Username = val
}

// PostgreSQL-specific settings.
type DbaasServicePgPgMinusSettings struct{}

// PGBouncer connection pooling settings.
type DbaasServicePgPgbouncerMinusSettings struct{}

// PGLookout settings.
type DbaasServicePgPglookoutMinusSettings struct{}

// TimescaleDB extension configuration values.
type DbaasServicePgTimescaledbMinusSettings struct{}

// Service_uri parameterized into key-value pairs.
type DbaasServicePgURIMinusParams struct{}

// List of service users.
type DbaasServicePgUsersItem struct {
	// Account type.
	Type string `json:"type"`
	// Account username.
	Username string `json:"username"`
	// Account password. A missing field indicates a user overridden password.
	Password              OptString `json:"password"`
	AllowMinusReplication OptBool   `json:"allow-replication"`
}

// GetType returns the value of Type.
func (s *DbaasServicePgUsersItem) GetType() string {
	return s.Type
}

// GetUsername returns the value of Username.
func (s *DbaasServicePgUsersItem) GetUsername() string {
	return s.Username
}

// GetPassword returns the value of Password.
func (s *DbaasServicePgUsersItem) GetPassword() OptString {
	return s.Password
}

// GetAllowMinusReplication returns the value of AllowMinusReplication.
func (s *DbaasServicePgUsersItem) GetAllowMinusReplication() OptBool {
	return s.AllowMinusReplication
}

// SetType sets the value of Type.
func (s *DbaasServicePgUsersItem) SetType(val string) {
	s.Type = val
}

// SetUsername sets the value of Username.
func (s *DbaasServicePgUsersItem) SetUsername(val string) {
	s.Username = val
}

// SetPassword sets the value of Password.
func (s *DbaasServicePgUsersItem) SetPassword(val OptString) {
	s.Password = val
}

// SetAllowMinusReplication sets the value of AllowMinusReplication.
func (s *DbaasServicePgUsersItem) SetAllowMinusReplication(val OptBool) {
	s.AllowMinusReplication = val
}

// Ref: #/components/schemas/dbaas-service-redis
type DbaasServiceRedis struct {
	// Service last update timestamp (ISO 8601).
	UpdatedMinusAt OptDateTime `json:"updated-at"`
	// Number of service nodes in the active plan.
	NodeMinusCount OptInt64 `json:"node-count"`
	// Redis connection information properties.
	ConnectionMinusInfo OptDbaasServiceRedisConnectionMinusInfo `json:"connection-info"`
	// Number of CPUs for each node.
	NodeMinusCPUMinusCount OptInt64 `json:"node-cpu-count"`
	// Service integrations.
	Integrations []DbaasIntegration `json:"integrations"`
	// State of individual service nodes.
	NodeMinusStates []DbaasNodeState `json:"node-states"`
	// Service name.
	Name DbaasServiceName `json:"name"`
	// Redis-specific settings.
	RedisMinusSettings *DbaasServiceRedisRedisMinusSettings `json:"redis-settings"`
	// Service type code.
	Type DbaasServiceTypeName `json:"type"`
	// State of the service.
	State OptEnumServiceState `json:"state"`
	// Allowed CIDR address blocks for incoming connections.
	IPMinusFilter []string `json:"ip-filter"`
	// List of backups for the service.
	Backups []DbaasServiceBackup `json:"backups"`
	// Service is protected against termination and powering off.
	TerminationMinusProtection OptBool `json:"termination-protection"`
	// Service notifications.
	Notifications []DbaasServiceNotification `json:"notifications"`
	// Service component information objects.
	Components []DbaasServiceRedisComponentsItem `json:"components"`
	// Automatic maintenance settings.
	Maintenance OptDbaasServiceMaintenance `json:"maintenance"`
	// TODO UNIT disk space for data storage.
	DiskMinusSize OptInt64 `json:"disk-size"`
	// TODO UNIT of memory for each node.
	NodeMinusMemory OptInt64 `json:"node-memory"`
	// URI for connecting to the service (may be absent).
	URI OptString `json:"uri"`
	// Service_uri parameterized into key-value pairs.
	URIMinusParams *DbaasServiceRedisURIMinusParams `json:"uri-params"`
	// Redis version.
	Version OptString `json:"version"`
	// Service creation timestamp (ISO 8601).
	CreatedMinusAt OptDateTime `json:"created-at"`
	// Subscription plan.
	Plan string `json:"plan"`
	// List of service users.
	Users []DbaasServiceRedisUsersItem `json:"users"`
}

// GetUpdatedMinusAt returns the value of UpdatedMinusAt.
func (s *DbaasServiceRedis) GetUpdatedMinusAt() OptDateTime {
	return s.UpdatedMinusAt
}

// GetNodeMinusCount returns the value of NodeMinusCount.
func (s *DbaasServiceRedis) GetNodeMinusCount() OptInt64 {
	return s.NodeMinusCount
}

// GetConnectionMinusInfo returns the value of ConnectionMinusInfo.
func (s *DbaasServiceRedis) GetConnectionMinusInfo() OptDbaasServiceRedisConnectionMinusInfo {
	return s.ConnectionMinusInfo
}

// GetNodeMinusCPUMinusCount returns the value of NodeMinusCPUMinusCount.
func (s *DbaasServiceRedis) GetNodeMinusCPUMinusCount() OptInt64 {
	return s.NodeMinusCPUMinusCount
}

// GetIntegrations returns the value of Integrations.
func (s *DbaasServiceRedis) GetIntegrations() []DbaasIntegration {
	return s.Integrations
}

// GetNodeMinusStates returns the value of NodeMinusStates.
func (s *DbaasServiceRedis) GetNodeMinusStates() []DbaasNodeState {
	return s.NodeMinusStates
}

// GetName returns the value of Name.
func (s *DbaasServiceRedis) GetName() DbaasServiceName {
	return s.Name
}

// GetRedisMinusSettings returns the value of RedisMinusSettings.
func (s *DbaasServiceRedis) GetRedisMinusSettings() *DbaasServiceRedisRedisMinusSettings {
	return s.RedisMinusSettings
}

// GetType returns the value of Type.
func (s *DbaasServiceRedis) GetType() DbaasServiceTypeName {
	return s.Type
}

// GetState returns the value of State.
func (s *DbaasServiceRedis) GetState() OptEnumServiceState {
	return s.State
}

// GetIPMinusFilter returns the value of IPMinusFilter.
func (s *DbaasServiceRedis) GetIPMinusFilter() []string {
	return s.IPMinusFilter
}

// GetBackups returns the value of Backups.
func (s *DbaasServiceRedis) GetBackups() []DbaasServiceBackup {
	return s.Backups
}

// GetTerminationMinusProtection returns the value of TerminationMinusProtection.
func (s *DbaasServiceRedis) GetTerminationMinusProtection() OptBool {
	return s.TerminationMinusProtection
}

// GetNotifications returns the value of Notifications.
func (s *DbaasServiceRedis) GetNotifications() []DbaasServiceNotification {
	return s.Notifications
}

// GetComponents returns the value of Components.
func (s *DbaasServiceRedis) GetComponents() []DbaasServiceRedisComponentsItem {
	return s.Components
}

// GetMaintenance returns the value of Maintenance.
func (s *DbaasServiceRedis) GetMaintenance() OptDbaasServiceMaintenance {
	return s.Maintenance
}

// GetDiskMinusSize returns the value of DiskMinusSize.
func (s *DbaasServiceRedis) GetDiskMinusSize() OptInt64 {
	return s.DiskMinusSize
}

// GetNodeMinusMemory returns the value of NodeMinusMemory.
func (s *DbaasServiceRedis) GetNodeMinusMemory() OptInt64 {
	return s.NodeMinusMemory
}

// GetURI returns the value of URI.
func (s *DbaasServiceRedis) GetURI() OptString {
	return s.URI
}

// GetURIMinusParams returns the value of URIMinusParams.
func (s *DbaasServiceRedis) GetURIMinusParams() *DbaasServiceRedisURIMinusParams {
	return s.URIMinusParams
}

// GetVersion returns the value of Version.
func (s *DbaasServiceRedis) GetVersion() OptString {
	return s.Version
}

// GetCreatedMinusAt returns the value of CreatedMinusAt.
func (s *DbaasServiceRedis) GetCreatedMinusAt() OptDateTime {
	return s.CreatedMinusAt
}

// GetPlan returns the value of Plan.
func (s *DbaasServiceRedis) GetPlan() string {
	return s.Plan
}

// GetUsers returns the value of Users.
func (s *DbaasServiceRedis) GetUsers() []DbaasServiceRedisUsersItem {
	return s.Users
}

// SetUpdatedMinusAt sets the value of UpdatedMinusAt.
func (s *DbaasServiceRedis) SetUpdatedMinusAt(val OptDateTime) {
	s.UpdatedMinusAt = val
}

// SetNodeMinusCount sets the value of NodeMinusCount.
func (s *DbaasServiceRedis) SetNodeMinusCount(val OptInt64) {
	s.NodeMinusCount = val
}

// SetConnectionMinusInfo sets the value of ConnectionMinusInfo.
func (s *DbaasServiceRedis) SetConnectionMinusInfo(val OptDbaasServiceRedisConnectionMinusInfo) {
	s.ConnectionMinusInfo = val
}

// SetNodeMinusCPUMinusCount sets the value of NodeMinusCPUMinusCount.
func (s *DbaasServiceRedis) SetNodeMinusCPUMinusCount(val OptInt64) {
	s.NodeMinusCPUMinusCount = val
}

// SetIntegrations sets the value of Integrations.
func (s *DbaasServiceRedis) SetIntegrations(val []DbaasIntegration) {
	s.Integrations = val
}

// SetNodeMinusStates sets the value of NodeMinusStates.
func (s *DbaasServiceRedis) SetNodeMinusStates(val []DbaasNodeState) {
	s.NodeMinusStates = val
}

// SetName sets the value of Name.
func (s *DbaasServiceRedis) SetName(val DbaasServiceName) {
	s.Name = val
}

// SetRedisMinusSettings sets the value of RedisMinusSettings.
func (s *DbaasServiceRedis) SetRedisMinusSettings(val *DbaasServiceRedisRedisMinusSettings) {
	s.RedisMinusSettings = val
}

// SetType sets the value of Type.
func (s *DbaasServiceRedis) SetType(val DbaasServiceTypeName) {
	s.Type = val
}

// SetState sets the value of State.
func (s *DbaasServiceRedis) SetState(val OptEnumServiceState) {
	s.State = val
}

// SetIPMinusFilter sets the value of IPMinusFilter.
func (s *DbaasServiceRedis) SetIPMinusFilter(val []string) {
	s.IPMinusFilter = val
}

// SetBackups sets the value of Backups.
func (s *DbaasServiceRedis) SetBackups(val []DbaasServiceBackup) {
	s.Backups = val
}

// SetTerminationMinusProtection sets the value of TerminationMinusProtection.
func (s *DbaasServiceRedis) SetTerminationMinusProtection(val OptBool) {
	s.TerminationMinusProtection = val
}

// SetNotifications sets the value of Notifications.
func (s *DbaasServiceRedis) SetNotifications(val []DbaasServiceNotification) {
	s.Notifications = val
}

// SetComponents sets the value of Components.
func (s *DbaasServiceRedis) SetComponents(val []DbaasServiceRedisComponentsItem) {
	s.Components = val
}

// SetMaintenance sets the value of Maintenance.
func (s *DbaasServiceRedis) SetMaintenance(val OptDbaasServiceMaintenance) {
	s.Maintenance = val
}

// SetDiskMinusSize sets the value of DiskMinusSize.
func (s *DbaasServiceRedis) SetDiskMinusSize(val OptInt64) {
	s.DiskMinusSize = val
}

// SetNodeMinusMemory sets the value of NodeMinusMemory.
func (s *DbaasServiceRedis) SetNodeMinusMemory(val OptInt64) {
	s.NodeMinusMemory = val
}

// SetURI sets the value of URI.
func (s *DbaasServiceRedis) SetURI(val OptString) {
	s.URI = val
}

// SetURIMinusParams sets the value of URIMinusParams.
func (s *DbaasServiceRedis) SetURIMinusParams(val *DbaasServiceRedisURIMinusParams) {
	s.URIMinusParams = val
}

// SetVersion sets the value of Version.
func (s *DbaasServiceRedis) SetVersion(val OptString) {
	s.Version = val
}

// SetCreatedMinusAt sets the value of CreatedMinusAt.
func (s *DbaasServiceRedis) SetCreatedMinusAt(val OptDateTime) {
	s.CreatedMinusAt = val
}

// SetPlan sets the value of Plan.
func (s *DbaasServiceRedis) SetPlan(val string) {
	s.Plan = val
}

// SetUsers sets the value of Users.
func (s *DbaasServiceRedis) SetUsers(val []DbaasServiceRedisUsersItem) {
	s.Users = val
}

type DbaasServiceRedisComponentsItem struct {
	// Service component name.
	Component string `json:"component"`
	// DNS name for connecting to the service component.
	Host string `json:"host"`
	// Port number for connecting to the service component.
	Port int64 `json:"port"`
	// Network access route.
	Route EnumComponentRoute `json:"route"`
	// Whether the endpoint is encrypted or accepts plaintext.
	// By default endpoints are always encrypted and
	// this property is only included for service components that may disable encryption.
	Ssl OptBool `json:"ssl"`
	// DNS usage name.
	Usage EnumComponentUsage `json:"usage"`
}

// GetComponent returns the value of Component.
func (s *DbaasServiceRedisComponentsItem) GetComponent() string {
	return s.Component
}

// GetHost returns the value of Host.
func (s *DbaasServiceRedisComponentsItem) GetHost() string {
	return s.Host
}

// GetPort returns the value of Port.
func (s *DbaasServiceRedisComponentsItem) GetPort() int64 {
	return s.Port
}

// GetRoute returns the value of Route.
func (s *DbaasServiceRedisComponentsItem) GetRoute() EnumComponentRoute {
	return s.Route
}

// GetSsl returns the value of Ssl.
func (s *DbaasServiceRedisComponentsItem) GetSsl() OptBool {
	return s.Ssl
}

// GetUsage returns the value of Usage.
func (s *DbaasServiceRedisComponentsItem) GetUsage() EnumComponentUsage {
	return s.Usage
}

// SetComponent sets the value of Component.
func (s *DbaasServiceRedisComponentsItem) SetComponent(val string) {
	s.Component = val
}

// SetHost sets the value of Host.
func (s *DbaasServiceRedisComponentsItem) SetHost(val string) {
	s.Host = val
}

// SetPort sets the value of Port.
func (s *DbaasServiceRedisComponentsItem) SetPort(val int64) {
	s.Port = val
}

// SetRoute sets the value of Route.
func (s *DbaasServiceRedisComponentsItem) SetRoute(val EnumComponentRoute) {
	s.Route = val
}

// SetSsl sets the value of Ssl.
func (s *DbaasServiceRedisComponentsItem) SetSsl(val OptBool) {
	s.Ssl = val
}

// SetUsage sets the value of Usage.
func (s *DbaasServiceRedisComponentsItem) SetUsage(val EnumComponentUsage) {
	s.Usage = val
}

// Redis connection information properties.
type DbaasServiceRedisConnectionMinusInfo struct {
	URI      []string  `json:"uri"`
	Password OptString `json:"password"`
	Slave    []string  `json:"slave"`
}

// GetURI returns the value of URI.
func (s *DbaasServiceRedisConnectionMinusInfo) GetURI() []string {
	return s.URI
}

// GetPassword returns the value of Password.
func (s *DbaasServiceRedisConnectionMinusInfo) GetPassword() OptString {
	return s.Password
}

// GetSlave returns the value of Slave.
func (s *DbaasServiceRedisConnectionMinusInfo) GetSlave() []string {
	return s.Slave
}

// SetURI sets the value of URI.
func (s *DbaasServiceRedisConnectionMinusInfo) SetURI(val []string) {
	s.URI = val
}

// SetPassword sets the value of Password.
func (s *DbaasServiceRedisConnectionMinusInfo) SetPassword(val OptString) {
	s.Password = val
}

// SetSlave sets the value of Slave.
func (s *DbaasServiceRedisConnectionMinusInfo) SetSlave(val []string) {
	s.Slave = val
}

// Redis-specific settings.
type DbaasServiceRedisRedisMinusSettings struct{}

// Service_uri parameterized into key-value pairs.
type DbaasServiceRedisURIMinusParams struct{}

type DbaasServiceRedisUsersItem struct {
	Type               OptString                                       `json:"type"`
	Username           OptString                                       `json:"username"`
	Password           OptString                                       `json:"password"`
	AccessMinusControl OptDbaasServiceRedisUsersItemAccessMinusControl `json:"access-control"`
}

// GetType returns the value of Type.
func (s *DbaasServiceRedisUsersItem) GetType() OptString {
	return s.Type
}

// GetUsername returns the value of Username.
func (s *DbaasServiceRedisUsersItem) GetUsername() OptString {
	return s.Username
}

// GetPassword returns the value of Password.
func (s *DbaasServiceRedisUsersItem) GetPassword() OptString {
	return s.Password
}

// GetAccessMinusControl returns the value of AccessMinusControl.
func (s *DbaasServiceRedisUsersItem) GetAccessMinusControl() OptDbaasServiceRedisUsersItemAccessMinusControl {
	return s.AccessMinusControl
}

// SetType sets the value of Type.
func (s *DbaasServiceRedisUsersItem) SetType(val OptString) {
	s.Type = val
}

// SetUsername sets the value of Username.
func (s *DbaasServiceRedisUsersItem) SetUsername(val OptString) {
	s.Username = val
}

// SetPassword sets the value of Password.
func (s *DbaasServiceRedisUsersItem) SetPassword(val OptString) {
	s.Password = val
}

// SetAccessMinusControl sets the value of AccessMinusControl.
func (s *DbaasServiceRedisUsersItem) SetAccessMinusControl(val OptDbaasServiceRedisUsersItemAccessMinusControl) {
	s.AccessMinusControl = val
}

type DbaasServiceRedisUsersItemAccessMinusControl struct {
	Categories []string `json:"categories"`
	Channels   []string `json:"channels"`
	Commands   []string `json:"commands"`
	Keys       []string `json:"keys"`
}

// GetCategories returns the value of Categories.
func (s *DbaasServiceRedisUsersItemAccessMinusControl) GetCategories() []string {
	return s.Categories
}

// GetChannels returns the value of Channels.
func (s *DbaasServiceRedisUsersItemAccessMinusControl) GetChannels() []string {
	return s.Channels
}

// GetCommands returns the value of Commands.
func (s *DbaasServiceRedisUsersItemAccessMinusControl) GetCommands() []string {
	return s.Commands
}

// GetKeys returns the value of Keys.
func (s *DbaasServiceRedisUsersItemAccessMinusControl) GetKeys() []string {
	return s.Keys
}

// SetCategories sets the value of Categories.
func (s *DbaasServiceRedisUsersItemAccessMinusControl) SetCategories(val []string) {
	s.Categories = val
}

// SetChannels sets the value of Channels.
func (s *DbaasServiceRedisUsersItemAccessMinusControl) SetChannels(val []string) {
	s.Channels = val
}

// SetCommands sets the value of Commands.
func (s *DbaasServiceRedisUsersItemAccessMinusControl) SetCommands(val []string) {
	s.Commands = val
}

// SetKeys sets the value of Keys.
func (s *DbaasServiceRedisUsersItemAccessMinusControl) SetKeys(val []string) {
	s.Keys = val
}

// DBaaS service.
// Ref: #/components/schemas/dbaas-service-type
type DbaasServiceType struct {
	// DbaaS service name.
	Name OptDbaasServiceTypeName `json:"name"`
	// DbaaS service available versions.
	AvailableMinusVersions []string `json:"available-versions"`
	// DbaaS service default version.
	DefaultMinusVersion OptString `json:"default-version"`
	// DbaaS service description.
	Description OptString `json:"description"`
	// DbaaS service plans.
	Plans []DbaasPlan `json:"plans"`
}

// GetName returns the value of Name.
func (s *DbaasServiceType) GetName() OptDbaasServiceTypeName {
	return s.Name
}

// GetAvailableMinusVersions returns the value of AvailableMinusVersions.
func (s *DbaasServiceType) GetAvailableMinusVersions() []string {
	return s.AvailableMinusVersions
}

// GetDefaultMinusVersion returns the value of DefaultMinusVersion.
func (s *DbaasServiceType) GetDefaultMinusVersion() OptString {
	return s.DefaultMinusVersion
}

// GetDescription returns the value of Description.
func (s *DbaasServiceType) GetDescription() OptString {
	return s.Description
}

// GetPlans returns the value of Plans.
func (s *DbaasServiceType) GetPlans() []DbaasPlan {
	return s.Plans
}

// SetName sets the value of Name.
func (s *DbaasServiceType) SetName(val OptDbaasServiceTypeName) {
	s.Name = val
}

// SetAvailableMinusVersions sets the value of AvailableMinusVersions.
func (s *DbaasServiceType) SetAvailableMinusVersions(val []string) {
	s.AvailableMinusVersions = val
}

// SetDefaultMinusVersion sets the value of DefaultMinusVersion.
func (s *DbaasServiceType) SetDefaultMinusVersion(val OptString) {
	s.DefaultMinusVersion = val
}

// SetDescription sets the value of Description.
func (s *DbaasServiceType) SetDescription(val OptString) {
	s.Description = val
}

// SetPlans sets the value of Plans.
func (s *DbaasServiceType) SetPlans(val []DbaasPlan) {
	s.Plans = val
}

type DbaasServiceTypeName string

// Update waiting to be installed.
// Ref: #/components/schemas/dbaas-service-update
type DbaasServiceUpdate struct {
	// Description of the update.
	Description OptString `json:"description"`
	// Deadline for installing the update.
	Deadline OptDateTime `json:"deadline"`
	// The earliest time the update will be automatically applied.
	StartMinusAfter OptDateTime `json:"start-after"`
	// The time when the update will be automatically applied.
	StartMinusAt OptDateTime `json:"start-at"`
}

// GetDescription returns the value of Description.
func (s *DbaasServiceUpdate) GetDescription() OptString {
	return s.Description
}

// GetDeadline returns the value of Deadline.
func (s *DbaasServiceUpdate) GetDeadline() OptDateTime {
	return s.Deadline
}

// GetStartMinusAfter returns the value of StartMinusAfter.
func (s *DbaasServiceUpdate) GetStartMinusAfter() OptDateTime {
	return s.StartMinusAfter
}

// GetStartMinusAt returns the value of StartMinusAt.
func (s *DbaasServiceUpdate) GetStartMinusAt() OptDateTime {
	return s.StartMinusAt
}

// SetDescription sets the value of Description.
func (s *DbaasServiceUpdate) SetDescription(val OptString) {
	s.Description = val
}

// SetDeadline sets the value of Deadline.
func (s *DbaasServiceUpdate) SetDeadline(val OptDateTime) {
	s.Deadline = val
}

// SetStartMinusAfter sets the value of StartMinusAfter.
func (s *DbaasServiceUpdate) SetStartMinusAfter(val OptDateTime) {
	s.StartMinusAfter = val
}

// SetStartMinusAt sets the value of StartMinusAt.
func (s *DbaasServiceUpdate) SetStartMinusAt(val OptDateTime) {
	s.StartMinusAt = val
}

type DbaasUserPassword string

type DbaasUserUsername string

// Deploy target.
// Ref: #/components/schemas/deploy-target
type DeployTarget struct {
	// Deploy Target ID.
	ID uuid.UUID `json:"id"`
	// Deploy Target name.
	Name OptString `json:"name"`
	// Deploy Target type.
	Type OptDeployTargetType `json:"type"`
	// Deploy Target description.
	Description OptString `json:"description"`
}

// GetID returns the value of ID.
func (s *DeployTarget) GetID() uuid.UUID {
	return s.ID
}

// GetName returns the value of Name.
func (s *DeployTarget) GetName() OptString {
	return s.Name
}

// GetType returns the value of Type.
func (s *DeployTarget) GetType() OptDeployTargetType {
	return s.Type
}

// GetDescription returns the value of Description.
func (s *DeployTarget) GetDescription() OptString {
	return s.Description
}

// SetID sets the value of ID.
func (s *DeployTarget) SetID(val uuid.UUID) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *DeployTarget) SetName(val OptString) {
	s.Name = val
}

// SetType sets the value of Type.
func (s *DeployTarget) SetType(val OptDeployTargetType) {
	s.Type = val
}

// SetDescription sets the value of Description.
func (s *DeployTarget) SetDescription(val OptString) {
	s.Description = val
}

// Deploy Target type.
type DeployTargetType string

const (
	DeployTargetTypeEdge      DeployTargetType = "edge"
	DeployTargetTypeDedicated DeployTargetType = "dedicated"
)

// MarshalText implements encoding.TextMarshaler.
func (s DeployTargetType) MarshalText() ([]byte, error) {
	switch s {
	case DeployTargetTypeEdge:
		return []byte(s), nil
	case DeployTargetTypeDedicated:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *DeployTargetType) UnmarshalText(data []byte) error {
	switch DeployTargetType(data) {
	case DeployTargetTypeEdge:
		*s = DeployTargetTypeEdge
		return nil
	case DeployTargetTypeDedicated:
		*s = DeployTargetTypeDedicated
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type DomainName string

// Elastic IP.
// Ref: #/components/schemas/elastic-ip
type ElasticIP struct {
	// Elastic IP ID.
	ID OptUUID `json:"id"`
	// Elastic IP address.
	IP OptString `json:"ip"`
	// Elastic IP address family.
	Addressfamily OptElasticIPAddressfamily `json:"addressfamily"`
	// Elastic IP cidr.
	Cidr OptString `json:"cidr"`
	// Elastic IP description.
	Description OptString `json:"description"`
	// Elastic IP healthcheck.
	Healthcheck OptElasticIPHealthcheck `json:"healthcheck"`
	// Elastic IP labels.
	Labels OptLabels `json:"labels"`
}

// GetID returns the value of ID.
func (s *ElasticIP) GetID() OptUUID {
	return s.ID
}

// GetIP returns the value of IP.
func (s *ElasticIP) GetIP() OptString {
	return s.IP
}

// GetAddressfamily returns the value of Addressfamily.
func (s *ElasticIP) GetAddressfamily() OptElasticIPAddressfamily {
	return s.Addressfamily
}

// GetCidr returns the value of Cidr.
func (s *ElasticIP) GetCidr() OptString {
	return s.Cidr
}

// GetDescription returns the value of Description.
func (s *ElasticIP) GetDescription() OptString {
	return s.Description
}

// GetHealthcheck returns the value of Healthcheck.
func (s *ElasticIP) GetHealthcheck() OptElasticIPHealthcheck {
	return s.Healthcheck
}

// GetLabels returns the value of Labels.
func (s *ElasticIP) GetLabels() OptLabels {
	return s.Labels
}

// SetID sets the value of ID.
func (s *ElasticIP) SetID(val OptUUID) {
	s.ID = val
}

// SetIP sets the value of IP.
func (s *ElasticIP) SetIP(val OptString) {
	s.IP = val
}

// SetAddressfamily sets the value of Addressfamily.
func (s *ElasticIP) SetAddressfamily(val OptElasticIPAddressfamily) {
	s.Addressfamily = val
}

// SetCidr sets the value of Cidr.
func (s *ElasticIP) SetCidr(val OptString) {
	s.Cidr = val
}

// SetDescription sets the value of Description.
func (s *ElasticIP) SetDescription(val OptString) {
	s.Description = val
}

// SetHealthcheck sets the value of Healthcheck.
func (s *ElasticIP) SetHealthcheck(val OptElasticIPHealthcheck) {
	s.Healthcheck = val
}

// SetLabels sets the value of Labels.
func (s *ElasticIP) SetLabels(val OptLabels) {
	s.Labels = val
}

// Elastic IP address family.
type ElasticIPAddressfamily string

const (
	ElasticIPAddressfamilyInet4 ElasticIPAddressfamily = "inet4"
	ElasticIPAddressfamilyInet6 ElasticIPAddressfamily = "inet6"
)

// MarshalText implements encoding.TextMarshaler.
func (s ElasticIPAddressfamily) MarshalText() ([]byte, error) {
	switch s {
	case ElasticIPAddressfamilyInet4:
		return []byte(s), nil
	case ElasticIPAddressfamilyInet6:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *ElasticIPAddressfamily) UnmarshalText(data []byte) error {
	switch ElasticIPAddressfamily(data) {
	case ElasticIPAddressfamilyInet4:
		*s = ElasticIPAddressfamilyInet4
		return nil
	case ElasticIPAddressfamilyInet6:
		*s = ElasticIPAddressfamilyInet6
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Elastic IP address healthcheck.
// Ref: #/components/schemas/elastic-ip-healthcheck
type ElasticIPHealthcheck struct {
	// Number of attempts before considering the target healthy (default: 2).
	StrikesMinusOk OptInt64 `json:"strikes-ok"`
	// Skip TLS verification.
	TLSMinusSkipMinusVerify OptBool `json:"tls-skip-verify"`
	// An optional domain or subdomain to check TLS against.
	TLSMinusSni OptString `json:"tls-sni"`
	// Number of attempts before considering the target unhealthy (default: 3).
	StrikesMinusFail OptInt64 `json:"strikes-fail"`
	// Health check mode.
	Mode ElasticIPHealthcheckMode `json:"mode"`
	// Health check port.
	Port int64 `json:"port"`
	// An endpoint to use for the health check, for example '/status'.
	URI OptString `json:"uri"`
	// Interval between the checks in seconds (default: 10).
	Interval OptInt64 `json:"interval"`
	// Health check timeout value in seconds (default: 2).
	Timeout OptInt64 `json:"timeout"`
}

// GetStrikesMinusOk returns the value of StrikesMinusOk.
func (s *ElasticIPHealthcheck) GetStrikesMinusOk() OptInt64 {
	return s.StrikesMinusOk
}

// GetTLSMinusSkipMinusVerify returns the value of TLSMinusSkipMinusVerify.
func (s *ElasticIPHealthcheck) GetTLSMinusSkipMinusVerify() OptBool {
	return s.TLSMinusSkipMinusVerify
}

// GetTLSMinusSni returns the value of TLSMinusSni.
func (s *ElasticIPHealthcheck) GetTLSMinusSni() OptString {
	return s.TLSMinusSni
}

// GetStrikesMinusFail returns the value of StrikesMinusFail.
func (s *ElasticIPHealthcheck) GetStrikesMinusFail() OptInt64 {
	return s.StrikesMinusFail
}

// GetMode returns the value of Mode.
func (s *ElasticIPHealthcheck) GetMode() ElasticIPHealthcheckMode {
	return s.Mode
}

// GetPort returns the value of Port.
func (s *ElasticIPHealthcheck) GetPort() int64 {
	return s.Port
}

// GetURI returns the value of URI.
func (s *ElasticIPHealthcheck) GetURI() OptString {
	return s.URI
}

// GetInterval returns the value of Interval.
func (s *ElasticIPHealthcheck) GetInterval() OptInt64 {
	return s.Interval
}

// GetTimeout returns the value of Timeout.
func (s *ElasticIPHealthcheck) GetTimeout() OptInt64 {
	return s.Timeout
}

// SetStrikesMinusOk sets the value of StrikesMinusOk.
func (s *ElasticIPHealthcheck) SetStrikesMinusOk(val OptInt64) {
	s.StrikesMinusOk = val
}

// SetTLSMinusSkipMinusVerify sets the value of TLSMinusSkipMinusVerify.
func (s *ElasticIPHealthcheck) SetTLSMinusSkipMinusVerify(val OptBool) {
	s.TLSMinusSkipMinusVerify = val
}

// SetTLSMinusSni sets the value of TLSMinusSni.
func (s *ElasticIPHealthcheck) SetTLSMinusSni(val OptString) {
	s.TLSMinusSni = val
}

// SetStrikesMinusFail sets the value of StrikesMinusFail.
func (s *ElasticIPHealthcheck) SetStrikesMinusFail(val OptInt64) {
	s.StrikesMinusFail = val
}

// SetMode sets the value of Mode.
func (s *ElasticIPHealthcheck) SetMode(val ElasticIPHealthcheckMode) {
	s.Mode = val
}

// SetPort sets the value of Port.
func (s *ElasticIPHealthcheck) SetPort(val int64) {
	s.Port = val
}

// SetURI sets the value of URI.
func (s *ElasticIPHealthcheck) SetURI(val OptString) {
	s.URI = val
}

// SetInterval sets the value of Interval.
func (s *ElasticIPHealthcheck) SetInterval(val OptInt64) {
	s.Interval = val
}

// SetTimeout sets the value of Timeout.
func (s *ElasticIPHealthcheck) SetTimeout(val OptInt64) {
	s.Timeout = val
}

// Health check mode.
type ElasticIPHealthcheckMode string

const (
	ElasticIPHealthcheckModeTCP   ElasticIPHealthcheckMode = "tcp"
	ElasticIPHealthcheckModeHTTP  ElasticIPHealthcheckMode = "http"
	ElasticIPHealthcheckModeHTTPS ElasticIPHealthcheckMode = "https"
)

// MarshalText implements encoding.TextMarshaler.
func (s ElasticIPHealthcheckMode) MarshalText() ([]byte, error) {
	switch s {
	case ElasticIPHealthcheckModeTCP:
		return []byte(s), nil
	case ElasticIPHealthcheckModeHTTP:
		return []byte(s), nil
	case ElasticIPHealthcheckModeHTTPS:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *ElasticIPHealthcheckMode) UnmarshalText(data []byte) error {
	switch ElasticIPHealthcheckMode(data) {
	case ElasticIPHealthcheckModeTCP:
		*s = ElasticIPHealthcheckModeTCP
		return nil
	case ElasticIPHealthcheckModeHTTP:
		*s = ElasticIPHealthcheckModeHTTP
		return nil
	case ElasticIPHealthcheckModeHTTPS:
		*s = ElasticIPHealthcheckModeHTTPS
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/enum-component-route
type EnumComponentRoute string

const (
	EnumComponentRouteDynamic     EnumComponentRoute = "dynamic"
	EnumComponentRoutePrivate     EnumComponentRoute = "private"
	EnumComponentRoutePublic      EnumComponentRoute = "public"
	EnumComponentRoutePrivatelink EnumComponentRoute = "privatelink"
)

// MarshalText implements encoding.TextMarshaler.
func (s EnumComponentRoute) MarshalText() ([]byte, error) {
	switch s {
	case EnumComponentRouteDynamic:
		return []byte(s), nil
	case EnumComponentRoutePrivate:
		return []byte(s), nil
	case EnumComponentRoutePublic:
		return []byte(s), nil
	case EnumComponentRoutePrivatelink:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *EnumComponentRoute) UnmarshalText(data []byte) error {
	switch EnumComponentRoute(data) {
	case EnumComponentRouteDynamic:
		*s = EnumComponentRouteDynamic
		return nil
	case EnumComponentRoutePrivate:
		*s = EnumComponentRoutePrivate
		return nil
	case EnumComponentRoutePublic:
		*s = EnumComponentRoutePublic
		return nil
	case EnumComponentRoutePrivatelink:
		*s = EnumComponentRoutePrivatelink
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/enum-component-usage
type EnumComponentUsage string

const (
	EnumComponentUsagePrimary EnumComponentUsage = "primary"
	EnumComponentUsageReplica EnumComponentUsage = "replica"
)

// MarshalText implements encoding.TextMarshaler.
func (s EnumComponentUsage) MarshalText() ([]byte, error) {
	switch s {
	case EnumComponentUsagePrimary:
		return []byte(s), nil
	case EnumComponentUsageReplica:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *EnumComponentUsage) UnmarshalText(data []byte) error {
	switch EnumComponentUsage(data) {
	case EnumComponentUsagePrimary:
		*s = EnumComponentUsagePrimary
		return nil
	case EnumComponentUsageReplica:
		*s = EnumComponentUsageReplica
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/enum-integration-types
type EnumIntegrationTypes string

const (
	EnumIntegrationTypesDatasource  EnumIntegrationTypes = "datasource"
	EnumIntegrationTypesReadReplica EnumIntegrationTypes = "read_replica"
	EnumIntegrationTypesMetrics     EnumIntegrationTypes = "metrics"
)

// MarshalText implements encoding.TextMarshaler.
func (s EnumIntegrationTypes) MarshalText() ([]byte, error) {
	switch s {
	case EnumIntegrationTypesDatasource:
		return []byte(s), nil
	case EnumIntegrationTypesReadReplica:
		return []byte(s), nil
	case EnumIntegrationTypesMetrics:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *EnumIntegrationTypes) UnmarshalText(data []byte) error {
	switch EnumIntegrationTypes(data) {
	case EnumIntegrationTypesDatasource:
		*s = EnumIntegrationTypesDatasource
		return nil
	case EnumIntegrationTypesReadReplica:
		*s = EnumIntegrationTypesReadReplica
		return nil
	case EnumIntegrationTypesMetrics:
		*s = EnumIntegrationTypesMetrics
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/enum-kafka-auth-method
type EnumKafkaAuthMethod string

const (
	EnumKafkaAuthMethodCertificate EnumKafkaAuthMethod = "certificate"
	EnumKafkaAuthMethodSasl        EnumKafkaAuthMethod = "sasl"
)

// MarshalText implements encoding.TextMarshaler.
func (s EnumKafkaAuthMethod) MarshalText() ([]byte, error) {
	switch s {
	case EnumKafkaAuthMethodCertificate:
		return []byte(s), nil
	case EnumKafkaAuthMethodSasl:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *EnumKafkaAuthMethod) UnmarshalText(data []byte) error {
	switch EnumKafkaAuthMethod(data) {
	case EnumKafkaAuthMethodCertificate:
		*s = EnumKafkaAuthMethodCertificate
		return nil
	case EnumKafkaAuthMethodSasl:
		*s = EnumKafkaAuthMethodSasl
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/enum-master-link-status
type EnumMasterLinkStatus string

const (
	EnumMasterLinkStatusUp   EnumMasterLinkStatus = "up"
	EnumMasterLinkStatusDown EnumMasterLinkStatus = "down"
)

// MarshalText implements encoding.TextMarshaler.
func (s EnumMasterLinkStatus) MarshalText() ([]byte, error) {
	switch s {
	case EnumMasterLinkStatusUp:
		return []byte(s), nil
	case EnumMasterLinkStatusDown:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *EnumMasterLinkStatus) UnmarshalText(data []byte) error {
	switch EnumMasterLinkStatus(data) {
	case EnumMasterLinkStatusUp:
		*s = EnumMasterLinkStatusUp
		return nil
	case EnumMasterLinkStatusDown:
		*s = EnumMasterLinkStatusDown
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/enum-migration-method
type EnumMigrationMethod string

const (
	EnumMigrationMethodDump        EnumMigrationMethod = "dump"
	EnumMigrationMethodReplication EnumMigrationMethod = "replication"
)

// MarshalText implements encoding.TextMarshaler.
func (s EnumMigrationMethod) MarshalText() ([]byte, error) {
	switch s {
	case EnumMigrationMethodDump:
		return []byte(s), nil
	case EnumMigrationMethodReplication:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *EnumMigrationMethod) UnmarshalText(data []byte) error {
	switch EnumMigrationMethod(data) {
	case EnumMigrationMethodDump:
		*s = EnumMigrationMethodDump
		return nil
	case EnumMigrationMethodReplication:
		*s = EnumMigrationMethodReplication
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/enum-migration-status
type EnumMigrationStatus string

const (
	EnumMigrationStatusRunning EnumMigrationStatus = "running"
	EnumMigrationStatusSyncing EnumMigrationStatus = "syncing"
	EnumMigrationStatusFailed  EnumMigrationStatus = "failed"
	EnumMigrationStatusDone    EnumMigrationStatus = "done"
)

// MarshalText implements encoding.TextMarshaler.
func (s EnumMigrationStatus) MarshalText() ([]byte, error) {
	switch s {
	case EnumMigrationStatusRunning:
		return []byte(s), nil
	case EnumMigrationStatusSyncing:
		return []byte(s), nil
	case EnumMigrationStatusFailed:
		return []byte(s), nil
	case EnumMigrationStatusDone:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *EnumMigrationStatus) UnmarshalText(data []byte) error {
	switch EnumMigrationStatus(data) {
	case EnumMigrationStatusRunning:
		*s = EnumMigrationStatusRunning
		return nil
	case EnumMigrationStatusSyncing:
		*s = EnumMigrationStatusSyncing
		return nil
	case EnumMigrationStatusFailed:
		*s = EnumMigrationStatusFailed
		return nil
	case EnumMigrationStatusDone:
		*s = EnumMigrationStatusDone
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/enum-pg-pool-mode
type EnumPgPoolMode string

const (
	EnumPgPoolModeTransaction EnumPgPoolMode = "transaction"
	EnumPgPoolModeStatement   EnumPgPoolMode = "statement"
	EnumPgPoolModeSession     EnumPgPoolMode = "session"
)

// MarshalText implements encoding.TextMarshaler.
func (s EnumPgPoolMode) MarshalText() ([]byte, error) {
	switch s {
	case EnumPgPoolModeTransaction:
		return []byte(s), nil
	case EnumPgPoolModeStatement:
		return []byte(s), nil
	case EnumPgPoolModeSession:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *EnumPgPoolMode) UnmarshalText(data []byte) error {
	switch EnumPgPoolMode(data) {
	case EnumPgPoolModeTransaction:
		*s = EnumPgPoolModeTransaction
		return nil
	case EnumPgPoolModeStatement:
		*s = EnumPgPoolModeStatement
		return nil
	case EnumPgPoolModeSession:
		*s = EnumPgPoolModeSession
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/enum-pg-synchronous-replication
type EnumPgSynchronousReplication string

const (
	EnumPgSynchronousReplicationQuorum EnumPgSynchronousReplication = "quorum"
	EnumPgSynchronousReplicationOff    EnumPgSynchronousReplication = "off"
)

// MarshalText implements encoding.TextMarshaler.
func (s EnumPgSynchronousReplication) MarshalText() ([]byte, error) {
	switch s {
	case EnumPgSynchronousReplicationQuorum:
		return []byte(s), nil
	case EnumPgSynchronousReplicationOff:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *EnumPgSynchronousReplication) UnmarshalText(data []byte) error {
	switch EnumPgSynchronousReplication(data) {
	case EnumPgSynchronousReplicationQuorum:
		*s = EnumPgSynchronousReplicationQuorum
		return nil
	case EnumPgSynchronousReplicationOff:
		*s = EnumPgSynchronousReplicationOff
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/enum-pg-variant
type EnumPgVariant string

const (
	EnumPgVariantTimescale EnumPgVariant = "timescale"
	EnumPgVariantAiven     EnumPgVariant = "aiven"
)

// MarshalText implements encoding.TextMarshaler.
func (s EnumPgVariant) MarshalText() ([]byte, error) {
	switch s {
	case EnumPgVariantTimescale:
		return []byte(s), nil
	case EnumPgVariantAiven:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *EnumPgVariant) UnmarshalText(data []byte) error {
	switch EnumPgVariant(data) {
	case EnumPgVariantTimescale:
		*s = EnumPgVariantTimescale
		return nil
	case EnumPgVariantAiven:
		*s = EnumPgVariantAiven
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/enum-service-state
type EnumServiceState string

const (
	EnumServiceStateRunning     EnumServiceState = "running"
	EnumServiceStateRebuilding  EnumServiceState = "rebuilding"
	EnumServiceStateRebalancing EnumServiceState = "rebalancing"
	EnumServiceStatePoweroff    EnumServiceState = "poweroff"
)

// MarshalText implements encoding.TextMarshaler.
func (s EnumServiceState) MarshalText() ([]byte, error) {
	switch s {
	case EnumServiceStateRunning:
		return []byte(s), nil
	case EnumServiceStateRebuilding:
		return []byte(s), nil
	case EnumServiceStateRebalancing:
		return []byte(s), nil
	case EnumServiceStatePoweroff:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *EnumServiceState) UnmarshalText(data []byte) error {
	switch EnumServiceState(data) {
	case EnumServiceStateRunning:
		*s = EnumServiceStateRunning
		return nil
	case EnumServiceStateRebuilding:
		*s = EnumServiceStateRebuilding
		return nil
	case EnumServiceStateRebalancing:
		*s = EnumServiceStateRebalancing
		return nil
	case EnumServiceStatePoweroff:
		*s = EnumServiceStatePoweroff
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/enum-sort-order
type EnumSortOrder string

const (
	EnumSortOrderDesc EnumSortOrder = "desc"
	EnumSortOrderAsc  EnumSortOrder = "asc"
)

// MarshalText implements encoding.TextMarshaler.
func (s EnumSortOrder) MarshalText() ([]byte, error) {
	switch s {
	case EnumSortOrderDesc:
		return []byte(s), nil
	case EnumSortOrderAsc:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *EnumSortOrder) UnmarshalText(data []byte) error {
	switch EnumSortOrder(data) {
	case EnumSortOrderDesc:
		*s = EnumSortOrderDesc
		return nil
	case EnumSortOrderAsc:
		*s = EnumSortOrderAsc
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// A notable Mutation Event which happened on the infrastructure.
// Ref: #/components/schemas/event
type Event struct {
	// Operation unique identifier.
	RequestMinusID OptString `json:"request-id"`
	// Operation targeted zone.
	Zone OptString `json:"zone"`
	// Client IP address.
	RemoteMinusAddr OptString `json:"remote-addr"`
	// Query string parameters (free form map).
	GetMinusParams *EventGetMinusParams `json:"get-params"`
	// Body parameters (free form map).
	BodyMinusParams *EventBodyMinusParams `json:"body-params"`
	// Operation HTTP status.
	Status OptInt64 `json:"status"`
	// Operation request URI.
	URI OptString `json:"uri"`
	// Operation processing time.
	ElapsedMinusMs OptInt64 `json:"elapsed-ms"`
	// Time at which the event happened, millisecond resolution.
	Timestamp OptDateTime `json:"timestamp"`
	// URI path parameters (free form map).
	PathMinusParams *EventPathMinusParams `json:"path-params"`
	// Operation handler name.
	Handler OptString `json:"handler"`
	// Operation message.
	Message OptString `json:"message"`
}

// GetRequestMinusID returns the value of RequestMinusID.
func (s *Event) GetRequestMinusID() OptString {
	return s.RequestMinusID
}

// GetZone returns the value of Zone.
func (s *Event) GetZone() OptString {
	return s.Zone
}

// GetRemoteMinusAddr returns the value of RemoteMinusAddr.
func (s *Event) GetRemoteMinusAddr() OptString {
	return s.RemoteMinusAddr
}

// GetGetMinusParams returns the value of GetMinusParams.
func (s *Event) GetGetMinusParams() *EventGetMinusParams {
	return s.GetMinusParams
}

// GetBodyMinusParams returns the value of BodyMinusParams.
func (s *Event) GetBodyMinusParams() *EventBodyMinusParams {
	return s.BodyMinusParams
}

// GetStatus returns the value of Status.
func (s *Event) GetStatus() OptInt64 {
	return s.Status
}

// GetURI returns the value of URI.
func (s *Event) GetURI() OptString {
	return s.URI
}

// GetElapsedMinusMs returns the value of ElapsedMinusMs.
func (s *Event) GetElapsedMinusMs() OptInt64 {
	return s.ElapsedMinusMs
}

// GetTimestamp returns the value of Timestamp.
func (s *Event) GetTimestamp() OptDateTime {
	return s.Timestamp
}

// GetPathMinusParams returns the value of PathMinusParams.
func (s *Event) GetPathMinusParams() *EventPathMinusParams {
	return s.PathMinusParams
}

// GetHandler returns the value of Handler.
func (s *Event) GetHandler() OptString {
	return s.Handler
}

// GetMessage returns the value of Message.
func (s *Event) GetMessage() OptString {
	return s.Message
}

// SetRequestMinusID sets the value of RequestMinusID.
func (s *Event) SetRequestMinusID(val OptString) {
	s.RequestMinusID = val
}

// SetZone sets the value of Zone.
func (s *Event) SetZone(val OptString) {
	s.Zone = val
}

// SetRemoteMinusAddr sets the value of RemoteMinusAddr.
func (s *Event) SetRemoteMinusAddr(val OptString) {
	s.RemoteMinusAddr = val
}

// SetGetMinusParams sets the value of GetMinusParams.
func (s *Event) SetGetMinusParams(val *EventGetMinusParams) {
	s.GetMinusParams = val
}

// SetBodyMinusParams sets the value of BodyMinusParams.
func (s *Event) SetBodyMinusParams(val *EventBodyMinusParams) {
	s.BodyMinusParams = val
}

// SetStatus sets the value of Status.
func (s *Event) SetStatus(val OptInt64) {
	s.Status = val
}

// SetURI sets the value of URI.
func (s *Event) SetURI(val OptString) {
	s.URI = val
}

// SetElapsedMinusMs sets the value of ElapsedMinusMs.
func (s *Event) SetElapsedMinusMs(val OptInt64) {
	s.ElapsedMinusMs = val
}

// SetTimestamp sets the value of Timestamp.
func (s *Event) SetTimestamp(val OptDateTime) {
	s.Timestamp = val
}

// SetPathMinusParams sets the value of PathMinusParams.
func (s *Event) SetPathMinusParams(val *EventPathMinusParams) {
	s.PathMinusParams = val
}

// SetHandler sets the value of Handler.
func (s *Event) SetHandler(val OptString) {
	s.Handler = val
}

// SetMessage sets the value of Message.
func (s *Event) SetMessage(val OptString) {
	s.Message = val
}

// Body parameters (free form map).
type EventBodyMinusParams struct{}

// Query string parameters (free form map).
type EventGetMinusParams struct{}

// URI path parameters (free form map).
type EventPathMinusParams struct{}

type EvictInstancePoolMembersReq struct {
	Instances []uuid.UUID `json:"instances"`
}

// GetInstances returns the value of Instances.
func (s *EvictInstancePoolMembersReq) GetInstances() []uuid.UUID {
	return s.Instances
}

// SetInstances sets the value of Instances.
func (s *EvictInstancePoolMembersReq) SetInstances(val []uuid.UUID) {
	s.Instances = val
}

type EvictSksNodepoolMembersReq struct {
	Instances []uuid.UUID `json:"instances"`
}

// GetInstances returns the value of Instances.
func (s *EvictSksNodepoolMembersReq) GetInstances() []uuid.UUID {
	return s.Instances
}

// SetInstances sets the value of Instances.
func (s *EvictSksNodepoolMembersReq) SetInstances(val []uuid.UUID) {
	s.Instances = val
}

type GenerateSksClusterKubeconfigOK struct {
	Kubeconfig OptString `json:"kubeconfig"`
}

// GetKubeconfig returns the value of Kubeconfig.
func (s *GenerateSksClusterKubeconfigOK) GetKubeconfig() OptString {
	return s.Kubeconfig
}

// SetKubeconfig sets the value of Kubeconfig.
func (s *GenerateSksClusterKubeconfigOK) SetKubeconfig(val OptString) {
	s.Kubeconfig = val
}

type GetDNSDomainZoneFileOK struct {
	ZoneMinusFile OptString `json:"zone-file"`
}

// GetZoneMinusFile returns the value of ZoneMinusFile.
func (s *GetDNSDomainZoneFileOK) GetZoneMinusFile() OptString {
	return s.ZoneMinusFile
}

// SetZoneMinusFile sets the value of ZoneMinusFile.
func (s *GetDNSDomainZoneFileOK) SetZoneMinusFile(val OptString) {
	s.ZoneMinusFile = val
}

type GetDbaasCaCertificateOK struct {
	Certificate OptString `json:"certificate"`
}

// GetCertificate returns the value of Certificate.
func (s *GetDbaasCaCertificateOK) GetCertificate() OptString {
	return s.Certificate
}

// SetCertificate sets the value of Certificate.
func (s *GetDbaasCaCertificateOK) SetCertificate(val OptString) {
	s.Certificate = val
}

type GetDbaasServiceLogsReq struct {
	// How many log entries to receive at most, up to 500 (default: 100).
	Limit OptInt64 `json:"limit"`
	// Sort order for log messages (default: desc).
	SortMinusOrder OptEnumSortOrder `json:"sort-order"`
	// Opaque offset identifier.
	Offset OptString `json:"offset"`
}

// GetLimit returns the value of Limit.
func (s *GetDbaasServiceLogsReq) GetLimit() OptInt64 {
	return s.Limit
}

// GetSortMinusOrder returns the value of SortMinusOrder.
func (s *GetDbaasServiceLogsReq) GetSortMinusOrder() OptEnumSortOrder {
	return s.SortMinusOrder
}

// GetOffset returns the value of Offset.
func (s *GetDbaasServiceLogsReq) GetOffset() OptString {
	return s.Offset
}

// SetLimit sets the value of Limit.
func (s *GetDbaasServiceLogsReq) SetLimit(val OptInt64) {
	s.Limit = val
}

// SetSortMinusOrder sets the value of SortMinusOrder.
func (s *GetDbaasServiceLogsReq) SetSortMinusOrder(val OptEnumSortOrder) {
	s.SortMinusOrder = val
}

// SetOffset sets the value of Offset.
func (s *GetDbaasServiceLogsReq) SetOffset(val OptString) {
	s.Offset = val
}

type GetDbaasServiceMetricsOK struct {
	Metrics *GetDbaasServiceMetricsOKMetrics `json:"metrics"`
}

// GetMetrics returns the value of Metrics.
func (s *GetDbaasServiceMetricsOK) GetMetrics() *GetDbaasServiceMetricsOKMetrics {
	return s.Metrics
}

// SetMetrics sets the value of Metrics.
func (s *GetDbaasServiceMetricsOK) SetMetrics(val *GetDbaasServiceMetricsOKMetrics) {
	s.Metrics = val
}

type GetDbaasServiceMetricsOKMetrics struct{}

type GetDbaasServiceMetricsReq struct {
	// Metrics time period (default: hour).
	Period OptGetDbaasServiceMetricsReqPeriod `json:"period"`
}

// GetPeriod returns the value of Period.
func (s *GetDbaasServiceMetricsReq) GetPeriod() OptGetDbaasServiceMetricsReqPeriod {
	return s.Period
}

// SetPeriod sets the value of Period.
func (s *GetDbaasServiceMetricsReq) SetPeriod(val OptGetDbaasServiceMetricsReqPeriod) {
	s.Period = val
}

// Metrics time period (default: hour).
type GetDbaasServiceMetricsReqPeriod string

const (
	GetDbaasServiceMetricsReqPeriodHour  GetDbaasServiceMetricsReqPeriod = "hour"
	GetDbaasServiceMetricsReqPeriodWeek  GetDbaasServiceMetricsReqPeriod = "week"
	GetDbaasServiceMetricsReqPeriodYear  GetDbaasServiceMetricsReqPeriod = "year"
	GetDbaasServiceMetricsReqPeriodMonth GetDbaasServiceMetricsReqPeriod = "month"
	GetDbaasServiceMetricsReqPeriodDay   GetDbaasServiceMetricsReqPeriod = "day"
)

// MarshalText implements encoding.TextMarshaler.
func (s GetDbaasServiceMetricsReqPeriod) MarshalText() ([]byte, error) {
	switch s {
	case GetDbaasServiceMetricsReqPeriodHour:
		return []byte(s), nil
	case GetDbaasServiceMetricsReqPeriodWeek:
		return []byte(s), nil
	case GetDbaasServiceMetricsReqPeriodYear:
		return []byte(s), nil
	case GetDbaasServiceMetricsReqPeriodMonth:
		return []byte(s), nil
	case GetDbaasServiceMetricsReqPeriodDay:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *GetDbaasServiceMetricsReqPeriod) UnmarshalText(data []byte) error {
	switch GetDbaasServiceMetricsReqPeriod(data) {
	case GetDbaasServiceMetricsReqPeriodHour:
		*s = GetDbaasServiceMetricsReqPeriodHour
		return nil
	case GetDbaasServiceMetricsReqPeriodWeek:
		*s = GetDbaasServiceMetricsReqPeriodWeek
		return nil
	case GetDbaasServiceMetricsReqPeriodYear:
		*s = GetDbaasServiceMetricsReqPeriodYear
		return nil
	case GetDbaasServiceMetricsReqPeriodMonth:
		*s = GetDbaasServiceMetricsReqPeriodMonth
		return nil
	case GetDbaasServiceMetricsReqPeriodDay:
		*s = GetDbaasServiceMetricsReqPeriodDay
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type GetDbaasSettingsKafkaOK struct {
	Settings OptGetDbaasSettingsKafkaOKSettings `json:"settings"`
}

// GetSettings returns the value of Settings.
func (s *GetDbaasSettingsKafkaOK) GetSettings() OptGetDbaasSettingsKafkaOKSettings {
	return s.Settings
}

// SetSettings sets the value of Settings.
func (s *GetDbaasSettingsKafkaOK) SetSettings(val OptGetDbaasSettingsKafkaOKSettings) {
	s.Settings = val
}

type GetDbaasSettingsKafkaOKSettings struct {
	// Kafka broker configuration values.
	Kafka OptGetDbaasSettingsKafkaOKSettingsKafka `json:"kafka"`
	// Kafka Connect configuration values.
	KafkaMinusConnect OptGetDbaasSettingsKafkaOKSettingsKafkaMinusConnect `json:"kafka-connect"`
	// Kafka REST configuration.
	KafkaMinusRest OptGetDbaasSettingsKafkaOKSettingsKafkaMinusRest `json:"kafka-rest"`
	// Schema Registry configuration.
	SchemaMinusRegistry OptGetDbaasSettingsKafkaOKSettingsSchemaMinusRegistry `json:"schema-registry"`
}

// GetKafka returns the value of Kafka.
func (s *GetDbaasSettingsKafkaOKSettings) GetKafka() OptGetDbaasSettingsKafkaOKSettingsKafka {
	return s.Kafka
}

// GetKafkaMinusConnect returns the value of KafkaMinusConnect.
func (s *GetDbaasSettingsKafkaOKSettings) GetKafkaMinusConnect() OptGetDbaasSettingsKafkaOKSettingsKafkaMinusConnect {
	return s.KafkaMinusConnect
}

// GetKafkaMinusRest returns the value of KafkaMinusRest.
func (s *GetDbaasSettingsKafkaOKSettings) GetKafkaMinusRest() OptGetDbaasSettingsKafkaOKSettingsKafkaMinusRest {
	return s.KafkaMinusRest
}

// GetSchemaMinusRegistry returns the value of SchemaMinusRegistry.
func (s *GetDbaasSettingsKafkaOKSettings) GetSchemaMinusRegistry() OptGetDbaasSettingsKafkaOKSettingsSchemaMinusRegistry {
	return s.SchemaMinusRegistry
}

// SetKafka sets the value of Kafka.
func (s *GetDbaasSettingsKafkaOKSettings) SetKafka(val OptGetDbaasSettingsKafkaOKSettingsKafka) {
	s.Kafka = val
}

// SetKafkaMinusConnect sets the value of KafkaMinusConnect.
func (s *GetDbaasSettingsKafkaOKSettings) SetKafkaMinusConnect(val OptGetDbaasSettingsKafkaOKSettingsKafkaMinusConnect) {
	s.KafkaMinusConnect = val
}

// SetKafkaMinusRest sets the value of KafkaMinusRest.
func (s *GetDbaasSettingsKafkaOKSettings) SetKafkaMinusRest(val OptGetDbaasSettingsKafkaOKSettingsKafkaMinusRest) {
	s.KafkaMinusRest = val
}

// SetSchemaMinusRegistry sets the value of SchemaMinusRegistry.
func (s *GetDbaasSettingsKafkaOKSettings) SetSchemaMinusRegistry(val OptGetDbaasSettingsKafkaOKSettingsSchemaMinusRegistry) {
	s.SchemaMinusRegistry = val
}

// Kafka broker configuration values.
type GetDbaasSettingsKafkaOKSettingsKafka struct {
	Properties           *GetDbaasSettingsKafkaOKSettingsKafkaProperties `json:"properties"`
	AdditionalProperties OptBool                                         `json:"additionalProperties"`
	Type                 OptString                                       `json:"type"`
	Title                OptString                                       `json:"title"`
}

// GetProperties returns the value of Properties.
func (s *GetDbaasSettingsKafkaOKSettingsKafka) GetProperties() *GetDbaasSettingsKafkaOKSettingsKafkaProperties {
	return s.Properties
}

// GetAdditionalProperties returns the value of AdditionalProperties.
func (s *GetDbaasSettingsKafkaOKSettingsKafka) GetAdditionalProperties() OptBool {
	return s.AdditionalProperties
}

// GetType returns the value of Type.
func (s *GetDbaasSettingsKafkaOKSettingsKafka) GetType() OptString {
	return s.Type
}

// GetTitle returns the value of Title.
func (s *GetDbaasSettingsKafkaOKSettingsKafka) GetTitle() OptString {
	return s.Title
}

// SetProperties sets the value of Properties.
func (s *GetDbaasSettingsKafkaOKSettingsKafka) SetProperties(val *GetDbaasSettingsKafkaOKSettingsKafkaProperties) {
	s.Properties = val
}

// SetAdditionalProperties sets the value of AdditionalProperties.
func (s *GetDbaasSettingsKafkaOKSettingsKafka) SetAdditionalProperties(val OptBool) {
	s.AdditionalProperties = val
}

// SetType sets the value of Type.
func (s *GetDbaasSettingsKafkaOKSettingsKafka) SetType(val OptString) {
	s.Type = val
}

// SetTitle sets the value of Title.
func (s *GetDbaasSettingsKafkaOKSettingsKafka) SetTitle(val OptString) {
	s.Title = val
}

// Kafka Connect configuration values.
type GetDbaasSettingsKafkaOKSettingsKafkaMinusConnect struct {
	Properties           *GetDbaasSettingsKafkaOKSettingsKafkaMinusConnectProperties `json:"properties"`
	AdditionalProperties OptBool                                                     `json:"additionalProperties"`
	Type                 OptString                                                   `json:"type"`
	Title                OptString                                                   `json:"title"`
}

// GetProperties returns the value of Properties.
func (s *GetDbaasSettingsKafkaOKSettingsKafkaMinusConnect) GetProperties() *GetDbaasSettingsKafkaOKSettingsKafkaMinusConnectProperties {
	return s.Properties
}

// GetAdditionalProperties returns the value of AdditionalProperties.
func (s *GetDbaasSettingsKafkaOKSettingsKafkaMinusConnect) GetAdditionalProperties() OptBool {
	return s.AdditionalProperties
}

// GetType returns the value of Type.
func (s *GetDbaasSettingsKafkaOKSettingsKafkaMinusConnect) GetType() OptString {
	return s.Type
}

// GetTitle returns the value of Title.
func (s *GetDbaasSettingsKafkaOKSettingsKafkaMinusConnect) GetTitle() OptString {
	return s.Title
}

// SetProperties sets the value of Properties.
func (s *GetDbaasSettingsKafkaOKSettingsKafkaMinusConnect) SetProperties(val *GetDbaasSettingsKafkaOKSettingsKafkaMinusConnectProperties) {
	s.Properties = val
}

// SetAdditionalProperties sets the value of AdditionalProperties.
func (s *GetDbaasSettingsKafkaOKSettingsKafkaMinusConnect) SetAdditionalProperties(val OptBool) {
	s.AdditionalProperties = val
}

// SetType sets the value of Type.
func (s *GetDbaasSettingsKafkaOKSettingsKafkaMinusConnect) SetType(val OptString) {
	s.Type = val
}

// SetTitle sets the value of Title.
func (s *GetDbaasSettingsKafkaOKSettingsKafkaMinusConnect) SetTitle(val OptString) {
	s.Title = val
}

type GetDbaasSettingsKafkaOKSettingsKafkaMinusConnectProperties struct{}

// Kafka REST configuration.
type GetDbaasSettingsKafkaOKSettingsKafkaMinusRest struct {
	Properties           *GetDbaasSettingsKafkaOKSettingsKafkaMinusRestProperties `json:"properties"`
	AdditionalProperties OptBool                                                  `json:"additionalProperties"`
	Type                 OptString                                                `json:"type"`
	Title                OptString                                                `json:"title"`
}

// GetProperties returns the value of Properties.
func (s *GetDbaasSettingsKafkaOKSettingsKafkaMinusRest) GetProperties() *GetDbaasSettingsKafkaOKSettingsKafkaMinusRestProperties {
	return s.Properties
}

// GetAdditionalProperties returns the value of AdditionalProperties.
func (s *GetDbaasSettingsKafkaOKSettingsKafkaMinusRest) GetAdditionalProperties() OptBool {
	return s.AdditionalProperties
}

// GetType returns the value of Type.
func (s *GetDbaasSettingsKafkaOKSettingsKafkaMinusRest) GetType() OptString {
	return s.Type
}

// GetTitle returns the value of Title.
func (s *GetDbaasSettingsKafkaOKSettingsKafkaMinusRest) GetTitle() OptString {
	return s.Title
}

// SetProperties sets the value of Properties.
func (s *GetDbaasSettingsKafkaOKSettingsKafkaMinusRest) SetProperties(val *GetDbaasSettingsKafkaOKSettingsKafkaMinusRestProperties) {
	s.Properties = val
}

// SetAdditionalProperties sets the value of AdditionalProperties.
func (s *GetDbaasSettingsKafkaOKSettingsKafkaMinusRest) SetAdditionalProperties(val OptBool) {
	s.AdditionalProperties = val
}

// SetType sets the value of Type.
func (s *GetDbaasSettingsKafkaOKSettingsKafkaMinusRest) SetType(val OptString) {
	s.Type = val
}

// SetTitle sets the value of Title.
func (s *GetDbaasSettingsKafkaOKSettingsKafkaMinusRest) SetTitle(val OptString) {
	s.Title = val
}

type GetDbaasSettingsKafkaOKSettingsKafkaMinusRestProperties struct{}

type GetDbaasSettingsKafkaOKSettingsKafkaProperties struct{}

// Schema Registry configuration.
type GetDbaasSettingsKafkaOKSettingsSchemaMinusRegistry struct {
	Properties           *GetDbaasSettingsKafkaOKSettingsSchemaMinusRegistryProperties `json:"properties"`
	AdditionalProperties OptBool                                                       `json:"additionalProperties"`
	Type                 OptString                                                     `json:"type"`
	Title                OptString                                                     `json:"title"`
}

// GetProperties returns the value of Properties.
func (s *GetDbaasSettingsKafkaOKSettingsSchemaMinusRegistry) GetProperties() *GetDbaasSettingsKafkaOKSettingsSchemaMinusRegistryProperties {
	return s.Properties
}

// GetAdditionalProperties returns the value of AdditionalProperties.
func (s *GetDbaasSettingsKafkaOKSettingsSchemaMinusRegistry) GetAdditionalProperties() OptBool {
	return s.AdditionalProperties
}

// GetType returns the value of Type.
func (s *GetDbaasSettingsKafkaOKSettingsSchemaMinusRegistry) GetType() OptString {
	return s.Type
}

// GetTitle returns the value of Title.
func (s *GetDbaasSettingsKafkaOKSettingsSchemaMinusRegistry) GetTitle() OptString {
	return s.Title
}

// SetProperties sets the value of Properties.
func (s *GetDbaasSettingsKafkaOKSettingsSchemaMinusRegistry) SetProperties(val *GetDbaasSettingsKafkaOKSettingsSchemaMinusRegistryProperties) {
	s.Properties = val
}

// SetAdditionalProperties sets the value of AdditionalProperties.
func (s *GetDbaasSettingsKafkaOKSettingsSchemaMinusRegistry) SetAdditionalProperties(val OptBool) {
	s.AdditionalProperties = val
}

// SetType sets the value of Type.
func (s *GetDbaasSettingsKafkaOKSettingsSchemaMinusRegistry) SetType(val OptString) {
	s.Type = val
}

// SetTitle sets the value of Title.
func (s *GetDbaasSettingsKafkaOKSettingsSchemaMinusRegistry) SetTitle(val OptString) {
	s.Title = val
}

type GetDbaasSettingsKafkaOKSettingsSchemaMinusRegistryProperties struct{}

type GetDbaasSettingsMysqlOK struct {
	Settings OptGetDbaasSettingsMysqlOKSettings `json:"settings"`
}

// GetSettings returns the value of Settings.
func (s *GetDbaasSettingsMysqlOK) GetSettings() OptGetDbaasSettingsMysqlOKSettings {
	return s.Settings
}

// SetSettings sets the value of Settings.
func (s *GetDbaasSettingsMysqlOK) SetSettings(val OptGetDbaasSettingsMysqlOKSettings) {
	s.Settings = val
}

type GetDbaasSettingsMysqlOKSettings struct {
	// Mysql.conf configuration values.
	Mysql OptGetDbaasSettingsMysqlOKSettingsMysql `json:"mysql"`
}

// GetMysql returns the value of Mysql.
func (s *GetDbaasSettingsMysqlOKSettings) GetMysql() OptGetDbaasSettingsMysqlOKSettingsMysql {
	return s.Mysql
}

// SetMysql sets the value of Mysql.
func (s *GetDbaasSettingsMysqlOKSettings) SetMysql(val OptGetDbaasSettingsMysqlOKSettingsMysql) {
	s.Mysql = val
}

// Mysql.conf configuration values.
type GetDbaasSettingsMysqlOKSettingsMysql struct {
	Properties           *GetDbaasSettingsMysqlOKSettingsMysqlProperties `json:"properties"`
	AdditionalProperties OptBool                                         `json:"additionalProperties"`
	Type                 OptString                                       `json:"type"`
	Title                OptString                                       `json:"title"`
}

// GetProperties returns the value of Properties.
func (s *GetDbaasSettingsMysqlOKSettingsMysql) GetProperties() *GetDbaasSettingsMysqlOKSettingsMysqlProperties {
	return s.Properties
}

// GetAdditionalProperties returns the value of AdditionalProperties.
func (s *GetDbaasSettingsMysqlOKSettingsMysql) GetAdditionalProperties() OptBool {
	return s.AdditionalProperties
}

// GetType returns the value of Type.
func (s *GetDbaasSettingsMysqlOKSettingsMysql) GetType() OptString {
	return s.Type
}

// GetTitle returns the value of Title.
func (s *GetDbaasSettingsMysqlOKSettingsMysql) GetTitle() OptString {
	return s.Title
}

// SetProperties sets the value of Properties.
func (s *GetDbaasSettingsMysqlOKSettingsMysql) SetProperties(val *GetDbaasSettingsMysqlOKSettingsMysqlProperties) {
	s.Properties = val
}

// SetAdditionalProperties sets the value of AdditionalProperties.
func (s *GetDbaasSettingsMysqlOKSettingsMysql) SetAdditionalProperties(val OptBool) {
	s.AdditionalProperties = val
}

// SetType sets the value of Type.
func (s *GetDbaasSettingsMysqlOKSettingsMysql) SetType(val OptString) {
	s.Type = val
}

// SetTitle sets the value of Title.
func (s *GetDbaasSettingsMysqlOKSettingsMysql) SetTitle(val OptString) {
	s.Title = val
}

type GetDbaasSettingsMysqlOKSettingsMysqlProperties struct{}

type GetDbaasSettingsOpensearchOK struct {
	Settings OptGetDbaasSettingsOpensearchOKSettings `json:"settings"`
}

// GetSettings returns the value of Settings.
func (s *GetDbaasSettingsOpensearchOK) GetSettings() OptGetDbaasSettingsOpensearchOKSettings {
	return s.Settings
}

// SetSettings sets the value of Settings.
func (s *GetDbaasSettingsOpensearchOK) SetSettings(val OptGetDbaasSettingsOpensearchOKSettings) {
	s.Settings = val
}

type GetDbaasSettingsOpensearchOKSettings struct {
	// OpenSearch configuration values.
	Opensearch OptGetDbaasSettingsOpensearchOKSettingsOpensearch `json:"opensearch"`
}

// GetOpensearch returns the value of Opensearch.
func (s *GetDbaasSettingsOpensearchOKSettings) GetOpensearch() OptGetDbaasSettingsOpensearchOKSettingsOpensearch {
	return s.Opensearch
}

// SetOpensearch sets the value of Opensearch.
func (s *GetDbaasSettingsOpensearchOKSettings) SetOpensearch(val OptGetDbaasSettingsOpensearchOKSettingsOpensearch) {
	s.Opensearch = val
}

// OpenSearch configuration values.
type GetDbaasSettingsOpensearchOKSettingsOpensearch struct {
	Properties           *GetDbaasSettingsOpensearchOKSettingsOpensearchProperties `json:"properties"`
	AdditionalProperties OptBool                                                   `json:"additionalProperties"`
	Type                 OptString                                                 `json:"type"`
	Title                OptString                                                 `json:"title"`
}

// GetProperties returns the value of Properties.
func (s *GetDbaasSettingsOpensearchOKSettingsOpensearch) GetProperties() *GetDbaasSettingsOpensearchOKSettingsOpensearchProperties {
	return s.Properties
}

// GetAdditionalProperties returns the value of AdditionalProperties.
func (s *GetDbaasSettingsOpensearchOKSettingsOpensearch) GetAdditionalProperties() OptBool {
	return s.AdditionalProperties
}

// GetType returns the value of Type.
func (s *GetDbaasSettingsOpensearchOKSettingsOpensearch) GetType() OptString {
	return s.Type
}

// GetTitle returns the value of Title.
func (s *GetDbaasSettingsOpensearchOKSettingsOpensearch) GetTitle() OptString {
	return s.Title
}

// SetProperties sets the value of Properties.
func (s *GetDbaasSettingsOpensearchOKSettingsOpensearch) SetProperties(val *GetDbaasSettingsOpensearchOKSettingsOpensearchProperties) {
	s.Properties = val
}

// SetAdditionalProperties sets the value of AdditionalProperties.
func (s *GetDbaasSettingsOpensearchOKSettingsOpensearch) SetAdditionalProperties(val OptBool) {
	s.AdditionalProperties = val
}

// SetType sets the value of Type.
func (s *GetDbaasSettingsOpensearchOKSettingsOpensearch) SetType(val OptString) {
	s.Type = val
}

// SetTitle sets the value of Title.
func (s *GetDbaasSettingsOpensearchOKSettingsOpensearch) SetTitle(val OptString) {
	s.Title = val
}

type GetDbaasSettingsOpensearchOKSettingsOpensearchProperties struct{}

type GetDbaasSettingsPgOK struct {
	Settings OptGetDbaasSettingsPgOKSettings `json:"settings"`
}

// GetSettings returns the value of Settings.
func (s *GetDbaasSettingsPgOK) GetSettings() OptGetDbaasSettingsPgOKSettings {
	return s.Settings
}

// SetSettings sets the value of Settings.
func (s *GetDbaasSettingsPgOK) SetSettings(val OptGetDbaasSettingsPgOKSettings) {
	s.Settings = val
}

type GetDbaasSettingsPgOKSettings struct {
	// Postgresql.conf configuration values.
	Pg OptGetDbaasSettingsPgOKSettingsPg `json:"pg"`
	// PGLookout settings.
	Pglookout OptGetDbaasSettingsPgOKSettingsPglookout `json:"pglookout"`
	// PGBouncer connection pooling settings.
	Pgbouncer OptGetDbaasSettingsPgOKSettingsPgbouncer `json:"pgbouncer"`
	// TimescaleDB extension configuration values.
	Timescaledb OptGetDbaasSettingsPgOKSettingsTimescaledb `json:"timescaledb"`
}

// GetPg returns the value of Pg.
func (s *GetDbaasSettingsPgOKSettings) GetPg() OptGetDbaasSettingsPgOKSettingsPg {
	return s.Pg
}

// GetPglookout returns the value of Pglookout.
func (s *GetDbaasSettingsPgOKSettings) GetPglookout() OptGetDbaasSettingsPgOKSettingsPglookout {
	return s.Pglookout
}

// GetPgbouncer returns the value of Pgbouncer.
func (s *GetDbaasSettingsPgOKSettings) GetPgbouncer() OptGetDbaasSettingsPgOKSettingsPgbouncer {
	return s.Pgbouncer
}

// GetTimescaledb returns the value of Timescaledb.
func (s *GetDbaasSettingsPgOKSettings) GetTimescaledb() OptGetDbaasSettingsPgOKSettingsTimescaledb {
	return s.Timescaledb
}

// SetPg sets the value of Pg.
func (s *GetDbaasSettingsPgOKSettings) SetPg(val OptGetDbaasSettingsPgOKSettingsPg) {
	s.Pg = val
}

// SetPglookout sets the value of Pglookout.
func (s *GetDbaasSettingsPgOKSettings) SetPglookout(val OptGetDbaasSettingsPgOKSettingsPglookout) {
	s.Pglookout = val
}

// SetPgbouncer sets the value of Pgbouncer.
func (s *GetDbaasSettingsPgOKSettings) SetPgbouncer(val OptGetDbaasSettingsPgOKSettingsPgbouncer) {
	s.Pgbouncer = val
}

// SetTimescaledb sets the value of Timescaledb.
func (s *GetDbaasSettingsPgOKSettings) SetTimescaledb(val OptGetDbaasSettingsPgOKSettingsTimescaledb) {
	s.Timescaledb = val
}

// Postgresql.conf configuration values.
type GetDbaasSettingsPgOKSettingsPg struct {
	Properties           *GetDbaasSettingsPgOKSettingsPgProperties `json:"properties"`
	AdditionalProperties OptBool                                   `json:"additionalProperties"`
	Type                 OptString                                 `json:"type"`
	Title                OptString                                 `json:"title"`
}

// GetProperties returns the value of Properties.
func (s *GetDbaasSettingsPgOKSettingsPg) GetProperties() *GetDbaasSettingsPgOKSettingsPgProperties {
	return s.Properties
}

// GetAdditionalProperties returns the value of AdditionalProperties.
func (s *GetDbaasSettingsPgOKSettingsPg) GetAdditionalProperties() OptBool {
	return s.AdditionalProperties
}

// GetType returns the value of Type.
func (s *GetDbaasSettingsPgOKSettingsPg) GetType() OptString {
	return s.Type
}

// GetTitle returns the value of Title.
func (s *GetDbaasSettingsPgOKSettingsPg) GetTitle() OptString {
	return s.Title
}

// SetProperties sets the value of Properties.
func (s *GetDbaasSettingsPgOKSettingsPg) SetProperties(val *GetDbaasSettingsPgOKSettingsPgProperties) {
	s.Properties = val
}

// SetAdditionalProperties sets the value of AdditionalProperties.
func (s *GetDbaasSettingsPgOKSettingsPg) SetAdditionalProperties(val OptBool) {
	s.AdditionalProperties = val
}

// SetType sets the value of Type.
func (s *GetDbaasSettingsPgOKSettingsPg) SetType(val OptString) {
	s.Type = val
}

// SetTitle sets the value of Title.
func (s *GetDbaasSettingsPgOKSettingsPg) SetTitle(val OptString) {
	s.Title = val
}

type GetDbaasSettingsPgOKSettingsPgProperties struct{}

// PGBouncer connection pooling settings.
type GetDbaasSettingsPgOKSettingsPgbouncer struct {
	Properties           *GetDbaasSettingsPgOKSettingsPgbouncerProperties `json:"properties"`
	AdditionalProperties OptBool                                          `json:"additionalProperties"`
	Type                 OptString                                        `json:"type"`
	Title                OptString                                        `json:"title"`
}

// GetProperties returns the value of Properties.
func (s *GetDbaasSettingsPgOKSettingsPgbouncer) GetProperties() *GetDbaasSettingsPgOKSettingsPgbouncerProperties {
	return s.Properties
}

// GetAdditionalProperties returns the value of AdditionalProperties.
func (s *GetDbaasSettingsPgOKSettingsPgbouncer) GetAdditionalProperties() OptBool {
	return s.AdditionalProperties
}

// GetType returns the value of Type.
func (s *GetDbaasSettingsPgOKSettingsPgbouncer) GetType() OptString {
	return s.Type
}

// GetTitle returns the value of Title.
func (s *GetDbaasSettingsPgOKSettingsPgbouncer) GetTitle() OptString {
	return s.Title
}

// SetProperties sets the value of Properties.
func (s *GetDbaasSettingsPgOKSettingsPgbouncer) SetProperties(val *GetDbaasSettingsPgOKSettingsPgbouncerProperties) {
	s.Properties = val
}

// SetAdditionalProperties sets the value of AdditionalProperties.
func (s *GetDbaasSettingsPgOKSettingsPgbouncer) SetAdditionalProperties(val OptBool) {
	s.AdditionalProperties = val
}

// SetType sets the value of Type.
func (s *GetDbaasSettingsPgOKSettingsPgbouncer) SetType(val OptString) {
	s.Type = val
}

// SetTitle sets the value of Title.
func (s *GetDbaasSettingsPgOKSettingsPgbouncer) SetTitle(val OptString) {
	s.Title = val
}

type GetDbaasSettingsPgOKSettingsPgbouncerProperties struct{}

// PGLookout settings.
type GetDbaasSettingsPgOKSettingsPglookout struct {
	Properties           *GetDbaasSettingsPgOKSettingsPglookoutProperties `json:"properties"`
	AdditionalProperties OptBool                                          `json:"additionalProperties"`
	Type                 OptString                                        `json:"type"`
	Title                OptString                                        `json:"title"`
}

// GetProperties returns the value of Properties.
func (s *GetDbaasSettingsPgOKSettingsPglookout) GetProperties() *GetDbaasSettingsPgOKSettingsPglookoutProperties {
	return s.Properties
}

// GetAdditionalProperties returns the value of AdditionalProperties.
func (s *GetDbaasSettingsPgOKSettingsPglookout) GetAdditionalProperties() OptBool {
	return s.AdditionalProperties
}

// GetType returns the value of Type.
func (s *GetDbaasSettingsPgOKSettingsPglookout) GetType() OptString {
	return s.Type
}

// GetTitle returns the value of Title.
func (s *GetDbaasSettingsPgOKSettingsPglookout) GetTitle() OptString {
	return s.Title
}

// SetProperties sets the value of Properties.
func (s *GetDbaasSettingsPgOKSettingsPglookout) SetProperties(val *GetDbaasSettingsPgOKSettingsPglookoutProperties) {
	s.Properties = val
}

// SetAdditionalProperties sets the value of AdditionalProperties.
func (s *GetDbaasSettingsPgOKSettingsPglookout) SetAdditionalProperties(val OptBool) {
	s.AdditionalProperties = val
}

// SetType sets the value of Type.
func (s *GetDbaasSettingsPgOKSettingsPglookout) SetType(val OptString) {
	s.Type = val
}

// SetTitle sets the value of Title.
func (s *GetDbaasSettingsPgOKSettingsPglookout) SetTitle(val OptString) {
	s.Title = val
}

type GetDbaasSettingsPgOKSettingsPglookoutProperties struct{}

// TimescaleDB extension configuration values.
type GetDbaasSettingsPgOKSettingsTimescaledb struct {
	Properties           *GetDbaasSettingsPgOKSettingsTimescaledbProperties `json:"properties"`
	AdditionalProperties OptBool                                            `json:"additionalProperties"`
	Type                 OptString                                          `json:"type"`
	Title                OptString                                          `json:"title"`
}

// GetProperties returns the value of Properties.
func (s *GetDbaasSettingsPgOKSettingsTimescaledb) GetProperties() *GetDbaasSettingsPgOKSettingsTimescaledbProperties {
	return s.Properties
}

// GetAdditionalProperties returns the value of AdditionalProperties.
func (s *GetDbaasSettingsPgOKSettingsTimescaledb) GetAdditionalProperties() OptBool {
	return s.AdditionalProperties
}

// GetType returns the value of Type.
func (s *GetDbaasSettingsPgOKSettingsTimescaledb) GetType() OptString {
	return s.Type
}

// GetTitle returns the value of Title.
func (s *GetDbaasSettingsPgOKSettingsTimescaledb) GetTitle() OptString {
	return s.Title
}

// SetProperties sets the value of Properties.
func (s *GetDbaasSettingsPgOKSettingsTimescaledb) SetProperties(val *GetDbaasSettingsPgOKSettingsTimescaledbProperties) {
	s.Properties = val
}

// SetAdditionalProperties sets the value of AdditionalProperties.
func (s *GetDbaasSettingsPgOKSettingsTimescaledb) SetAdditionalProperties(val OptBool) {
	s.AdditionalProperties = val
}

// SetType sets the value of Type.
func (s *GetDbaasSettingsPgOKSettingsTimescaledb) SetType(val OptString) {
	s.Type = val
}

// SetTitle sets the value of Title.
func (s *GetDbaasSettingsPgOKSettingsTimescaledb) SetTitle(val OptString) {
	s.Title = val
}

type GetDbaasSettingsPgOKSettingsTimescaledbProperties struct{}

type GetDbaasSettingsRedisOK struct {
	Settings OptGetDbaasSettingsRedisOKSettings `json:"settings"`
}

// GetSettings returns the value of Settings.
func (s *GetDbaasSettingsRedisOK) GetSettings() OptGetDbaasSettingsRedisOKSettings {
	return s.Settings
}

// SetSettings sets the value of Settings.
func (s *GetDbaasSettingsRedisOK) SetSettings(val OptGetDbaasSettingsRedisOKSettings) {
	s.Settings = val
}

type GetDbaasSettingsRedisOKSettings struct {
	// Redis configuration values.
	Redis OptGetDbaasSettingsRedisOKSettingsRedis `json:"redis"`
}

// GetRedis returns the value of Redis.
func (s *GetDbaasSettingsRedisOKSettings) GetRedis() OptGetDbaasSettingsRedisOKSettingsRedis {
	return s.Redis
}

// SetRedis sets the value of Redis.
func (s *GetDbaasSettingsRedisOKSettings) SetRedis(val OptGetDbaasSettingsRedisOKSettingsRedis) {
	s.Redis = val
}

// Redis configuration values.
type GetDbaasSettingsRedisOKSettingsRedis struct {
	Properties           *GetDbaasSettingsRedisOKSettingsRedisProperties `json:"properties"`
	AdditionalProperties OptBool                                         `json:"additionalProperties"`
	Type                 OptString                                       `json:"type"`
	Title                OptString                                       `json:"title"`
}

// GetProperties returns the value of Properties.
func (s *GetDbaasSettingsRedisOKSettingsRedis) GetProperties() *GetDbaasSettingsRedisOKSettingsRedisProperties {
	return s.Properties
}

// GetAdditionalProperties returns the value of AdditionalProperties.
func (s *GetDbaasSettingsRedisOKSettingsRedis) GetAdditionalProperties() OptBool {
	return s.AdditionalProperties
}

// GetType returns the value of Type.
func (s *GetDbaasSettingsRedisOKSettingsRedis) GetType() OptString {
	return s.Type
}

// GetTitle returns the value of Title.
func (s *GetDbaasSettingsRedisOKSettingsRedis) GetTitle() OptString {
	return s.Title
}

// SetProperties sets the value of Properties.
func (s *GetDbaasSettingsRedisOKSettingsRedis) SetProperties(val *GetDbaasSettingsRedisOKSettingsRedisProperties) {
	s.Properties = val
}

// SetAdditionalProperties sets the value of AdditionalProperties.
func (s *GetDbaasSettingsRedisOKSettingsRedis) SetAdditionalProperties(val OptBool) {
	s.AdditionalProperties = val
}

// SetType sets the value of Type.
func (s *GetDbaasSettingsRedisOKSettingsRedis) SetType(val OptString) {
	s.Type = val
}

// SetTitle sets the value of Title.
func (s *GetDbaasSettingsRedisOKSettingsRedis) SetTitle(val OptString) {
	s.Title = val
}

type GetDbaasSettingsRedisOKSettingsRedisProperties struct{}

type GetDbaasTaskOK struct {
	ID               OptUUID                              `json:"id"`
	CreateMinusTime  OptDateTime                          `json:"create-time"`
	Result           OptString                            `json:"result"`
	ResultMinusCodes []GetDbaasTaskOKResultMinusCodesItem `json:"result-codes"`
	Success          OptBool                              `json:"success"`
	TaskMinusType    OptString                            `json:"task-type"`
}

// GetID returns the value of ID.
func (s *GetDbaasTaskOK) GetID() OptUUID {
	return s.ID
}

// GetCreateMinusTime returns the value of CreateMinusTime.
func (s *GetDbaasTaskOK) GetCreateMinusTime() OptDateTime {
	return s.CreateMinusTime
}

// GetResult returns the value of Result.
func (s *GetDbaasTaskOK) GetResult() OptString {
	return s.Result
}

// GetResultMinusCodes returns the value of ResultMinusCodes.
func (s *GetDbaasTaskOK) GetResultMinusCodes() []GetDbaasTaskOKResultMinusCodesItem {
	return s.ResultMinusCodes
}

// GetSuccess returns the value of Success.
func (s *GetDbaasTaskOK) GetSuccess() OptBool {
	return s.Success
}

// GetTaskMinusType returns the value of TaskMinusType.
func (s *GetDbaasTaskOK) GetTaskMinusType() OptString {
	return s.TaskMinusType
}

// SetID sets the value of ID.
func (s *GetDbaasTaskOK) SetID(val OptUUID) {
	s.ID = val
}

// SetCreateMinusTime sets the value of CreateMinusTime.
func (s *GetDbaasTaskOK) SetCreateMinusTime(val OptDateTime) {
	s.CreateMinusTime = val
}

// SetResult sets the value of Result.
func (s *GetDbaasTaskOK) SetResult(val OptString) {
	s.Result = val
}

// SetResultMinusCodes sets the value of ResultMinusCodes.
func (s *GetDbaasTaskOK) SetResultMinusCodes(val []GetDbaasTaskOKResultMinusCodesItem) {
	s.ResultMinusCodes = val
}

// SetSuccess sets the value of Success.
func (s *GetDbaasTaskOK) SetSuccess(val OptBool) {
	s.Success = val
}

// SetTaskMinusType sets the value of TaskMinusType.
func (s *GetDbaasTaskOK) SetTaskMinusType(val OptString) {
	s.TaskMinusType = val
}

type GetDbaasTaskOKResultMinusCodesItem struct {
	Code   OptString `json:"code"`
	Dbname OptString `json:"dbname"`
}

// GetCode returns the value of Code.
func (s *GetDbaasTaskOKResultMinusCodesItem) GetCode() OptString {
	return s.Code
}

// GetDbname returns the value of Dbname.
func (s *GetDbaasTaskOKResultMinusCodesItem) GetDbname() OptString {
	return s.Dbname
}

// SetCode sets the value of Code.
func (s *GetDbaasTaskOKResultMinusCodesItem) SetCode(val OptString) {
	s.Code = val
}

// SetDbname sets the value of Dbname.
func (s *GetDbaasTaskOKResultMinusCodesItem) SetDbname(val OptString) {
	s.Dbname = val
}

type GetSksClusterAuthorityCertAuthority string

const (
	GetSksClusterAuthorityCertAuthorityControlPlane GetSksClusterAuthorityCertAuthority = "control-plane"
	GetSksClusterAuthorityCertAuthorityAggregation  GetSksClusterAuthorityCertAuthority = "aggregation"
	GetSksClusterAuthorityCertAuthorityKubelet      GetSksClusterAuthorityCertAuthority = "kubelet"
)

// MarshalText implements encoding.TextMarshaler.
func (s GetSksClusterAuthorityCertAuthority) MarshalText() ([]byte, error) {
	switch s {
	case GetSksClusterAuthorityCertAuthorityControlPlane:
		return []byte(s), nil
	case GetSksClusterAuthorityCertAuthorityAggregation:
		return []byte(s), nil
	case GetSksClusterAuthorityCertAuthorityKubelet:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *GetSksClusterAuthorityCertAuthority) UnmarshalText(data []byte) error {
	switch GetSksClusterAuthorityCertAuthority(data) {
	case GetSksClusterAuthorityCertAuthorityControlPlane:
		*s = GetSksClusterAuthorityCertAuthorityControlPlane
		return nil
	case GetSksClusterAuthorityCertAuthorityAggregation:
		*s = GetSksClusterAuthorityCertAuthorityAggregation
		return nil
	case GetSksClusterAuthorityCertAuthorityKubelet:
		*s = GetSksClusterAuthorityCertAuthorityKubelet
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type GetSksClusterAuthorityCertOK struct {
	Cacert OptString `json:"cacert"`
}

// GetCacert returns the value of Cacert.
func (s *GetSksClusterAuthorityCertOK) GetCacert() OptString {
	return s.Cacert
}

// SetCacert sets the value of Cacert.
func (s *GetSksClusterAuthorityCertOK) SetCacert(val OptString) {
	s.Cacert = val
}

type GetSosPresignedURLOK struct {
	URL OptString `json:"url"`
}

// GetURL returns the value of URL.
func (s *GetSosPresignedURLOK) GetURL() OptString {
	return s.URL
}

// SetURL sets the value of URL.
func (s *GetSosPresignedURLOK) SetURL(val OptString) {
	s.URL = val
}

// IAM API Key.
// Ref: #/components/schemas/iam-api-key
type IamAPIKey struct {
	// IAM API Key name.
	Name OptString `json:"name"`
	// IAM API Key.
	Key OptString `json:"key"`
	// IAM API Key Role ID.
	RoleMinusID OptUUID `json:"role-id"`
}

// GetName returns the value of Name.
func (s *IamAPIKey) GetName() OptString {
	return s.Name
}

// GetKey returns the value of Key.
func (s *IamAPIKey) GetKey() OptString {
	return s.Key
}

// GetRoleMinusID returns the value of RoleMinusID.
func (s *IamAPIKey) GetRoleMinusID() OptUUID {
	return s.RoleMinusID
}

// SetName sets the value of Name.
func (s *IamAPIKey) SetName(val OptString) {
	s.Name = val
}

// SetKey sets the value of Key.
func (s *IamAPIKey) SetKey(val OptString) {
	s.Key = val
}

// SetRoleMinusID sets the value of RoleMinusID.
func (s *IamAPIKey) SetRoleMinusID(val OptUUID) {
	s.RoleMinusID = val
}

// IAM API Key.
// Ref: #/components/schemas/iam-api-key-created
type IamAPIKeyCreated struct {
	// IAM API Key name.
	Name OptString `json:"name"`
	// IAM API Key.
	Key OptString `json:"key"`
	// IAM API Key Secret.
	Secret OptString `json:"secret"`
	// IAM API Key Role ID.
	RoleMinusID OptUUID `json:"role-id"`
}

// GetName returns the value of Name.
func (s *IamAPIKeyCreated) GetName() OptString {
	return s.Name
}

// GetKey returns the value of Key.
func (s *IamAPIKeyCreated) GetKey() OptString {
	return s.Key
}

// GetSecret returns the value of Secret.
func (s *IamAPIKeyCreated) GetSecret() OptString {
	return s.Secret
}

// GetRoleMinusID returns the value of RoleMinusID.
func (s *IamAPIKeyCreated) GetRoleMinusID() OptUUID {
	return s.RoleMinusID
}

// SetName sets the value of Name.
func (s *IamAPIKeyCreated) SetName(val OptString) {
	s.Name = val
}

// SetKey sets the value of Key.
func (s *IamAPIKeyCreated) SetKey(val OptString) {
	s.Key = val
}

// SetSecret sets the value of Secret.
func (s *IamAPIKeyCreated) SetSecret(val OptString) {
	s.Secret = val
}

// SetRoleMinusID sets the value of RoleMinusID.
func (s *IamAPIKeyCreated) SetRoleMinusID(val OptUUID) {
	s.RoleMinusID = val
}

// Policy.
// Ref: #/components/schemas/iam-policy
type IamPolicy struct {
	// IAM default service strategy.
	DefaultMinusServiceMinusStrategy IamPolicyDefaultMinusServiceMinusStrategy `json:"default-service-strategy"`
	// IAM services.
	Services IamPolicyServices `json:"services"`
}

// GetDefaultMinusServiceMinusStrategy returns the value of DefaultMinusServiceMinusStrategy.
func (s *IamPolicy) GetDefaultMinusServiceMinusStrategy() IamPolicyDefaultMinusServiceMinusStrategy {
	return s.DefaultMinusServiceMinusStrategy
}

// GetServices returns the value of Services.
func (s *IamPolicy) GetServices() IamPolicyServices {
	return s.Services
}

// SetDefaultMinusServiceMinusStrategy sets the value of DefaultMinusServiceMinusStrategy.
func (s *IamPolicy) SetDefaultMinusServiceMinusStrategy(val IamPolicyDefaultMinusServiceMinusStrategy) {
	s.DefaultMinusServiceMinusStrategy = val
}

// SetServices sets the value of Services.
func (s *IamPolicy) SetServices(val IamPolicyServices) {
	s.Services = val
}

// IAM default service strategy.
type IamPolicyDefaultMinusServiceMinusStrategy string

const (
	IamPolicyDefaultMinusServiceMinusStrategyAllow IamPolicyDefaultMinusServiceMinusStrategy = "allow"
	IamPolicyDefaultMinusServiceMinusStrategyDeny  IamPolicyDefaultMinusServiceMinusStrategy = "deny"
)

// MarshalText implements encoding.TextMarshaler.
func (s IamPolicyDefaultMinusServiceMinusStrategy) MarshalText() ([]byte, error) {
	switch s {
	case IamPolicyDefaultMinusServiceMinusStrategyAllow:
		return []byte(s), nil
	case IamPolicyDefaultMinusServiceMinusStrategyDeny:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *IamPolicyDefaultMinusServiceMinusStrategy) UnmarshalText(data []byte) error {
	switch IamPolicyDefaultMinusServiceMinusStrategy(data) {
	case IamPolicyDefaultMinusServiceMinusStrategyAllow:
		*s = IamPolicyDefaultMinusServiceMinusStrategyAllow
		return nil
	case IamPolicyDefaultMinusServiceMinusStrategyDeny:
		*s = IamPolicyDefaultMinusServiceMinusStrategyDeny
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// IAM services.
type IamPolicyServices map[string]IamServicePolicy

func (s *IamPolicyServices) init() IamPolicyServices {
	m := *s
	if m == nil {
		m = map[string]IamServicePolicy{}
		*s = m
	}
	return m
}

// IAM Role.
// Ref: #/components/schemas/iam-role
type IamRole struct {
	// IAM Role ID.
	ID OptUUID `json:"id"`
	// IAM Role name.
	Name OptString `json:"name"`
	// IAM Role description.
	Description OptString `json:"description"`
	// IAM Role Labels.
	Labels OptLabels `json:"labels"`
	// IAM Role mutability.
	Editable OptBool `json:"editable"`
	// IAM Role Policy.
	Policy OptIamPolicy `json:"policy"`
}

// GetID returns the value of ID.
func (s *IamRole) GetID() OptUUID {
	return s.ID
}

// GetName returns the value of Name.
func (s *IamRole) GetName() OptString {
	return s.Name
}

// GetDescription returns the value of Description.
func (s *IamRole) GetDescription() OptString {
	return s.Description
}

// GetLabels returns the value of Labels.
func (s *IamRole) GetLabels() OptLabels {
	return s.Labels
}

// GetEditable returns the value of Editable.
func (s *IamRole) GetEditable() OptBool {
	return s.Editable
}

// GetPolicy returns the value of Policy.
func (s *IamRole) GetPolicy() OptIamPolicy {
	return s.Policy
}

// SetID sets the value of ID.
func (s *IamRole) SetID(val OptUUID) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *IamRole) SetName(val OptString) {
	s.Name = val
}

// SetDescription sets the value of Description.
func (s *IamRole) SetDescription(val OptString) {
	s.Description = val
}

// SetLabels sets the value of Labels.
func (s *IamRole) SetLabels(val OptLabels) {
	s.Labels = val
}

// SetEditable sets the value of Editable.
func (s *IamRole) SetEditable(val OptBool) {
	s.Editable = val
}

// SetPolicy sets the value of Policy.
func (s *IamRole) SetPolicy(val OptIamPolicy) {
	s.Policy = val
}

// Ref: #/components/schemas/iam-service-policy
type IamServicePolicy struct {
	Type  OptIamServicePolicyType `json:"type"`
	Rules []IamServicePolicyRule  `json:"rules"`
}

// GetType returns the value of Type.
func (s *IamServicePolicy) GetType() OptIamServicePolicyType {
	return s.Type
}

// GetRules returns the value of Rules.
func (s *IamServicePolicy) GetRules() []IamServicePolicyRule {
	return s.Rules
}

// SetType sets the value of Type.
func (s *IamServicePolicy) SetType(val OptIamServicePolicyType) {
	s.Type = val
}

// SetRules sets the value of Rules.
func (s *IamServicePolicy) SetRules(val []IamServicePolicyRule) {
	s.Rules = val
}

// Ref: #/components/schemas/iam-service-policy-rule
type IamServicePolicyRule struct {
	Action     OptIamServicePolicyRuleAction `json:"action"`
	Expression OptString                     `json:"expression"`
	Resources  []string                      `json:"resources"`
}

// GetAction returns the value of Action.
func (s *IamServicePolicyRule) GetAction() OptIamServicePolicyRuleAction {
	return s.Action
}

// GetExpression returns the value of Expression.
func (s *IamServicePolicyRule) GetExpression() OptString {
	return s.Expression
}

// GetResources returns the value of Resources.
func (s *IamServicePolicyRule) GetResources() []string {
	return s.Resources
}

// SetAction sets the value of Action.
func (s *IamServicePolicyRule) SetAction(val OptIamServicePolicyRuleAction) {
	s.Action = val
}

// SetExpression sets the value of Expression.
func (s *IamServicePolicyRule) SetExpression(val OptString) {
	s.Expression = val
}

// SetResources sets the value of Resources.
func (s *IamServicePolicyRule) SetResources(val []string) {
	s.Resources = val
}

type IamServicePolicyRuleAction string

const (
	IamServicePolicyRuleActionAllow IamServicePolicyRuleAction = "allow"
	IamServicePolicyRuleActionDeny  IamServicePolicyRuleAction = "deny"
)

// MarshalText implements encoding.TextMarshaler.
func (s IamServicePolicyRuleAction) MarshalText() ([]byte, error) {
	switch s {
	case IamServicePolicyRuleActionAllow:
		return []byte(s), nil
	case IamServicePolicyRuleActionDeny:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *IamServicePolicyRuleAction) UnmarshalText(data []byte) error {
	switch IamServicePolicyRuleAction(data) {
	case IamServicePolicyRuleActionAllow:
		*s = IamServicePolicyRuleActionAllow
		return nil
	case IamServicePolicyRuleActionDeny:
		*s = IamServicePolicyRuleActionDeny
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type IamServicePolicyType string

const (
	IamServicePolicyTypeRules IamServicePolicyType = "rules"
	IamServicePolicyTypeAllow IamServicePolicyType = "allow"
	IamServicePolicyTypeDeny  IamServicePolicyType = "deny"
)

// MarshalText implements encoding.TextMarshaler.
func (s IamServicePolicyType) MarshalText() ([]byte, error) {
	switch s {
	case IamServicePolicyTypeRules:
		return []byte(s), nil
	case IamServicePolicyTypeAllow:
		return []byte(s), nil
	case IamServicePolicyTypeDeny:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *IamServicePolicyType) UnmarshalText(data []byte) error {
	switch IamServicePolicyType(data) {
	case IamServicePolicyTypeRules:
		*s = IamServicePolicyTypeRules
		return nil
	case IamServicePolicyTypeAllow:
		*s = IamServicePolicyTypeAllow
		return nil
	case IamServicePolicyTypeDeny:
		*s = IamServicePolicyTypeDeny
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Instance password.
// Ref: #/components/schemas/instance-password
type InstancePassword struct {
	// Password.
	Password OptString `json:"password"`
}

// GetPassword returns the value of Password.
func (s *InstancePassword) GetPassword() OptString {
	return s.Password
}

// SetPassword sets the value of Password.
func (s *InstancePassword) SetPassword(val OptString) {
	s.Password = val
}

// Compute instance type.
// Ref: #/components/schemas/instance-type
type InstanceType struct {
	// Instance type ID.
	ID OptUUID `json:"id"`
	// Instance type size.
	Size OptInstanceTypeSize `json:"size"`
	// Instance type family.
	Family OptInstanceTypeFamily `json:"family"`
	// CPU count.
	Cpus OptInt64 `json:"cpus"`
	// GPU count.
	Gpus OptInt64 `json:"gpus"`
	// Requires authorization or publicly available.
	Authorized OptBool `json:"authorized"`
	// Available memory.
	Memory OptInt64 `json:"memory"`
	// Instance Type available zones.
	Zones []ZoneName `json:"zones"`
}

// GetID returns the value of ID.
func (s *InstanceType) GetID() OptUUID {
	return s.ID
}

// GetSize returns the value of Size.
func (s *InstanceType) GetSize() OptInstanceTypeSize {
	return s.Size
}

// GetFamily returns the value of Family.
func (s *InstanceType) GetFamily() OptInstanceTypeFamily {
	return s.Family
}

// GetCpus returns the value of Cpus.
func (s *InstanceType) GetCpus() OptInt64 {
	return s.Cpus
}

// GetGpus returns the value of Gpus.
func (s *InstanceType) GetGpus() OptInt64 {
	return s.Gpus
}

// GetAuthorized returns the value of Authorized.
func (s *InstanceType) GetAuthorized() OptBool {
	return s.Authorized
}

// GetMemory returns the value of Memory.
func (s *InstanceType) GetMemory() OptInt64 {
	return s.Memory
}

// GetZones returns the value of Zones.
func (s *InstanceType) GetZones() []ZoneName {
	return s.Zones
}

// SetID sets the value of ID.
func (s *InstanceType) SetID(val OptUUID) {
	s.ID = val
}

// SetSize sets the value of Size.
func (s *InstanceType) SetSize(val OptInstanceTypeSize) {
	s.Size = val
}

// SetFamily sets the value of Family.
func (s *InstanceType) SetFamily(val OptInstanceTypeFamily) {
	s.Family = val
}

// SetCpus sets the value of Cpus.
func (s *InstanceType) SetCpus(val OptInt64) {
	s.Cpus = val
}

// SetGpus sets the value of Gpus.
func (s *InstanceType) SetGpus(val OptInt64) {
	s.Gpus = val
}

// SetAuthorized sets the value of Authorized.
func (s *InstanceType) SetAuthorized(val OptBool) {
	s.Authorized = val
}

// SetMemory sets the value of Memory.
func (s *InstanceType) SetMemory(val OptInt64) {
	s.Memory = val
}

// SetZones sets the value of Zones.
func (s *InstanceType) SetZones(val []ZoneName) {
	s.Zones = val
}

// Instance type family.
type InstanceTypeFamily string

const (
	InstanceTypeFamilyGpu3     InstanceTypeFamily = "gpu3"
	InstanceTypeFamilyGpu2     InstanceTypeFamily = "gpu2"
	InstanceTypeFamilyGpu      InstanceTypeFamily = "gpu"
	InstanceTypeFamilyMemory   InstanceTypeFamily = "memory"
	InstanceTypeFamilyStorage  InstanceTypeFamily = "storage"
	InstanceTypeFamilyStandard InstanceTypeFamily = "standard"
	InstanceTypeFamilyColossus InstanceTypeFamily = "colossus"
	InstanceTypeFamilyCPU      InstanceTypeFamily = "cpu"
)

// MarshalText implements encoding.TextMarshaler.
func (s InstanceTypeFamily) MarshalText() ([]byte, error) {
	switch s {
	case InstanceTypeFamilyGpu3:
		return []byte(s), nil
	case InstanceTypeFamilyGpu2:
		return []byte(s), nil
	case InstanceTypeFamilyGpu:
		return []byte(s), nil
	case InstanceTypeFamilyMemory:
		return []byte(s), nil
	case InstanceTypeFamilyStorage:
		return []byte(s), nil
	case InstanceTypeFamilyStandard:
		return []byte(s), nil
	case InstanceTypeFamilyColossus:
		return []byte(s), nil
	case InstanceTypeFamilyCPU:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *InstanceTypeFamily) UnmarshalText(data []byte) error {
	switch InstanceTypeFamily(data) {
	case InstanceTypeFamilyGpu3:
		*s = InstanceTypeFamilyGpu3
		return nil
	case InstanceTypeFamilyGpu2:
		*s = InstanceTypeFamilyGpu2
		return nil
	case InstanceTypeFamilyGpu:
		*s = InstanceTypeFamilyGpu
		return nil
	case InstanceTypeFamilyMemory:
		*s = InstanceTypeFamilyMemory
		return nil
	case InstanceTypeFamilyStorage:
		*s = InstanceTypeFamilyStorage
		return nil
	case InstanceTypeFamilyStandard:
		*s = InstanceTypeFamilyStandard
		return nil
	case InstanceTypeFamilyColossus:
		*s = InstanceTypeFamilyColossus
		return nil
	case InstanceTypeFamilyCPU:
		*s = InstanceTypeFamilyCPU
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Instance type size.
type InstanceTypeSize string

const (
	InstanceTypeSizeLarge      InstanceTypeSize = "large"
	InstanceTypeSizeHuge       InstanceTypeSize = "huge"
	InstanceTypeSizeJumbo      InstanceTypeSize = "jumbo"
	InstanceTypeSizeMedium     InstanceTypeSize = "medium"
	InstanceTypeSizeMega       InstanceTypeSize = "mega"
	InstanceTypeSizeSmall      InstanceTypeSize = "small"
	InstanceTypeSizeExtraLarge InstanceTypeSize = "extra-large"
	InstanceTypeSizeTitan      InstanceTypeSize = "titan"
	InstanceTypeSizeMicro      InstanceTypeSize = "micro"
	InstanceTypeSizeColossus   InstanceTypeSize = "colossus"
	InstanceTypeSizeTiny       InstanceTypeSize = "tiny"
)

// MarshalText implements encoding.TextMarshaler.
func (s InstanceTypeSize) MarshalText() ([]byte, error) {
	switch s {
	case InstanceTypeSizeLarge:
		return []byte(s), nil
	case InstanceTypeSizeHuge:
		return []byte(s), nil
	case InstanceTypeSizeJumbo:
		return []byte(s), nil
	case InstanceTypeSizeMedium:
		return []byte(s), nil
	case InstanceTypeSizeMega:
		return []byte(s), nil
	case InstanceTypeSizeSmall:
		return []byte(s), nil
	case InstanceTypeSizeExtraLarge:
		return []byte(s), nil
	case InstanceTypeSizeTitan:
		return []byte(s), nil
	case InstanceTypeSizeMicro:
		return []byte(s), nil
	case InstanceTypeSizeColossus:
		return []byte(s), nil
	case InstanceTypeSizeTiny:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *InstanceTypeSize) UnmarshalText(data []byte) error {
	switch InstanceTypeSize(data) {
	case InstanceTypeSizeLarge:
		*s = InstanceTypeSizeLarge
		return nil
	case InstanceTypeSizeHuge:
		*s = InstanceTypeSizeHuge
		return nil
	case InstanceTypeSizeJumbo:
		*s = InstanceTypeSizeJumbo
		return nil
	case InstanceTypeSizeMedium:
		*s = InstanceTypeSizeMedium
		return nil
	case InstanceTypeSizeMega:
		*s = InstanceTypeSizeMega
		return nil
	case InstanceTypeSizeSmall:
		*s = InstanceTypeSizeSmall
		return nil
	case InstanceTypeSizeExtraLarge:
		*s = InstanceTypeSizeExtraLarge
		return nil
	case InstanceTypeSizeTitan:
		*s = InstanceTypeSizeTitan
		return nil
	case InstanceTypeSizeMicro:
		*s = InstanceTypeSizeMicro
		return nil
	case InstanceTypeSizeColossus:
		*s = InstanceTypeSizeColossus
		return nil
	case InstanceTypeSizeTiny:
		*s = InstanceTypeSizeTiny
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/labels
type Labels map[string]string

func (s *Labels) init() Labels {
	m := *s
	if m == nil {
		m = map[string]string{}
		*s = m
	}
	return m
}

type ListAPIKeysOK struct {
	APIMinusKeys []IamAPIKey `json:"api-keys"`
}

// GetAPIMinusKeys returns the value of APIMinusKeys.
func (s *ListAPIKeysOK) GetAPIMinusKeys() []IamAPIKey {
	return s.APIMinusKeys
}

// SetAPIMinusKeys sets the value of APIMinusKeys.
func (s *ListAPIKeysOK) SetAPIMinusKeys(val []IamAPIKey) {
	s.APIMinusKeys = val
}

type ListAccessKeyKnownOperationsOK struct {
	AccessMinusKeyMinusOperations []AccessKeyOperation `json:"access-key-operations"`
}

// GetAccessMinusKeyMinusOperations returns the value of AccessMinusKeyMinusOperations.
func (s *ListAccessKeyKnownOperationsOK) GetAccessMinusKeyMinusOperations() []AccessKeyOperation {
	return s.AccessMinusKeyMinusOperations
}

// SetAccessMinusKeyMinusOperations sets the value of AccessMinusKeyMinusOperations.
func (s *ListAccessKeyKnownOperationsOK) SetAccessMinusKeyMinusOperations(val []AccessKeyOperation) {
	s.AccessMinusKeyMinusOperations = val
}

type ListAccessKeyOperationsOK struct {
	AccessMinusKeyMinusOperations []AccessKeyOperation `json:"access-key-operations"`
}

// GetAccessMinusKeyMinusOperations returns the value of AccessMinusKeyMinusOperations.
func (s *ListAccessKeyOperationsOK) GetAccessMinusKeyMinusOperations() []AccessKeyOperation {
	return s.AccessMinusKeyMinusOperations
}

// SetAccessMinusKeyMinusOperations sets the value of AccessMinusKeyMinusOperations.
func (s *ListAccessKeyOperationsOK) SetAccessMinusKeyMinusOperations(val []AccessKeyOperation) {
	s.AccessMinusKeyMinusOperations = val
}

type ListAccessKeysOK struct {
	AccessMinusKeys []AccessKey `json:"access-keys"`
}

// GetAccessMinusKeys returns the value of AccessMinusKeys.
func (s *ListAccessKeysOK) GetAccessMinusKeys() []AccessKey {
	return s.AccessMinusKeys
}

// SetAccessMinusKeys sets the value of AccessMinusKeys.
func (s *ListAccessKeysOK) SetAccessMinusKeys(val []AccessKey) {
	s.AccessMinusKeys = val
}

type ListDNSDomainRecordsOK struct {
	DNSMinusDomainMinusRecords []DNSDomainRecord `json:"dns-domain-records"`
}

// GetDNSMinusDomainMinusRecords returns the value of DNSMinusDomainMinusRecords.
func (s *ListDNSDomainRecordsOK) GetDNSMinusDomainMinusRecords() []DNSDomainRecord {
	return s.DNSMinusDomainMinusRecords
}

// SetDNSMinusDomainMinusRecords sets the value of DNSMinusDomainMinusRecords.
func (s *ListDNSDomainRecordsOK) SetDNSMinusDomainMinusRecords(val []DNSDomainRecord) {
	s.DNSMinusDomainMinusRecords = val
}

type ListDNSDomainsOK struct {
	DNSMinusDomains []DNSDomain `json:"dns-domains"`
}

// GetDNSMinusDomains returns the value of DNSMinusDomains.
func (s *ListDNSDomainsOK) GetDNSMinusDomains() []DNSDomain {
	return s.DNSMinusDomains
}

// SetDNSMinusDomains sets the value of DNSMinusDomains.
func (s *ListDNSDomainsOK) SetDNSMinusDomains(val []DNSDomain) {
	s.DNSMinusDomains = val
}

type ListDbaasIntegrationSettingsOK struct {
	// The JSON schema representing the settings for the given integration type, source, and destination
	// service types.
	Settings OptListDbaasIntegrationSettingsOKSettings `json:"settings"`
}

// GetSettings returns the value of Settings.
func (s *ListDbaasIntegrationSettingsOK) GetSettings() OptListDbaasIntegrationSettingsOKSettings {
	return s.Settings
}

// SetSettings sets the value of Settings.
func (s *ListDbaasIntegrationSettingsOK) SetSettings(val OptListDbaasIntegrationSettingsOKSettings) {
	s.Settings = val
}

// The JSON schema representing the settings for the given integration type, source, and destination
// service types.
type ListDbaasIntegrationSettingsOKSettings struct {
	Properties           *ListDbaasIntegrationSettingsOKSettingsProperties `json:"properties"`
	AdditionalProperties OptBool                                           `json:"additionalProperties"`
	Type                 OptString                                         `json:"type"`
	Title                OptString                                         `json:"title"`
}

// GetProperties returns the value of Properties.
func (s *ListDbaasIntegrationSettingsOKSettings) GetProperties() *ListDbaasIntegrationSettingsOKSettingsProperties {
	return s.Properties
}

// GetAdditionalProperties returns the value of AdditionalProperties.
func (s *ListDbaasIntegrationSettingsOKSettings) GetAdditionalProperties() OptBool {
	return s.AdditionalProperties
}

// GetType returns the value of Type.
func (s *ListDbaasIntegrationSettingsOKSettings) GetType() OptString {
	return s.Type
}

// GetTitle returns the value of Title.
func (s *ListDbaasIntegrationSettingsOKSettings) GetTitle() OptString {
	return s.Title
}

// SetProperties sets the value of Properties.
func (s *ListDbaasIntegrationSettingsOKSettings) SetProperties(val *ListDbaasIntegrationSettingsOKSettingsProperties) {
	s.Properties = val
}

// SetAdditionalProperties sets the value of AdditionalProperties.
func (s *ListDbaasIntegrationSettingsOKSettings) SetAdditionalProperties(val OptBool) {
	s.AdditionalProperties = val
}

// SetType sets the value of Type.
func (s *ListDbaasIntegrationSettingsOKSettings) SetType(val OptString) {
	s.Type = val
}

// SetTitle sets the value of Title.
func (s *ListDbaasIntegrationSettingsOKSettings) SetTitle(val OptString) {
	s.Title = val
}

type ListDbaasIntegrationSettingsOKSettingsProperties struct{}

type ListDbaasIntegrationTypesOK struct {
	DbaasMinusIntegrationMinusTypes []DbaasIntegrationType `json:"dbaas-integration-types"`
}

// GetDbaasMinusIntegrationMinusTypes returns the value of DbaasMinusIntegrationMinusTypes.
func (s *ListDbaasIntegrationTypesOK) GetDbaasMinusIntegrationMinusTypes() []DbaasIntegrationType {
	return s.DbaasMinusIntegrationMinusTypes
}

// SetDbaasMinusIntegrationMinusTypes sets the value of DbaasMinusIntegrationMinusTypes.
func (s *ListDbaasIntegrationTypesOK) SetDbaasMinusIntegrationMinusTypes(val []DbaasIntegrationType) {
	s.DbaasMinusIntegrationMinusTypes = val
}

type ListDbaasServiceTypesOK struct {
	DbaasMinusServiceMinusTypes []DbaasServiceType `json:"dbaas-service-types"`
}

// GetDbaasMinusServiceMinusTypes returns the value of DbaasMinusServiceMinusTypes.
func (s *ListDbaasServiceTypesOK) GetDbaasMinusServiceMinusTypes() []DbaasServiceType {
	return s.DbaasMinusServiceMinusTypes
}

// SetDbaasMinusServiceMinusTypes sets the value of DbaasMinusServiceMinusTypes.
func (s *ListDbaasServiceTypesOK) SetDbaasMinusServiceMinusTypes(val []DbaasServiceType) {
	s.DbaasMinusServiceMinusTypes = val
}

type ListDbaasServicesOK struct {
	DbaasMinusServices []DbaasServiceCommon `json:"dbaas-services"`
}

// GetDbaasMinusServices returns the value of DbaasMinusServices.
func (s *ListDbaasServicesOK) GetDbaasMinusServices() []DbaasServiceCommon {
	return s.DbaasMinusServices
}

// SetDbaasMinusServices sets the value of DbaasMinusServices.
func (s *ListDbaasServicesOK) SetDbaasMinusServices(val []DbaasServiceCommon) {
	s.DbaasMinusServices = val
}

type ListDeployTargetsOK struct {
	DeployMinusTargets []DeployTarget `json:"deploy-targets"`
}

// GetDeployMinusTargets returns the value of DeployMinusTargets.
func (s *ListDeployTargetsOK) GetDeployMinusTargets() []DeployTarget {
	return s.DeployMinusTargets
}

// SetDeployMinusTargets sets the value of DeployMinusTargets.
func (s *ListDeployTargetsOK) SetDeployMinusTargets(val []DeployTarget) {
	s.DeployMinusTargets = val
}

type ListElasticIpsOK struct {
	ElasticMinusIps []ElasticIP `json:"elastic-ips"`
}

// GetElasticMinusIps returns the value of ElasticMinusIps.
func (s *ListElasticIpsOK) GetElasticMinusIps() []ElasticIP {
	return s.ElasticMinusIps
}

// SetElasticMinusIps sets the value of ElasticMinusIps.
func (s *ListElasticIpsOK) SetElasticMinusIps(val []ElasticIP) {
	s.ElasticMinusIps = val
}

type ListIamRolesOK struct {
	IamMinusRoles []IamRole `json:"iam-roles"`
}

// GetIamMinusRoles returns the value of IamMinusRoles.
func (s *ListIamRolesOK) GetIamMinusRoles() []IamRole {
	return s.IamMinusRoles
}

// SetIamMinusRoles sets the value of IamMinusRoles.
func (s *ListIamRolesOK) SetIamMinusRoles(val []IamRole) {
	s.IamMinusRoles = val
}

type ListInstanceTypesOK struct {
	InstanceMinusTypes []InstanceType `json:"instance-types"`
}

// GetInstanceMinusTypes returns the value of InstanceMinusTypes.
func (s *ListInstanceTypesOK) GetInstanceMinusTypes() []InstanceType {
	return s.InstanceMinusTypes
}

// SetInstanceMinusTypes sets the value of InstanceMinusTypes.
func (s *ListInstanceTypesOK) SetInstanceMinusTypes(val []InstanceType) {
	s.InstanceMinusTypes = val
}

type ListPrivateNetworksOK struct {
	PrivateMinusNetworks []PrivateNetwork `json:"private-networks"`
}

// GetPrivateMinusNetworks returns the value of PrivateMinusNetworks.
func (s *ListPrivateNetworksOK) GetPrivateMinusNetworks() []PrivateNetwork {
	return s.PrivateMinusNetworks
}

// SetPrivateMinusNetworks sets the value of PrivateMinusNetworks.
func (s *ListPrivateNetworksOK) SetPrivateMinusNetworks(val []PrivateNetwork) {
	s.PrivateMinusNetworks = val
}

type ListQuotasOK struct {
	Quotas []Quota `json:"quotas"`
}

// GetQuotas returns the value of Quotas.
func (s *ListQuotasOK) GetQuotas() []Quota {
	return s.Quotas
}

// SetQuotas sets the value of Quotas.
func (s *ListQuotasOK) SetQuotas(val []Quota) {
	s.Quotas = val
}

type ListSSHKeysOK struct {
	SSHMinusKeys []SSHKey `json:"ssh-keys"`
}

// GetSSHMinusKeys returns the value of SSHMinusKeys.
func (s *ListSSHKeysOK) GetSSHMinusKeys() []SSHKey {
	return s.SSHMinusKeys
}

// SetSSHMinusKeys sets the value of SSHMinusKeys.
func (s *ListSSHKeysOK) SetSSHMinusKeys(val []SSHKey) {
	s.SSHMinusKeys = val
}

type ListSksClusterVersionsOK struct {
	SksMinusClusterMinusVersions []string `json:"sks-cluster-versions"`
}

// GetSksMinusClusterMinusVersions returns the value of SksMinusClusterMinusVersions.
func (s *ListSksClusterVersionsOK) GetSksMinusClusterMinusVersions() []string {
	return s.SksMinusClusterMinusVersions
}

// SetSksMinusClusterMinusVersions sets the value of SksMinusClusterMinusVersions.
func (s *ListSksClusterVersionsOK) SetSksMinusClusterMinusVersions(val []string) {
	s.SksMinusClusterMinusVersions = val
}

type ListSosBucketsUsageOK struct {
	SosMinusBucketsMinusUsage []SosBucketUsage `json:"sos-buckets-usage"`
}

// GetSosMinusBucketsMinusUsage returns the value of SosMinusBucketsMinusUsage.
func (s *ListSosBucketsUsageOK) GetSosMinusBucketsMinusUsage() []SosBucketUsage {
	return s.SosMinusBucketsMinusUsage
}

// SetSosMinusBucketsMinusUsage sets the value of SosMinusBucketsMinusUsage.
func (s *ListSosBucketsUsageOK) SetSosMinusBucketsMinusUsage(val []SosBucketUsage) {
	s.SosMinusBucketsMinusUsage = val
}

type ListTemplatesOK struct {
	Templates []Template `json:"templates"`
}

// GetTemplates returns the value of Templates.
func (s *ListTemplatesOK) GetTemplates() []Template {
	return s.Templates
}

// SetTemplates sets the value of Templates.
func (s *ListTemplatesOK) SetTemplates(val []Template) {
	s.Templates = val
}

type ListTemplatesVisibility string

const (
	ListTemplatesVisibilityPrivate ListTemplatesVisibility = "private"
	ListTemplatesVisibilityPublic  ListTemplatesVisibility = "public"
)

// MarshalText implements encoding.TextMarshaler.
func (s ListTemplatesVisibility) MarshalText() ([]byte, error) {
	switch s {
	case ListTemplatesVisibilityPrivate:
		return []byte(s), nil
	case ListTemplatesVisibilityPublic:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *ListTemplatesVisibility) UnmarshalText(data []byte) error {
	switch ListTemplatesVisibility(data) {
	case ListTemplatesVisibilityPrivate:
		*s = ListTemplatesVisibilityPrivate
		return nil
	case ListTemplatesVisibilityPublic:
		*s = ListTemplatesVisibilityPublic
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type ListZonesOK struct {
	Zones []Zone `json:"zones"`
}

// GetZones returns the value of Zones.
func (s *ListZonesOK) GetZones() []Zone {
	return s.Zones
}

// SetZones sets the value of Zones.
func (s *ListZonesOK) SetZones(val []Zone) {
	s.Zones = val
}

// Load Balancer Service healthcheck.
// Ref: #/components/schemas/load-balancer-service-healthcheck
type LoadBalancerServiceHealthcheck struct {
	// Healthcheck mode.
	Mode OptLoadBalancerServiceHealthcheckMode `json:"mode"`
	// Healthcheck interval (default: 10).
	Interval OptInt64 `json:"interval"`
	// Healthcheck URI.
	URI OptString `json:"uri"`
	// Healthcheck port.
	Port OptInt64 `json:"port"`
	// Healthcheck timeout value (default: 2).
	Timeout OptInt64 `json:"timeout"`
	// Number of retries before considering a Service failed.
	Retries OptInt64 `json:"retries"`
	// SNI domain for HTTPS healthchecks.
	TLSMinusSni OptString `json:"tls-sni"`
}

// GetMode returns the value of Mode.
func (s *LoadBalancerServiceHealthcheck) GetMode() OptLoadBalancerServiceHealthcheckMode {
	return s.Mode
}

// GetInterval returns the value of Interval.
func (s *LoadBalancerServiceHealthcheck) GetInterval() OptInt64 {
	return s.Interval
}

// GetURI returns the value of URI.
func (s *LoadBalancerServiceHealthcheck) GetURI() OptString {
	return s.URI
}

// GetPort returns the value of Port.
func (s *LoadBalancerServiceHealthcheck) GetPort() OptInt64 {
	return s.Port
}

// GetTimeout returns the value of Timeout.
func (s *LoadBalancerServiceHealthcheck) GetTimeout() OptInt64 {
	return s.Timeout
}

// GetRetries returns the value of Retries.
func (s *LoadBalancerServiceHealthcheck) GetRetries() OptInt64 {
	return s.Retries
}

// GetTLSMinusSni returns the value of TLSMinusSni.
func (s *LoadBalancerServiceHealthcheck) GetTLSMinusSni() OptString {
	return s.TLSMinusSni
}

// SetMode sets the value of Mode.
func (s *LoadBalancerServiceHealthcheck) SetMode(val OptLoadBalancerServiceHealthcheckMode) {
	s.Mode = val
}

// SetInterval sets the value of Interval.
func (s *LoadBalancerServiceHealthcheck) SetInterval(val OptInt64) {
	s.Interval = val
}

// SetURI sets the value of URI.
func (s *LoadBalancerServiceHealthcheck) SetURI(val OptString) {
	s.URI = val
}

// SetPort sets the value of Port.
func (s *LoadBalancerServiceHealthcheck) SetPort(val OptInt64) {
	s.Port = val
}

// SetTimeout sets the value of Timeout.
func (s *LoadBalancerServiceHealthcheck) SetTimeout(val OptInt64) {
	s.Timeout = val
}

// SetRetries sets the value of Retries.
func (s *LoadBalancerServiceHealthcheck) SetRetries(val OptInt64) {
	s.Retries = val
}

// SetTLSMinusSni sets the value of TLSMinusSni.
func (s *LoadBalancerServiceHealthcheck) SetTLSMinusSni(val OptString) {
	s.TLSMinusSni = val
}

// Healthcheck mode.
type LoadBalancerServiceHealthcheckMode string

const (
	LoadBalancerServiceHealthcheckModeTCP   LoadBalancerServiceHealthcheckMode = "tcp"
	LoadBalancerServiceHealthcheckModeHTTP  LoadBalancerServiceHealthcheckMode = "http"
	LoadBalancerServiceHealthcheckModeHTTPS LoadBalancerServiceHealthcheckMode = "https"
)

// MarshalText implements encoding.TextMarshaler.
func (s LoadBalancerServiceHealthcheckMode) MarshalText() ([]byte, error) {
	switch s {
	case LoadBalancerServiceHealthcheckModeTCP:
		return []byte(s), nil
	case LoadBalancerServiceHealthcheckModeHTTP:
		return []byte(s), nil
	case LoadBalancerServiceHealthcheckModeHTTPS:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *LoadBalancerServiceHealthcheckMode) UnmarshalText(data []byte) error {
	switch LoadBalancerServiceHealthcheckMode(data) {
	case LoadBalancerServiceHealthcheckModeTCP:
		*s = LoadBalancerServiceHealthcheckModeTCP
		return nil
	case LoadBalancerServiceHealthcheckModeHTTP:
		*s = LoadBalancerServiceHealthcheckModeHTTP
		return nil
	case LoadBalancerServiceHealthcheckModeHTTPS:
		*s = LoadBalancerServiceHealthcheckModeHTTPS
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Operation.
// Ref: #/components/schemas/operation
type Operation struct {
	// Operation ID.
	ID OptUUID `json:"id"`
	// Operation failure reason.
	Reason OptOperationReason `json:"reason"`
	// Related resource reference.
	Reference OptOperationReference `json:"reference"`
	// Operation message.
	Message OptString `json:"message"`
	// Operation status.
	State OptOperationState `json:"state"`
}

// GetID returns the value of ID.
func (s *Operation) GetID() OptUUID {
	return s.ID
}

// GetReason returns the value of Reason.
func (s *Operation) GetReason() OptOperationReason {
	return s.Reason
}

// GetReference returns the value of Reference.
func (s *Operation) GetReference() OptOperationReference {
	return s.Reference
}

// GetMessage returns the value of Message.
func (s *Operation) GetMessage() OptString {
	return s.Message
}

// GetState returns the value of State.
func (s *Operation) GetState() OptOperationState {
	return s.State
}

// SetID sets the value of ID.
func (s *Operation) SetID(val OptUUID) {
	s.ID = val
}

// SetReason sets the value of Reason.
func (s *Operation) SetReason(val OptOperationReason) {
	s.Reason = val
}

// SetReference sets the value of Reference.
func (s *Operation) SetReference(val OptOperationReference) {
	s.Reference = val
}

// SetMessage sets the value of Message.
func (s *Operation) SetMessage(val OptString) {
	s.Message = val
}

// SetState sets the value of State.
func (s *Operation) SetState(val OptOperationState) {
	s.State = val
}

// Operation failure reason.
type OperationReason string

const (
	OperationReasonIncorrect   OperationReason = "incorrect"
	OperationReasonUnknown     OperationReason = "unknown"
	OperationReasonUnavailable OperationReason = "unavailable"
	OperationReasonForbidden   OperationReason = "forbidden"
	OperationReasonBusy        OperationReason = "busy"
	OperationReasonFault       OperationReason = "fault"
	OperationReasonPartial     OperationReason = "partial"
	OperationReasonNotFound    OperationReason = "not-found"
	OperationReasonInterrupted OperationReason = "interrupted"
	OperationReasonUnsupported OperationReason = "unsupported"
	OperationReasonConflict    OperationReason = "conflict"
)

// MarshalText implements encoding.TextMarshaler.
func (s OperationReason) MarshalText() ([]byte, error) {
	switch s {
	case OperationReasonIncorrect:
		return []byte(s), nil
	case OperationReasonUnknown:
		return []byte(s), nil
	case OperationReasonUnavailable:
		return []byte(s), nil
	case OperationReasonForbidden:
		return []byte(s), nil
	case OperationReasonBusy:
		return []byte(s), nil
	case OperationReasonFault:
		return []byte(s), nil
	case OperationReasonPartial:
		return []byte(s), nil
	case OperationReasonNotFound:
		return []byte(s), nil
	case OperationReasonInterrupted:
		return []byte(s), nil
	case OperationReasonUnsupported:
		return []byte(s), nil
	case OperationReasonConflict:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *OperationReason) UnmarshalText(data []byte) error {
	switch OperationReason(data) {
	case OperationReasonIncorrect:
		*s = OperationReasonIncorrect
		return nil
	case OperationReasonUnknown:
		*s = OperationReasonUnknown
		return nil
	case OperationReasonUnavailable:
		*s = OperationReasonUnavailable
		return nil
	case OperationReasonForbidden:
		*s = OperationReasonForbidden
		return nil
	case OperationReasonBusy:
		*s = OperationReasonBusy
		return nil
	case OperationReasonFault:
		*s = OperationReasonFault
		return nil
	case OperationReasonPartial:
		*s = OperationReasonPartial
		return nil
	case OperationReasonNotFound:
		*s = OperationReasonNotFound
		return nil
	case OperationReasonInterrupted:
		*s = OperationReasonInterrupted
		return nil
	case OperationReasonUnsupported:
		*s = OperationReasonUnsupported
		return nil
	case OperationReasonConflict:
		*s = OperationReasonConflict
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Related resource reference.
type OperationReference struct {
	// Reference ID.
	ID OptUUID `json:"id"`
	// Link to the referenced resource.
	Link OptString `json:"link"`
	// Command name.
	Command OptString `json:"command"`
}

// GetID returns the value of ID.
func (s *OperationReference) GetID() OptUUID {
	return s.ID
}

// GetLink returns the value of Link.
func (s *OperationReference) GetLink() OptString {
	return s.Link
}

// GetCommand returns the value of Command.
func (s *OperationReference) GetCommand() OptString {
	return s.Command
}

// SetID sets the value of ID.
func (s *OperationReference) SetID(val OptUUID) {
	s.ID = val
}

// SetLink sets the value of Link.
func (s *OperationReference) SetLink(val OptString) {
	s.Link = val
}

// SetCommand sets the value of Command.
func (s *OperationReference) SetCommand(val OptString) {
	s.Command = val
}

// Operation status.
type OperationState string

const (
	OperationStateFailure OperationState = "failure"
	OperationStatePending OperationState = "pending"
	OperationStateSuccess OperationState = "success"
	OperationStateTimeout OperationState = "timeout"
)

// MarshalText implements encoding.TextMarshaler.
func (s OperationState) MarshalText() ([]byte, error) {
	switch s {
	case OperationStateFailure:
		return []byte(s), nil
	case OperationStatePending:
		return []byte(s), nil
	case OperationStateSuccess:
		return []byte(s), nil
	case OperationStateTimeout:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *OperationState) UnmarshalText(data []byte) error {
	switch OperationState(data) {
	case OperationStateFailure:
		*s = OperationStateFailure
		return nil
	case OperationStatePending:
		*s = OperationStatePending
		return nil
	case OperationStateSuccess:
		*s = OperationStateSuccess
		return nil
	case OperationStateTimeout:
		*s = OperationStateTimeout
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// NewOptAccessKeyResourceDomain returns new OptAccessKeyResourceDomain with value set to v.
func NewOptAccessKeyResourceDomain(v AccessKeyResourceDomain) OptAccessKeyResourceDomain {
	return OptAccessKeyResourceDomain{
		Value: v,
		Set:   true,
	}
}

// OptAccessKeyResourceDomain is optional AccessKeyResourceDomain.
type OptAccessKeyResourceDomain struct {
	Value AccessKeyResourceDomain
	Set   bool
}

// IsSet returns true if OptAccessKeyResourceDomain was set.
func (o OptAccessKeyResourceDomain) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAccessKeyResourceDomain) Reset() {
	var v AccessKeyResourceDomain
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAccessKeyResourceDomain) SetTo(v AccessKeyResourceDomain) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAccessKeyResourceDomain) Get() (v AccessKeyResourceDomain, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAccessKeyResourceDomain) Or(d AccessKeyResourceDomain) AccessKeyResourceDomain {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAccessKeyResourceResourceMinusType returns new OptAccessKeyResourceResourceMinusType with value set to v.
func NewOptAccessKeyResourceResourceMinusType(v AccessKeyResourceResourceMinusType) OptAccessKeyResourceResourceMinusType {
	return OptAccessKeyResourceResourceMinusType{
		Value: v,
		Set:   true,
	}
}

// OptAccessKeyResourceResourceMinusType is optional AccessKeyResourceResourceMinusType.
type OptAccessKeyResourceResourceMinusType struct {
	Value AccessKeyResourceResourceMinusType
	Set   bool
}

// IsSet returns true if OptAccessKeyResourceResourceMinusType was set.
func (o OptAccessKeyResourceResourceMinusType) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAccessKeyResourceResourceMinusType) Reset() {
	var v AccessKeyResourceResourceMinusType
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAccessKeyResourceResourceMinusType) SetTo(v AccessKeyResourceResourceMinusType) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAccessKeyResourceResourceMinusType) Get() (v AccessKeyResourceResourceMinusType, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAccessKeyResourceResourceMinusType) Or(d AccessKeyResourceResourceMinusType) AccessKeyResourceResourceMinusType {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAccessKeyType returns new OptAccessKeyType with value set to v.
func NewOptAccessKeyType(v AccessKeyType) OptAccessKeyType {
	return OptAccessKeyType{
		Value: v,
		Set:   true,
	}
}

// OptAccessKeyType is optional AccessKeyType.
type OptAccessKeyType struct {
	Value AccessKeyType
	Set   bool
}

// IsSet returns true if OptAccessKeyType was set.
func (o OptAccessKeyType) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAccessKeyType) Reset() {
	var v AccessKeyType
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAccessKeyType) SetTo(v AccessKeyType) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAccessKeyType) Get() (v AccessKeyType, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAccessKeyType) Or(d AccessKeyType) AccessKeyType {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAccessKeyVersion returns new OptAccessKeyVersion with value set to v.
func NewOptAccessKeyVersion(v AccessKeyVersion) OptAccessKeyVersion {
	return OptAccessKeyVersion{
		Value: v,
		Set:   true,
	}
}

// OptAccessKeyVersion is optional AccessKeyVersion.
type OptAccessKeyVersion struct {
	Value AccessKeyVersion
	Set   bool
}

// IsSet returns true if OptAccessKeyVersion was set.
func (o OptAccessKeyVersion) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAccessKeyVersion) Reset() {
	var v AccessKeyVersion
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAccessKeyVersion) SetTo(v AccessKeyVersion) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAccessKeyVersion) Get() (v AccessKeyVersion, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAccessKeyVersion) Or(d AccessKeyVersion) AccessKeyVersion {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAddRuleToSecurityGroupReqIcmp returns new OptAddRuleToSecurityGroupReqIcmp with value set to v.
func NewOptAddRuleToSecurityGroupReqIcmp(v AddRuleToSecurityGroupReqIcmp) OptAddRuleToSecurityGroupReqIcmp {
	return OptAddRuleToSecurityGroupReqIcmp{
		Value: v,
		Set:   true,
	}
}

// OptAddRuleToSecurityGroupReqIcmp is optional AddRuleToSecurityGroupReqIcmp.
type OptAddRuleToSecurityGroupReqIcmp struct {
	Value AddRuleToSecurityGroupReqIcmp
	Set   bool
}

// IsSet returns true if OptAddRuleToSecurityGroupReqIcmp was set.
func (o OptAddRuleToSecurityGroupReqIcmp) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAddRuleToSecurityGroupReqIcmp) Reset() {
	var v AddRuleToSecurityGroupReqIcmp
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAddRuleToSecurityGroupReqIcmp) SetTo(v AddRuleToSecurityGroupReqIcmp) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAddRuleToSecurityGroupReqIcmp) Get() (v AddRuleToSecurityGroupReqIcmp, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAddRuleToSecurityGroupReqIcmp) Or(d AddRuleToSecurityGroupReqIcmp) AddRuleToSecurityGroupReqIcmp {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptBool returns new OptBool with value set to v.
func NewOptBool(v bool) OptBool {
	return OptBool{
		Value: v,
		Set:   true,
	}
}

// OptBool is optional bool.
type OptBool struct {
	Value bool
	Set   bool
}

// IsSet returns true if OptBool was set.
func (o OptBool) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBool) Reset() {
	var v bool
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBool) SetTo(v bool) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBool) Get() (v bool, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptBool) Or(d bool) bool {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptCreateDbaasServiceKafkaReqAuthenticationMinusMethods returns new OptCreateDbaasServiceKafkaReqAuthenticationMinusMethods with value set to v.
func NewOptCreateDbaasServiceKafkaReqAuthenticationMinusMethods(v CreateDbaasServiceKafkaReqAuthenticationMinusMethods) OptCreateDbaasServiceKafkaReqAuthenticationMinusMethods {
	return OptCreateDbaasServiceKafkaReqAuthenticationMinusMethods{
		Value: v,
		Set:   true,
	}
}

// OptCreateDbaasServiceKafkaReqAuthenticationMinusMethods is optional CreateDbaasServiceKafkaReqAuthenticationMinusMethods.
type OptCreateDbaasServiceKafkaReqAuthenticationMinusMethods struct {
	Value CreateDbaasServiceKafkaReqAuthenticationMinusMethods
	Set   bool
}

// IsSet returns true if OptCreateDbaasServiceKafkaReqAuthenticationMinusMethods was set.
func (o OptCreateDbaasServiceKafkaReqAuthenticationMinusMethods) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCreateDbaasServiceKafkaReqAuthenticationMinusMethods) Reset() {
	var v CreateDbaasServiceKafkaReqAuthenticationMinusMethods
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCreateDbaasServiceKafkaReqAuthenticationMinusMethods) SetTo(v CreateDbaasServiceKafkaReqAuthenticationMinusMethods) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCreateDbaasServiceKafkaReqAuthenticationMinusMethods) Get() (v CreateDbaasServiceKafkaReqAuthenticationMinusMethods, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptCreateDbaasServiceKafkaReqAuthenticationMinusMethods) Or(d CreateDbaasServiceKafkaReqAuthenticationMinusMethods) CreateDbaasServiceKafkaReqAuthenticationMinusMethods {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptCreateDbaasServiceKafkaReqMaintenance returns new OptCreateDbaasServiceKafkaReqMaintenance with value set to v.
func NewOptCreateDbaasServiceKafkaReqMaintenance(v CreateDbaasServiceKafkaReqMaintenance) OptCreateDbaasServiceKafkaReqMaintenance {
	return OptCreateDbaasServiceKafkaReqMaintenance{
		Value: v,
		Set:   true,
	}
}

// OptCreateDbaasServiceKafkaReqMaintenance is optional CreateDbaasServiceKafkaReqMaintenance.
type OptCreateDbaasServiceKafkaReqMaintenance struct {
	Value CreateDbaasServiceKafkaReqMaintenance
	Set   bool
}

// IsSet returns true if OptCreateDbaasServiceKafkaReqMaintenance was set.
func (o OptCreateDbaasServiceKafkaReqMaintenance) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCreateDbaasServiceKafkaReqMaintenance) Reset() {
	var v CreateDbaasServiceKafkaReqMaintenance
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCreateDbaasServiceKafkaReqMaintenance) SetTo(v CreateDbaasServiceKafkaReqMaintenance) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCreateDbaasServiceKafkaReqMaintenance) Get() (v CreateDbaasServiceKafkaReqMaintenance, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptCreateDbaasServiceKafkaReqMaintenance) Or(d CreateDbaasServiceKafkaReqMaintenance) CreateDbaasServiceKafkaReqMaintenance {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptCreateDbaasServiceMysqlReqBackupMinusSchedule returns new OptCreateDbaasServiceMysqlReqBackupMinusSchedule with value set to v.
func NewOptCreateDbaasServiceMysqlReqBackupMinusSchedule(v CreateDbaasServiceMysqlReqBackupMinusSchedule) OptCreateDbaasServiceMysqlReqBackupMinusSchedule {
	return OptCreateDbaasServiceMysqlReqBackupMinusSchedule{
		Value: v,
		Set:   true,
	}
}

// OptCreateDbaasServiceMysqlReqBackupMinusSchedule is optional CreateDbaasServiceMysqlReqBackupMinusSchedule.
type OptCreateDbaasServiceMysqlReqBackupMinusSchedule struct {
	Value CreateDbaasServiceMysqlReqBackupMinusSchedule
	Set   bool
}

// IsSet returns true if OptCreateDbaasServiceMysqlReqBackupMinusSchedule was set.
func (o OptCreateDbaasServiceMysqlReqBackupMinusSchedule) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCreateDbaasServiceMysqlReqBackupMinusSchedule) Reset() {
	var v CreateDbaasServiceMysqlReqBackupMinusSchedule
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCreateDbaasServiceMysqlReqBackupMinusSchedule) SetTo(v CreateDbaasServiceMysqlReqBackupMinusSchedule) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCreateDbaasServiceMysqlReqBackupMinusSchedule) Get() (v CreateDbaasServiceMysqlReqBackupMinusSchedule, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptCreateDbaasServiceMysqlReqBackupMinusSchedule) Or(d CreateDbaasServiceMysqlReqBackupMinusSchedule) CreateDbaasServiceMysqlReqBackupMinusSchedule {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptCreateDbaasServiceMysqlReqMaintenance returns new OptCreateDbaasServiceMysqlReqMaintenance with value set to v.
func NewOptCreateDbaasServiceMysqlReqMaintenance(v CreateDbaasServiceMysqlReqMaintenance) OptCreateDbaasServiceMysqlReqMaintenance {
	return OptCreateDbaasServiceMysqlReqMaintenance{
		Value: v,
		Set:   true,
	}
}

// OptCreateDbaasServiceMysqlReqMaintenance is optional CreateDbaasServiceMysqlReqMaintenance.
type OptCreateDbaasServiceMysqlReqMaintenance struct {
	Value CreateDbaasServiceMysqlReqMaintenance
	Set   bool
}

// IsSet returns true if OptCreateDbaasServiceMysqlReqMaintenance was set.
func (o OptCreateDbaasServiceMysqlReqMaintenance) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCreateDbaasServiceMysqlReqMaintenance) Reset() {
	var v CreateDbaasServiceMysqlReqMaintenance
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCreateDbaasServiceMysqlReqMaintenance) SetTo(v CreateDbaasServiceMysqlReqMaintenance) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCreateDbaasServiceMysqlReqMaintenance) Get() (v CreateDbaasServiceMysqlReqMaintenance, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptCreateDbaasServiceMysqlReqMaintenance) Or(d CreateDbaasServiceMysqlReqMaintenance) CreateDbaasServiceMysqlReqMaintenance {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptCreateDbaasServiceMysqlReqMigration returns new OptCreateDbaasServiceMysqlReqMigration with value set to v.
func NewOptCreateDbaasServiceMysqlReqMigration(v CreateDbaasServiceMysqlReqMigration) OptCreateDbaasServiceMysqlReqMigration {
	return OptCreateDbaasServiceMysqlReqMigration{
		Value: v,
		Set:   true,
	}
}

// OptCreateDbaasServiceMysqlReqMigration is optional CreateDbaasServiceMysqlReqMigration.
type OptCreateDbaasServiceMysqlReqMigration struct {
	Value CreateDbaasServiceMysqlReqMigration
	Set   bool
}

// IsSet returns true if OptCreateDbaasServiceMysqlReqMigration was set.
func (o OptCreateDbaasServiceMysqlReqMigration) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCreateDbaasServiceMysqlReqMigration) Reset() {
	var v CreateDbaasServiceMysqlReqMigration
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCreateDbaasServiceMysqlReqMigration) SetTo(v CreateDbaasServiceMysqlReqMigration) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCreateDbaasServiceMysqlReqMigration) Get() (v CreateDbaasServiceMysqlReqMigration, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptCreateDbaasServiceMysqlReqMigration) Or(d CreateDbaasServiceMysqlReqMigration) CreateDbaasServiceMysqlReqMigration {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptCreateDbaasServiceOpensearchReqIndexMinusPatternsItemSortingMinusAlgorithm returns new OptCreateDbaasServiceOpensearchReqIndexMinusPatternsItemSortingMinusAlgorithm with value set to v.
func NewOptCreateDbaasServiceOpensearchReqIndexMinusPatternsItemSortingMinusAlgorithm(v CreateDbaasServiceOpensearchReqIndexMinusPatternsItemSortingMinusAlgorithm) OptCreateDbaasServiceOpensearchReqIndexMinusPatternsItemSortingMinusAlgorithm {
	return OptCreateDbaasServiceOpensearchReqIndexMinusPatternsItemSortingMinusAlgorithm{
		Value: v,
		Set:   true,
	}
}

// OptCreateDbaasServiceOpensearchReqIndexMinusPatternsItemSortingMinusAlgorithm is optional CreateDbaasServiceOpensearchReqIndexMinusPatternsItemSortingMinusAlgorithm.
type OptCreateDbaasServiceOpensearchReqIndexMinusPatternsItemSortingMinusAlgorithm struct {
	Value CreateDbaasServiceOpensearchReqIndexMinusPatternsItemSortingMinusAlgorithm
	Set   bool
}

// IsSet returns true if OptCreateDbaasServiceOpensearchReqIndexMinusPatternsItemSortingMinusAlgorithm was set.
func (o OptCreateDbaasServiceOpensearchReqIndexMinusPatternsItemSortingMinusAlgorithm) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptCreateDbaasServiceOpensearchReqIndexMinusPatternsItemSortingMinusAlgorithm) Reset() {
	var v CreateDbaasServiceOpensearchReqIndexMinusPatternsItemSortingMinusAlgorithm
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCreateDbaasServiceOpensearchReqIndexMinusPatternsItemSortingMinusAlgorithm) SetTo(v CreateDbaasServiceOpensearchReqIndexMinusPatternsItemSortingMinusAlgorithm) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCreateDbaasServiceOpensearchReqIndexMinusPatternsItemSortingMinusAlgorithm) Get() (v CreateDbaasServiceOpensearchReqIndexMinusPatternsItemSortingMinusAlgorithm, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptCreateDbaasServiceOpensearchReqIndexMinusPatternsItemSortingMinusAlgorithm) Or(d CreateDbaasServiceOpensearchReqIndexMinusPatternsItemSortingMinusAlgorithm) CreateDbaasServiceOpensearchReqIndexMinusPatternsItemSortingMinusAlgorithm {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptCreateDbaasServiceOpensearchReqIndexMinusTemplate returns new OptCreateDbaasServiceOpensearchReqIndexMinusTemplate with value set to v.
func NewOptCreateDbaasServiceOpensearchReqIndexMinusTemplate(v CreateDbaasServiceOpensearchReqIndexMinusTemplate) OptCreateDbaasServiceOpensearchReqIndexMinusTemplate {
	return OptCreateDbaasServiceOpensearchReqIndexMinusTemplate{
		Value: v,
		Set:   true,
	}
}

// OptCreateDbaasServiceOpensearchReqIndexMinusTemplate is optional CreateDbaasServiceOpensearchReqIndexMinusTemplate.
type OptCreateDbaasServiceOpensearchReqIndexMinusTemplate struct {
	Value CreateDbaasServiceOpensearchReqIndexMinusTemplate
	Set   bool
}

// IsSet returns true if OptCreateDbaasServiceOpensearchReqIndexMinusTemplate was set.
func (o OptCreateDbaasServiceOpensearchReqIndexMinusTemplate) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCreateDbaasServiceOpensearchReqIndexMinusTemplate) Reset() {
	var v CreateDbaasServiceOpensearchReqIndexMinusTemplate
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCreateDbaasServiceOpensearchReqIndexMinusTemplate) SetTo(v CreateDbaasServiceOpensearchReqIndexMinusTemplate) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCreateDbaasServiceOpensearchReqIndexMinusTemplate) Get() (v CreateDbaasServiceOpensearchReqIndexMinusTemplate, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptCreateDbaasServiceOpensearchReqIndexMinusTemplate) Or(d CreateDbaasServiceOpensearchReqIndexMinusTemplate) CreateDbaasServiceOpensearchReqIndexMinusTemplate {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptCreateDbaasServiceOpensearchReqMaintenance returns new OptCreateDbaasServiceOpensearchReqMaintenance with value set to v.
func NewOptCreateDbaasServiceOpensearchReqMaintenance(v CreateDbaasServiceOpensearchReqMaintenance) OptCreateDbaasServiceOpensearchReqMaintenance {
	return OptCreateDbaasServiceOpensearchReqMaintenance{
		Value: v,
		Set:   true,
	}
}

// OptCreateDbaasServiceOpensearchReqMaintenance is optional CreateDbaasServiceOpensearchReqMaintenance.
type OptCreateDbaasServiceOpensearchReqMaintenance struct {
	Value CreateDbaasServiceOpensearchReqMaintenance
	Set   bool
}

// IsSet returns true if OptCreateDbaasServiceOpensearchReqMaintenance was set.
func (o OptCreateDbaasServiceOpensearchReqMaintenance) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCreateDbaasServiceOpensearchReqMaintenance) Reset() {
	var v CreateDbaasServiceOpensearchReqMaintenance
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCreateDbaasServiceOpensearchReqMaintenance) SetTo(v CreateDbaasServiceOpensearchReqMaintenance) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCreateDbaasServiceOpensearchReqMaintenance) Get() (v CreateDbaasServiceOpensearchReqMaintenance, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptCreateDbaasServiceOpensearchReqMaintenance) Or(d CreateDbaasServiceOpensearchReqMaintenance) CreateDbaasServiceOpensearchReqMaintenance {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptCreateDbaasServiceOpensearchReqOpensearchMinusDashboards returns new OptCreateDbaasServiceOpensearchReqOpensearchMinusDashboards with value set to v.
func NewOptCreateDbaasServiceOpensearchReqOpensearchMinusDashboards(v CreateDbaasServiceOpensearchReqOpensearchMinusDashboards) OptCreateDbaasServiceOpensearchReqOpensearchMinusDashboards {
	return OptCreateDbaasServiceOpensearchReqOpensearchMinusDashboards{
		Value: v,
		Set:   true,
	}
}

// OptCreateDbaasServiceOpensearchReqOpensearchMinusDashboards is optional CreateDbaasServiceOpensearchReqOpensearchMinusDashboards.
type OptCreateDbaasServiceOpensearchReqOpensearchMinusDashboards struct {
	Value CreateDbaasServiceOpensearchReqOpensearchMinusDashboards
	Set   bool
}

// IsSet returns true if OptCreateDbaasServiceOpensearchReqOpensearchMinusDashboards was set.
func (o OptCreateDbaasServiceOpensearchReqOpensearchMinusDashboards) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCreateDbaasServiceOpensearchReqOpensearchMinusDashboards) Reset() {
	var v CreateDbaasServiceOpensearchReqOpensearchMinusDashboards
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCreateDbaasServiceOpensearchReqOpensearchMinusDashboards) SetTo(v CreateDbaasServiceOpensearchReqOpensearchMinusDashboards) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCreateDbaasServiceOpensearchReqOpensearchMinusDashboards) Get() (v CreateDbaasServiceOpensearchReqOpensearchMinusDashboards, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptCreateDbaasServiceOpensearchReqOpensearchMinusDashboards) Or(d CreateDbaasServiceOpensearchReqOpensearchMinusDashboards) CreateDbaasServiceOpensearchReqOpensearchMinusDashboards {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptCreateDbaasServicePgReqBackupMinusSchedule returns new OptCreateDbaasServicePgReqBackupMinusSchedule with value set to v.
func NewOptCreateDbaasServicePgReqBackupMinusSchedule(v CreateDbaasServicePgReqBackupMinusSchedule) OptCreateDbaasServicePgReqBackupMinusSchedule {
	return OptCreateDbaasServicePgReqBackupMinusSchedule{
		Value: v,
		Set:   true,
	}
}

// OptCreateDbaasServicePgReqBackupMinusSchedule is optional CreateDbaasServicePgReqBackupMinusSchedule.
type OptCreateDbaasServicePgReqBackupMinusSchedule struct {
	Value CreateDbaasServicePgReqBackupMinusSchedule
	Set   bool
}

// IsSet returns true if OptCreateDbaasServicePgReqBackupMinusSchedule was set.
func (o OptCreateDbaasServicePgReqBackupMinusSchedule) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCreateDbaasServicePgReqBackupMinusSchedule) Reset() {
	var v CreateDbaasServicePgReqBackupMinusSchedule
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCreateDbaasServicePgReqBackupMinusSchedule) SetTo(v CreateDbaasServicePgReqBackupMinusSchedule) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCreateDbaasServicePgReqBackupMinusSchedule) Get() (v CreateDbaasServicePgReqBackupMinusSchedule, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptCreateDbaasServicePgReqBackupMinusSchedule) Or(d CreateDbaasServicePgReqBackupMinusSchedule) CreateDbaasServicePgReqBackupMinusSchedule {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptCreateDbaasServicePgReqMaintenance returns new OptCreateDbaasServicePgReqMaintenance with value set to v.
func NewOptCreateDbaasServicePgReqMaintenance(v CreateDbaasServicePgReqMaintenance) OptCreateDbaasServicePgReqMaintenance {
	return OptCreateDbaasServicePgReqMaintenance{
		Value: v,
		Set:   true,
	}
}

// OptCreateDbaasServicePgReqMaintenance is optional CreateDbaasServicePgReqMaintenance.
type OptCreateDbaasServicePgReqMaintenance struct {
	Value CreateDbaasServicePgReqMaintenance
	Set   bool
}

// IsSet returns true if OptCreateDbaasServicePgReqMaintenance was set.
func (o OptCreateDbaasServicePgReqMaintenance) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCreateDbaasServicePgReqMaintenance) Reset() {
	var v CreateDbaasServicePgReqMaintenance
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCreateDbaasServicePgReqMaintenance) SetTo(v CreateDbaasServicePgReqMaintenance) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCreateDbaasServicePgReqMaintenance) Get() (v CreateDbaasServicePgReqMaintenance, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptCreateDbaasServicePgReqMaintenance) Or(d CreateDbaasServicePgReqMaintenance) CreateDbaasServicePgReqMaintenance {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptCreateDbaasServicePgReqMigration returns new OptCreateDbaasServicePgReqMigration with value set to v.
func NewOptCreateDbaasServicePgReqMigration(v CreateDbaasServicePgReqMigration) OptCreateDbaasServicePgReqMigration {
	return OptCreateDbaasServicePgReqMigration{
		Value: v,
		Set:   true,
	}
}

// OptCreateDbaasServicePgReqMigration is optional CreateDbaasServicePgReqMigration.
type OptCreateDbaasServicePgReqMigration struct {
	Value CreateDbaasServicePgReqMigration
	Set   bool
}

// IsSet returns true if OptCreateDbaasServicePgReqMigration was set.
func (o OptCreateDbaasServicePgReqMigration) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCreateDbaasServicePgReqMigration) Reset() {
	var v CreateDbaasServicePgReqMigration
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCreateDbaasServicePgReqMigration) SetTo(v CreateDbaasServicePgReqMigration) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCreateDbaasServicePgReqMigration) Get() (v CreateDbaasServicePgReqMigration, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptCreateDbaasServicePgReqMigration) Or(d CreateDbaasServicePgReqMigration) CreateDbaasServicePgReqMigration {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptCreateDbaasServiceRedisReqMaintenance returns new OptCreateDbaasServiceRedisReqMaintenance with value set to v.
func NewOptCreateDbaasServiceRedisReqMaintenance(v CreateDbaasServiceRedisReqMaintenance) OptCreateDbaasServiceRedisReqMaintenance {
	return OptCreateDbaasServiceRedisReqMaintenance{
		Value: v,
		Set:   true,
	}
}

// OptCreateDbaasServiceRedisReqMaintenance is optional CreateDbaasServiceRedisReqMaintenance.
type OptCreateDbaasServiceRedisReqMaintenance struct {
	Value CreateDbaasServiceRedisReqMaintenance
	Set   bool
}

// IsSet returns true if OptCreateDbaasServiceRedisReqMaintenance was set.
func (o OptCreateDbaasServiceRedisReqMaintenance) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCreateDbaasServiceRedisReqMaintenance) Reset() {
	var v CreateDbaasServiceRedisReqMaintenance
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCreateDbaasServiceRedisReqMaintenance) SetTo(v CreateDbaasServiceRedisReqMaintenance) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCreateDbaasServiceRedisReqMaintenance) Get() (v CreateDbaasServiceRedisReqMaintenance, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptCreateDbaasServiceRedisReqMaintenance) Or(d CreateDbaasServiceRedisReqMaintenance) CreateDbaasServiceRedisReqMaintenance {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptCreateDbaasServiceRedisReqMigration returns new OptCreateDbaasServiceRedisReqMigration with value set to v.
func NewOptCreateDbaasServiceRedisReqMigration(v CreateDbaasServiceRedisReqMigration) OptCreateDbaasServiceRedisReqMigration {
	return OptCreateDbaasServiceRedisReqMigration{
		Value: v,
		Set:   true,
	}
}

// OptCreateDbaasServiceRedisReqMigration is optional CreateDbaasServiceRedisReqMigration.
type OptCreateDbaasServiceRedisReqMigration struct {
	Value CreateDbaasServiceRedisReqMigration
	Set   bool
}

// IsSet returns true if OptCreateDbaasServiceRedisReqMigration was set.
func (o OptCreateDbaasServiceRedisReqMigration) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCreateDbaasServiceRedisReqMigration) Reset() {
	var v CreateDbaasServiceRedisReqMigration
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCreateDbaasServiceRedisReqMigration) SetTo(v CreateDbaasServiceRedisReqMigration) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCreateDbaasServiceRedisReqMigration) Get() (v CreateDbaasServiceRedisReqMigration, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptCreateDbaasServiceRedisReqMigration) Or(d CreateDbaasServiceRedisReqMigration) CreateDbaasServiceRedisReqMigration {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptCreateElasticIPReqAddressfamily returns new OptCreateElasticIPReqAddressfamily with value set to v.
func NewOptCreateElasticIPReqAddressfamily(v CreateElasticIPReqAddressfamily) OptCreateElasticIPReqAddressfamily {
	return OptCreateElasticIPReqAddressfamily{
		Value: v,
		Set:   true,
	}
}

// OptCreateElasticIPReqAddressfamily is optional CreateElasticIPReqAddressfamily.
type OptCreateElasticIPReqAddressfamily struct {
	Value CreateElasticIPReqAddressfamily
	Set   bool
}

// IsSet returns true if OptCreateElasticIPReqAddressfamily was set.
func (o OptCreateElasticIPReqAddressfamily) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCreateElasticIPReqAddressfamily) Reset() {
	var v CreateElasticIPReqAddressfamily
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCreateElasticIPReqAddressfamily) SetTo(v CreateElasticIPReqAddressfamily) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCreateElasticIPReqAddressfamily) Get() (v CreateElasticIPReqAddressfamily, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptCreateElasticIPReqAddressfamily) Or(d CreateElasticIPReqAddressfamily) CreateElasticIPReqAddressfamily {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptCreateSksClusterReqCni returns new OptCreateSksClusterReqCni with value set to v.
func NewOptCreateSksClusterReqCni(v CreateSksClusterReqCni) OptCreateSksClusterReqCni {
	return OptCreateSksClusterReqCni{
		Value: v,
		Set:   true,
	}
}

// OptCreateSksClusterReqCni is optional CreateSksClusterReqCni.
type OptCreateSksClusterReqCni struct {
	Value CreateSksClusterReqCni
	Set   bool
}

// IsSet returns true if OptCreateSksClusterReqCni was set.
func (o OptCreateSksClusterReqCni) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCreateSksClusterReqCni) Reset() {
	var v CreateSksClusterReqCni
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCreateSksClusterReqCni) SetTo(v CreateSksClusterReqCni) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCreateSksClusterReqCni) Get() (v CreateSksClusterReqCni, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptCreateSksClusterReqCni) Or(d CreateSksClusterReqCni) CreateSksClusterReqCni {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptDNSDomainRecordType returns new OptDNSDomainRecordType with value set to v.
func NewOptDNSDomainRecordType(v DNSDomainRecordType) OptDNSDomainRecordType {
	return OptDNSDomainRecordType{
		Value: v,
		Set:   true,
	}
}

// OptDNSDomainRecordType is optional DNSDomainRecordType.
type OptDNSDomainRecordType struct {
	Value DNSDomainRecordType
	Set   bool
}

// IsSet returns true if OptDNSDomainRecordType was set.
func (o OptDNSDomainRecordType) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDNSDomainRecordType) Reset() {
	var v DNSDomainRecordType
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDNSDomainRecordType) SetTo(v DNSDomainRecordType) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDNSDomainRecordType) Get() (v DNSDomainRecordType, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDNSDomainRecordType) Or(d DNSDomainRecordType) DNSDomainRecordType {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptDateTime returns new OptDateTime with value set to v.
func NewOptDateTime(v time.Time) OptDateTime {
	return OptDateTime{
		Value: v,
		Set:   true,
	}
}

// OptDateTime is optional time.Time.
type OptDateTime struct {
	Value time.Time
	Set   bool
}

// IsSet returns true if OptDateTime was set.
func (o OptDateTime) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDateTime) Reset() {
	var v time.Time
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDateTime) SetTo(v time.Time) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDateTime) Get() (v time.Time, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDateTime) Or(d time.Time) time.Time {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptDbaasBackupConfig returns new OptDbaasBackupConfig with value set to v.
func NewOptDbaasBackupConfig(v DbaasBackupConfig) OptDbaasBackupConfig {
	return OptDbaasBackupConfig{
		Value: v,
		Set:   true,
	}
}

// OptDbaasBackupConfig is optional DbaasBackupConfig.
type OptDbaasBackupConfig struct {
	Value DbaasBackupConfig
	Set   bool
}

// IsSet returns true if OptDbaasBackupConfig was set.
func (o OptDbaasBackupConfig) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDbaasBackupConfig) Reset() {
	var v DbaasBackupConfig
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDbaasBackupConfig) SetTo(v DbaasBackupConfig) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDbaasBackupConfig) Get() (v DbaasBackupConfig, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDbaasBackupConfig) Or(d DbaasBackupConfig) DbaasBackupConfig {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptDbaasIntegrationTypeSettings returns new OptDbaasIntegrationTypeSettings with value set to v.
func NewOptDbaasIntegrationTypeSettings(v DbaasIntegrationTypeSettings) OptDbaasIntegrationTypeSettings {
	return OptDbaasIntegrationTypeSettings{
		Value: v,
		Set:   true,
	}
}

// OptDbaasIntegrationTypeSettings is optional DbaasIntegrationTypeSettings.
type OptDbaasIntegrationTypeSettings struct {
	Value DbaasIntegrationTypeSettings
	Set   bool
}

// IsSet returns true if OptDbaasIntegrationTypeSettings was set.
func (o OptDbaasIntegrationTypeSettings) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDbaasIntegrationTypeSettings) Reset() {
	var v DbaasIntegrationTypeSettings
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDbaasIntegrationTypeSettings) SetTo(v DbaasIntegrationTypeSettings) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDbaasIntegrationTypeSettings) Get() (v DbaasIntegrationTypeSettings, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDbaasIntegrationTypeSettings) Or(d DbaasIntegrationTypeSettings) DbaasIntegrationTypeSettings {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptDbaasKafkaACLID returns new OptDbaasKafkaACLID with value set to v.
func NewOptDbaasKafkaACLID(v DbaasKafkaACLID) OptDbaasKafkaACLID {
	return OptDbaasKafkaACLID{
		Value: v,
		Set:   true,
	}
}

// OptDbaasKafkaACLID is optional DbaasKafkaACLID.
type OptDbaasKafkaACLID struct {
	Value DbaasKafkaACLID
	Set   bool
}

// IsSet returns true if OptDbaasKafkaACLID was set.
func (o OptDbaasKafkaACLID) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDbaasKafkaACLID) Reset() {
	var v DbaasKafkaACLID
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDbaasKafkaACLID) SetTo(v DbaasKafkaACLID) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDbaasKafkaACLID) Get() (v DbaasKafkaACLID, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDbaasKafkaACLID) Or(d DbaasKafkaACLID) DbaasKafkaACLID {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptDbaasNodeStateRole returns new OptDbaasNodeStateRole with value set to v.
func NewOptDbaasNodeStateRole(v DbaasNodeStateRole) OptDbaasNodeStateRole {
	return OptDbaasNodeStateRole{
		Value: v,
		Set:   true,
	}
}

// OptDbaasNodeStateRole is optional DbaasNodeStateRole.
type OptDbaasNodeStateRole struct {
	Value DbaasNodeStateRole
	Set   bool
}

// IsSet returns true if OptDbaasNodeStateRole was set.
func (o OptDbaasNodeStateRole) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDbaasNodeStateRole) Reset() {
	var v DbaasNodeStateRole
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDbaasNodeStateRole) SetTo(v DbaasNodeStateRole) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDbaasNodeStateRole) Get() (v DbaasNodeStateRole, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDbaasNodeStateRole) Or(d DbaasNodeStateRole) DbaasNodeStateRole {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptDbaasServiceKafkaAuthenticationMinusMethods returns new OptDbaasServiceKafkaAuthenticationMinusMethods with value set to v.
func NewOptDbaasServiceKafkaAuthenticationMinusMethods(v DbaasServiceKafkaAuthenticationMinusMethods) OptDbaasServiceKafkaAuthenticationMinusMethods {
	return OptDbaasServiceKafkaAuthenticationMinusMethods{
		Value: v,
		Set:   true,
	}
}

// OptDbaasServiceKafkaAuthenticationMinusMethods is optional DbaasServiceKafkaAuthenticationMinusMethods.
type OptDbaasServiceKafkaAuthenticationMinusMethods struct {
	Value DbaasServiceKafkaAuthenticationMinusMethods
	Set   bool
}

// IsSet returns true if OptDbaasServiceKafkaAuthenticationMinusMethods was set.
func (o OptDbaasServiceKafkaAuthenticationMinusMethods) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDbaasServiceKafkaAuthenticationMinusMethods) Reset() {
	var v DbaasServiceKafkaAuthenticationMinusMethods
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDbaasServiceKafkaAuthenticationMinusMethods) SetTo(v DbaasServiceKafkaAuthenticationMinusMethods) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDbaasServiceKafkaAuthenticationMinusMethods) Get() (v DbaasServiceKafkaAuthenticationMinusMethods, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDbaasServiceKafkaAuthenticationMinusMethods) Or(d DbaasServiceKafkaAuthenticationMinusMethods) DbaasServiceKafkaAuthenticationMinusMethods {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptDbaasServiceKafkaConnectionMinusInfo returns new OptDbaasServiceKafkaConnectionMinusInfo with value set to v.
func NewOptDbaasServiceKafkaConnectionMinusInfo(v DbaasServiceKafkaConnectionMinusInfo) OptDbaasServiceKafkaConnectionMinusInfo {
	return OptDbaasServiceKafkaConnectionMinusInfo{
		Value: v,
		Set:   true,
	}
}

// OptDbaasServiceKafkaConnectionMinusInfo is optional DbaasServiceKafkaConnectionMinusInfo.
type OptDbaasServiceKafkaConnectionMinusInfo struct {
	Value DbaasServiceKafkaConnectionMinusInfo
	Set   bool
}

// IsSet returns true if OptDbaasServiceKafkaConnectionMinusInfo was set.
func (o OptDbaasServiceKafkaConnectionMinusInfo) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDbaasServiceKafkaConnectionMinusInfo) Reset() {
	var v DbaasServiceKafkaConnectionMinusInfo
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDbaasServiceKafkaConnectionMinusInfo) SetTo(v DbaasServiceKafkaConnectionMinusInfo) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDbaasServiceKafkaConnectionMinusInfo) Get() (v DbaasServiceKafkaConnectionMinusInfo, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDbaasServiceKafkaConnectionMinusInfo) Or(d DbaasServiceKafkaConnectionMinusInfo) DbaasServiceKafkaConnectionMinusInfo {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptDbaasServiceMaintenance returns new OptDbaasServiceMaintenance with value set to v.
func NewOptDbaasServiceMaintenance(v DbaasServiceMaintenance) OptDbaasServiceMaintenance {
	return OptDbaasServiceMaintenance{
		Value: v,
		Set:   true,
	}
}

// OptDbaasServiceMaintenance is optional DbaasServiceMaintenance.
type OptDbaasServiceMaintenance struct {
	Value DbaasServiceMaintenance
	Set   bool
}

// IsSet returns true if OptDbaasServiceMaintenance was set.
func (o OptDbaasServiceMaintenance) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDbaasServiceMaintenance) Reset() {
	var v DbaasServiceMaintenance
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDbaasServiceMaintenance) SetTo(v DbaasServiceMaintenance) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDbaasServiceMaintenance) Get() (v DbaasServiceMaintenance, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDbaasServiceMaintenance) Or(d DbaasServiceMaintenance) DbaasServiceMaintenance {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptDbaasServiceMysqlBackupMinusSchedule returns new OptDbaasServiceMysqlBackupMinusSchedule with value set to v.
func NewOptDbaasServiceMysqlBackupMinusSchedule(v DbaasServiceMysqlBackupMinusSchedule) OptDbaasServiceMysqlBackupMinusSchedule {
	return OptDbaasServiceMysqlBackupMinusSchedule{
		Value: v,
		Set:   true,
	}
}

// OptDbaasServiceMysqlBackupMinusSchedule is optional DbaasServiceMysqlBackupMinusSchedule.
type OptDbaasServiceMysqlBackupMinusSchedule struct {
	Value DbaasServiceMysqlBackupMinusSchedule
	Set   bool
}

// IsSet returns true if OptDbaasServiceMysqlBackupMinusSchedule was set.
func (o OptDbaasServiceMysqlBackupMinusSchedule) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDbaasServiceMysqlBackupMinusSchedule) Reset() {
	var v DbaasServiceMysqlBackupMinusSchedule
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDbaasServiceMysqlBackupMinusSchedule) SetTo(v DbaasServiceMysqlBackupMinusSchedule) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDbaasServiceMysqlBackupMinusSchedule) Get() (v DbaasServiceMysqlBackupMinusSchedule, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDbaasServiceMysqlBackupMinusSchedule) Or(d DbaasServiceMysqlBackupMinusSchedule) DbaasServiceMysqlBackupMinusSchedule {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptDbaasServiceMysqlConnectionMinusInfo returns new OptDbaasServiceMysqlConnectionMinusInfo with value set to v.
func NewOptDbaasServiceMysqlConnectionMinusInfo(v DbaasServiceMysqlConnectionMinusInfo) OptDbaasServiceMysqlConnectionMinusInfo {
	return OptDbaasServiceMysqlConnectionMinusInfo{
		Value: v,
		Set:   true,
	}
}

// OptDbaasServiceMysqlConnectionMinusInfo is optional DbaasServiceMysqlConnectionMinusInfo.
type OptDbaasServiceMysqlConnectionMinusInfo struct {
	Value DbaasServiceMysqlConnectionMinusInfo
	Set   bool
}

// IsSet returns true if OptDbaasServiceMysqlConnectionMinusInfo was set.
func (o OptDbaasServiceMysqlConnectionMinusInfo) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDbaasServiceMysqlConnectionMinusInfo) Reset() {
	var v DbaasServiceMysqlConnectionMinusInfo
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDbaasServiceMysqlConnectionMinusInfo) SetTo(v DbaasServiceMysqlConnectionMinusInfo) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDbaasServiceMysqlConnectionMinusInfo) Get() (v DbaasServiceMysqlConnectionMinusInfo, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDbaasServiceMysqlConnectionMinusInfo) Or(d DbaasServiceMysqlConnectionMinusInfo) DbaasServiceMysqlConnectionMinusInfo {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptDbaasServiceName returns new OptDbaasServiceName with value set to v.
func NewOptDbaasServiceName(v DbaasServiceName) OptDbaasServiceName {
	return OptDbaasServiceName{
		Value: v,
		Set:   true,
	}
}

// OptDbaasServiceName is optional DbaasServiceName.
type OptDbaasServiceName struct {
	Value DbaasServiceName
	Set   bool
}

// IsSet returns true if OptDbaasServiceName was set.
func (o OptDbaasServiceName) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDbaasServiceName) Reset() {
	var v DbaasServiceName
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDbaasServiceName) SetTo(v DbaasServiceName) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDbaasServiceName) Get() (v DbaasServiceName, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDbaasServiceName) Or(d DbaasServiceName) DbaasServiceName {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptDbaasServiceOpensearchConnectionMinusInfo returns new OptDbaasServiceOpensearchConnectionMinusInfo with value set to v.
func NewOptDbaasServiceOpensearchConnectionMinusInfo(v DbaasServiceOpensearchConnectionMinusInfo) OptDbaasServiceOpensearchConnectionMinusInfo {
	return OptDbaasServiceOpensearchConnectionMinusInfo{
		Value: v,
		Set:   true,
	}
}

// OptDbaasServiceOpensearchConnectionMinusInfo is optional DbaasServiceOpensearchConnectionMinusInfo.
type OptDbaasServiceOpensearchConnectionMinusInfo struct {
	Value DbaasServiceOpensearchConnectionMinusInfo
	Set   bool
}

// IsSet returns true if OptDbaasServiceOpensearchConnectionMinusInfo was set.
func (o OptDbaasServiceOpensearchConnectionMinusInfo) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDbaasServiceOpensearchConnectionMinusInfo) Reset() {
	var v DbaasServiceOpensearchConnectionMinusInfo
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDbaasServiceOpensearchConnectionMinusInfo) SetTo(v DbaasServiceOpensearchConnectionMinusInfo) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDbaasServiceOpensearchConnectionMinusInfo) Get() (v DbaasServiceOpensearchConnectionMinusInfo, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDbaasServiceOpensearchConnectionMinusInfo) Or(d DbaasServiceOpensearchConnectionMinusInfo) DbaasServiceOpensearchConnectionMinusInfo {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptDbaasServiceOpensearchIndexMinusPatternsItemSortingMinusAlgorithm returns new OptDbaasServiceOpensearchIndexMinusPatternsItemSortingMinusAlgorithm with value set to v.
func NewOptDbaasServiceOpensearchIndexMinusPatternsItemSortingMinusAlgorithm(v DbaasServiceOpensearchIndexMinusPatternsItemSortingMinusAlgorithm) OptDbaasServiceOpensearchIndexMinusPatternsItemSortingMinusAlgorithm {
	return OptDbaasServiceOpensearchIndexMinusPatternsItemSortingMinusAlgorithm{
		Value: v,
		Set:   true,
	}
}

// OptDbaasServiceOpensearchIndexMinusPatternsItemSortingMinusAlgorithm is optional DbaasServiceOpensearchIndexMinusPatternsItemSortingMinusAlgorithm.
type OptDbaasServiceOpensearchIndexMinusPatternsItemSortingMinusAlgorithm struct {
	Value DbaasServiceOpensearchIndexMinusPatternsItemSortingMinusAlgorithm
	Set   bool
}

// IsSet returns true if OptDbaasServiceOpensearchIndexMinusPatternsItemSortingMinusAlgorithm was set.
func (o OptDbaasServiceOpensearchIndexMinusPatternsItemSortingMinusAlgorithm) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptDbaasServiceOpensearchIndexMinusPatternsItemSortingMinusAlgorithm) Reset() {
	var v DbaasServiceOpensearchIndexMinusPatternsItemSortingMinusAlgorithm
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDbaasServiceOpensearchIndexMinusPatternsItemSortingMinusAlgorithm) SetTo(v DbaasServiceOpensearchIndexMinusPatternsItemSortingMinusAlgorithm) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDbaasServiceOpensearchIndexMinusPatternsItemSortingMinusAlgorithm) Get() (v DbaasServiceOpensearchIndexMinusPatternsItemSortingMinusAlgorithm, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDbaasServiceOpensearchIndexMinusPatternsItemSortingMinusAlgorithm) Or(d DbaasServiceOpensearchIndexMinusPatternsItemSortingMinusAlgorithm) DbaasServiceOpensearchIndexMinusPatternsItemSortingMinusAlgorithm {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptDbaasServiceOpensearchIndexMinusTemplate returns new OptDbaasServiceOpensearchIndexMinusTemplate with value set to v.
func NewOptDbaasServiceOpensearchIndexMinusTemplate(v DbaasServiceOpensearchIndexMinusTemplate) OptDbaasServiceOpensearchIndexMinusTemplate {
	return OptDbaasServiceOpensearchIndexMinusTemplate{
		Value: v,
		Set:   true,
	}
}

// OptDbaasServiceOpensearchIndexMinusTemplate is optional DbaasServiceOpensearchIndexMinusTemplate.
type OptDbaasServiceOpensearchIndexMinusTemplate struct {
	Value DbaasServiceOpensearchIndexMinusTemplate
	Set   bool
}

// IsSet returns true if OptDbaasServiceOpensearchIndexMinusTemplate was set.
func (o OptDbaasServiceOpensearchIndexMinusTemplate) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDbaasServiceOpensearchIndexMinusTemplate) Reset() {
	var v DbaasServiceOpensearchIndexMinusTemplate
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDbaasServiceOpensearchIndexMinusTemplate) SetTo(v DbaasServiceOpensearchIndexMinusTemplate) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDbaasServiceOpensearchIndexMinusTemplate) Get() (v DbaasServiceOpensearchIndexMinusTemplate, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDbaasServiceOpensearchIndexMinusTemplate) Or(d DbaasServiceOpensearchIndexMinusTemplate) DbaasServiceOpensearchIndexMinusTemplate {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptDbaasServiceOpensearchOpensearchMinusDashboards returns new OptDbaasServiceOpensearchOpensearchMinusDashboards with value set to v.
func NewOptDbaasServiceOpensearchOpensearchMinusDashboards(v DbaasServiceOpensearchOpensearchMinusDashboards) OptDbaasServiceOpensearchOpensearchMinusDashboards {
	return OptDbaasServiceOpensearchOpensearchMinusDashboards{
		Value: v,
		Set:   true,
	}
}

// OptDbaasServiceOpensearchOpensearchMinusDashboards is optional DbaasServiceOpensearchOpensearchMinusDashboards.
type OptDbaasServiceOpensearchOpensearchMinusDashboards struct {
	Value DbaasServiceOpensearchOpensearchMinusDashboards
	Set   bool
}

// IsSet returns true if OptDbaasServiceOpensearchOpensearchMinusDashboards was set.
func (o OptDbaasServiceOpensearchOpensearchMinusDashboards) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDbaasServiceOpensearchOpensearchMinusDashboards) Reset() {
	var v DbaasServiceOpensearchOpensearchMinusDashboards
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDbaasServiceOpensearchOpensearchMinusDashboards) SetTo(v DbaasServiceOpensearchOpensearchMinusDashboards) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDbaasServiceOpensearchOpensearchMinusDashboards) Get() (v DbaasServiceOpensearchOpensearchMinusDashboards, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDbaasServiceOpensearchOpensearchMinusDashboards) Or(d DbaasServiceOpensearchOpensearchMinusDashboards) DbaasServiceOpensearchOpensearchMinusDashboards {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptDbaasServicePgBackupMinusSchedule returns new OptDbaasServicePgBackupMinusSchedule with value set to v.
func NewOptDbaasServicePgBackupMinusSchedule(v DbaasServicePgBackupMinusSchedule) OptDbaasServicePgBackupMinusSchedule {
	return OptDbaasServicePgBackupMinusSchedule{
		Value: v,
		Set:   true,
	}
}

// OptDbaasServicePgBackupMinusSchedule is optional DbaasServicePgBackupMinusSchedule.
type OptDbaasServicePgBackupMinusSchedule struct {
	Value DbaasServicePgBackupMinusSchedule
	Set   bool
}

// IsSet returns true if OptDbaasServicePgBackupMinusSchedule was set.
func (o OptDbaasServicePgBackupMinusSchedule) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDbaasServicePgBackupMinusSchedule) Reset() {
	var v DbaasServicePgBackupMinusSchedule
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDbaasServicePgBackupMinusSchedule) SetTo(v DbaasServicePgBackupMinusSchedule) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDbaasServicePgBackupMinusSchedule) Get() (v DbaasServicePgBackupMinusSchedule, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDbaasServicePgBackupMinusSchedule) Or(d DbaasServicePgBackupMinusSchedule) DbaasServicePgBackupMinusSchedule {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptDbaasServicePgConnectionMinusInfo returns new OptDbaasServicePgConnectionMinusInfo with value set to v.
func NewOptDbaasServicePgConnectionMinusInfo(v DbaasServicePgConnectionMinusInfo) OptDbaasServicePgConnectionMinusInfo {
	return OptDbaasServicePgConnectionMinusInfo{
		Value: v,
		Set:   true,
	}
}

// OptDbaasServicePgConnectionMinusInfo is optional DbaasServicePgConnectionMinusInfo.
type OptDbaasServicePgConnectionMinusInfo struct {
	Value DbaasServicePgConnectionMinusInfo
	Set   bool
}

// IsSet returns true if OptDbaasServicePgConnectionMinusInfo was set.
func (o OptDbaasServicePgConnectionMinusInfo) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDbaasServicePgConnectionMinusInfo) Reset() {
	var v DbaasServicePgConnectionMinusInfo
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDbaasServicePgConnectionMinusInfo) SetTo(v DbaasServicePgConnectionMinusInfo) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDbaasServicePgConnectionMinusInfo) Get() (v DbaasServicePgConnectionMinusInfo, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDbaasServicePgConnectionMinusInfo) Or(d DbaasServicePgConnectionMinusInfo) DbaasServicePgConnectionMinusInfo {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptDbaasServiceRedisConnectionMinusInfo returns new OptDbaasServiceRedisConnectionMinusInfo with value set to v.
func NewOptDbaasServiceRedisConnectionMinusInfo(v DbaasServiceRedisConnectionMinusInfo) OptDbaasServiceRedisConnectionMinusInfo {
	return OptDbaasServiceRedisConnectionMinusInfo{
		Value: v,
		Set:   true,
	}
}

// OptDbaasServiceRedisConnectionMinusInfo is optional DbaasServiceRedisConnectionMinusInfo.
type OptDbaasServiceRedisConnectionMinusInfo struct {
	Value DbaasServiceRedisConnectionMinusInfo
	Set   bool
}

// IsSet returns true if OptDbaasServiceRedisConnectionMinusInfo was set.
func (o OptDbaasServiceRedisConnectionMinusInfo) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDbaasServiceRedisConnectionMinusInfo) Reset() {
	var v DbaasServiceRedisConnectionMinusInfo
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDbaasServiceRedisConnectionMinusInfo) SetTo(v DbaasServiceRedisConnectionMinusInfo) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDbaasServiceRedisConnectionMinusInfo) Get() (v DbaasServiceRedisConnectionMinusInfo, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDbaasServiceRedisConnectionMinusInfo) Or(d DbaasServiceRedisConnectionMinusInfo) DbaasServiceRedisConnectionMinusInfo {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptDbaasServiceRedisUsersItemAccessMinusControl returns new OptDbaasServiceRedisUsersItemAccessMinusControl with value set to v.
func NewOptDbaasServiceRedisUsersItemAccessMinusControl(v DbaasServiceRedisUsersItemAccessMinusControl) OptDbaasServiceRedisUsersItemAccessMinusControl {
	return OptDbaasServiceRedisUsersItemAccessMinusControl{
		Value: v,
		Set:   true,
	}
}

// OptDbaasServiceRedisUsersItemAccessMinusControl is optional DbaasServiceRedisUsersItemAccessMinusControl.
type OptDbaasServiceRedisUsersItemAccessMinusControl struct {
	Value DbaasServiceRedisUsersItemAccessMinusControl
	Set   bool
}

// IsSet returns true if OptDbaasServiceRedisUsersItemAccessMinusControl was set.
func (o OptDbaasServiceRedisUsersItemAccessMinusControl) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDbaasServiceRedisUsersItemAccessMinusControl) Reset() {
	var v DbaasServiceRedisUsersItemAccessMinusControl
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDbaasServiceRedisUsersItemAccessMinusControl) SetTo(v DbaasServiceRedisUsersItemAccessMinusControl) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDbaasServiceRedisUsersItemAccessMinusControl) Get() (v DbaasServiceRedisUsersItemAccessMinusControl, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDbaasServiceRedisUsersItemAccessMinusControl) Or(d DbaasServiceRedisUsersItemAccessMinusControl) DbaasServiceRedisUsersItemAccessMinusControl {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptDbaasServiceTypeName returns new OptDbaasServiceTypeName with value set to v.
func NewOptDbaasServiceTypeName(v DbaasServiceTypeName) OptDbaasServiceTypeName {
	return OptDbaasServiceTypeName{
		Value: v,
		Set:   true,
	}
}

// OptDbaasServiceTypeName is optional DbaasServiceTypeName.
type OptDbaasServiceTypeName struct {
	Value DbaasServiceTypeName
	Set   bool
}

// IsSet returns true if OptDbaasServiceTypeName was set.
func (o OptDbaasServiceTypeName) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDbaasServiceTypeName) Reset() {
	var v DbaasServiceTypeName
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDbaasServiceTypeName) SetTo(v DbaasServiceTypeName) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDbaasServiceTypeName) Get() (v DbaasServiceTypeName, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDbaasServiceTypeName) Or(d DbaasServiceTypeName) DbaasServiceTypeName {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptDbaasUserPassword returns new OptDbaasUserPassword with value set to v.
func NewOptDbaasUserPassword(v DbaasUserPassword) OptDbaasUserPassword {
	return OptDbaasUserPassword{
		Value: v,
		Set:   true,
	}
}

// OptDbaasUserPassword is optional DbaasUserPassword.
type OptDbaasUserPassword struct {
	Value DbaasUserPassword
	Set   bool
}

// IsSet returns true if OptDbaasUserPassword was set.
func (o OptDbaasUserPassword) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDbaasUserPassword) Reset() {
	var v DbaasUserPassword
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDbaasUserPassword) SetTo(v DbaasUserPassword) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDbaasUserPassword) Get() (v DbaasUserPassword, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDbaasUserPassword) Or(d DbaasUserPassword) DbaasUserPassword {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptDeployTargetType returns new OptDeployTargetType with value set to v.
func NewOptDeployTargetType(v DeployTargetType) OptDeployTargetType {
	return OptDeployTargetType{
		Value: v,
		Set:   true,
	}
}

// OptDeployTargetType is optional DeployTargetType.
type OptDeployTargetType struct {
	Value DeployTargetType
	Set   bool
}

// IsSet returns true if OptDeployTargetType was set.
func (o OptDeployTargetType) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDeployTargetType) Reset() {
	var v DeployTargetType
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDeployTargetType) SetTo(v DeployTargetType) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDeployTargetType) Get() (v DeployTargetType, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDeployTargetType) Or(d DeployTargetType) DeployTargetType {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptDomainName returns new OptDomainName with value set to v.
func NewOptDomainName(v DomainName) OptDomainName {
	return OptDomainName{
		Value: v,
		Set:   true,
	}
}

// OptDomainName is optional DomainName.
type OptDomainName struct {
	Value DomainName
	Set   bool
}

// IsSet returns true if OptDomainName was set.
func (o OptDomainName) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDomainName) Reset() {
	var v DomainName
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDomainName) SetTo(v DomainName) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDomainName) Get() (v DomainName, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDomainName) Or(d DomainName) DomainName {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptElasticIPAddressfamily returns new OptElasticIPAddressfamily with value set to v.
func NewOptElasticIPAddressfamily(v ElasticIPAddressfamily) OptElasticIPAddressfamily {
	return OptElasticIPAddressfamily{
		Value: v,
		Set:   true,
	}
}

// OptElasticIPAddressfamily is optional ElasticIPAddressfamily.
type OptElasticIPAddressfamily struct {
	Value ElasticIPAddressfamily
	Set   bool
}

// IsSet returns true if OptElasticIPAddressfamily was set.
func (o OptElasticIPAddressfamily) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptElasticIPAddressfamily) Reset() {
	var v ElasticIPAddressfamily
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptElasticIPAddressfamily) SetTo(v ElasticIPAddressfamily) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptElasticIPAddressfamily) Get() (v ElasticIPAddressfamily, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptElasticIPAddressfamily) Or(d ElasticIPAddressfamily) ElasticIPAddressfamily {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptElasticIPHealthcheck returns new OptElasticIPHealthcheck with value set to v.
func NewOptElasticIPHealthcheck(v ElasticIPHealthcheck) OptElasticIPHealthcheck {
	return OptElasticIPHealthcheck{
		Value: v,
		Set:   true,
	}
}

// OptElasticIPHealthcheck is optional ElasticIPHealthcheck.
type OptElasticIPHealthcheck struct {
	Value ElasticIPHealthcheck
	Set   bool
}

// IsSet returns true if OptElasticIPHealthcheck was set.
func (o OptElasticIPHealthcheck) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptElasticIPHealthcheck) Reset() {
	var v ElasticIPHealthcheck
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptElasticIPHealthcheck) SetTo(v ElasticIPHealthcheck) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptElasticIPHealthcheck) Get() (v ElasticIPHealthcheck, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptElasticIPHealthcheck) Or(d ElasticIPHealthcheck) ElasticIPHealthcheck {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptEnumKafkaAuthMethod returns new OptEnumKafkaAuthMethod with value set to v.
func NewOptEnumKafkaAuthMethod(v EnumKafkaAuthMethod) OptEnumKafkaAuthMethod {
	return OptEnumKafkaAuthMethod{
		Value: v,
		Set:   true,
	}
}

// OptEnumKafkaAuthMethod is optional EnumKafkaAuthMethod.
type OptEnumKafkaAuthMethod struct {
	Value EnumKafkaAuthMethod
	Set   bool
}

// IsSet returns true if OptEnumKafkaAuthMethod was set.
func (o OptEnumKafkaAuthMethod) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptEnumKafkaAuthMethod) Reset() {
	var v EnumKafkaAuthMethod
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptEnumKafkaAuthMethod) SetTo(v EnumKafkaAuthMethod) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptEnumKafkaAuthMethod) Get() (v EnumKafkaAuthMethod, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptEnumKafkaAuthMethod) Or(d EnumKafkaAuthMethod) EnumKafkaAuthMethod {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptEnumMasterLinkStatus returns new OptEnumMasterLinkStatus with value set to v.
func NewOptEnumMasterLinkStatus(v EnumMasterLinkStatus) OptEnumMasterLinkStatus {
	return OptEnumMasterLinkStatus{
		Value: v,
		Set:   true,
	}
}

// OptEnumMasterLinkStatus is optional EnumMasterLinkStatus.
type OptEnumMasterLinkStatus struct {
	Value EnumMasterLinkStatus
	Set   bool
}

// IsSet returns true if OptEnumMasterLinkStatus was set.
func (o OptEnumMasterLinkStatus) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptEnumMasterLinkStatus) Reset() {
	var v EnumMasterLinkStatus
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptEnumMasterLinkStatus) SetTo(v EnumMasterLinkStatus) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptEnumMasterLinkStatus) Get() (v EnumMasterLinkStatus, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptEnumMasterLinkStatus) Or(d EnumMasterLinkStatus) EnumMasterLinkStatus {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptEnumMigrationMethod returns new OptEnumMigrationMethod with value set to v.
func NewOptEnumMigrationMethod(v EnumMigrationMethod) OptEnumMigrationMethod {
	return OptEnumMigrationMethod{
		Value: v,
		Set:   true,
	}
}

// OptEnumMigrationMethod is optional EnumMigrationMethod.
type OptEnumMigrationMethod struct {
	Value EnumMigrationMethod
	Set   bool
}

// IsSet returns true if OptEnumMigrationMethod was set.
func (o OptEnumMigrationMethod) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptEnumMigrationMethod) Reset() {
	var v EnumMigrationMethod
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptEnumMigrationMethod) SetTo(v EnumMigrationMethod) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptEnumMigrationMethod) Get() (v EnumMigrationMethod, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptEnumMigrationMethod) Or(d EnumMigrationMethod) EnumMigrationMethod {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptEnumMigrationStatus returns new OptEnumMigrationStatus with value set to v.
func NewOptEnumMigrationStatus(v EnumMigrationStatus) OptEnumMigrationStatus {
	return OptEnumMigrationStatus{
		Value: v,
		Set:   true,
	}
}

// OptEnumMigrationStatus is optional EnumMigrationStatus.
type OptEnumMigrationStatus struct {
	Value EnumMigrationStatus
	Set   bool
}

// IsSet returns true if OptEnumMigrationStatus was set.
func (o OptEnumMigrationStatus) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptEnumMigrationStatus) Reset() {
	var v EnumMigrationStatus
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptEnumMigrationStatus) SetTo(v EnumMigrationStatus) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptEnumMigrationStatus) Get() (v EnumMigrationStatus, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptEnumMigrationStatus) Or(d EnumMigrationStatus) EnumMigrationStatus {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptEnumPgSynchronousReplication returns new OptEnumPgSynchronousReplication with value set to v.
func NewOptEnumPgSynchronousReplication(v EnumPgSynchronousReplication) OptEnumPgSynchronousReplication {
	return OptEnumPgSynchronousReplication{
		Value: v,
		Set:   true,
	}
}

// OptEnumPgSynchronousReplication is optional EnumPgSynchronousReplication.
type OptEnumPgSynchronousReplication struct {
	Value EnumPgSynchronousReplication
	Set   bool
}

// IsSet returns true if OptEnumPgSynchronousReplication was set.
func (o OptEnumPgSynchronousReplication) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptEnumPgSynchronousReplication) Reset() {
	var v EnumPgSynchronousReplication
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptEnumPgSynchronousReplication) SetTo(v EnumPgSynchronousReplication) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptEnumPgSynchronousReplication) Get() (v EnumPgSynchronousReplication, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptEnumPgSynchronousReplication) Or(d EnumPgSynchronousReplication) EnumPgSynchronousReplication {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptEnumPgVariant returns new OptEnumPgVariant with value set to v.
func NewOptEnumPgVariant(v EnumPgVariant) OptEnumPgVariant {
	return OptEnumPgVariant{
		Value: v,
		Set:   true,
	}
}

// OptEnumPgVariant is optional EnumPgVariant.
type OptEnumPgVariant struct {
	Value EnumPgVariant
	Set   bool
}

// IsSet returns true if OptEnumPgVariant was set.
func (o OptEnumPgVariant) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptEnumPgVariant) Reset() {
	var v EnumPgVariant
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptEnumPgVariant) SetTo(v EnumPgVariant) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptEnumPgVariant) Get() (v EnumPgVariant, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptEnumPgVariant) Or(d EnumPgVariant) EnumPgVariant {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptEnumServiceState returns new OptEnumServiceState with value set to v.
func NewOptEnumServiceState(v EnumServiceState) OptEnumServiceState {
	return OptEnumServiceState{
		Value: v,
		Set:   true,
	}
}

// OptEnumServiceState is optional EnumServiceState.
type OptEnumServiceState struct {
	Value EnumServiceState
	Set   bool
}

// IsSet returns true if OptEnumServiceState was set.
func (o OptEnumServiceState) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptEnumServiceState) Reset() {
	var v EnumServiceState
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptEnumServiceState) SetTo(v EnumServiceState) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptEnumServiceState) Get() (v EnumServiceState, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptEnumServiceState) Or(d EnumServiceState) EnumServiceState {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptEnumSortOrder returns new OptEnumSortOrder with value set to v.
func NewOptEnumSortOrder(v EnumSortOrder) OptEnumSortOrder {
	return OptEnumSortOrder{
		Value: v,
		Set:   true,
	}
}

// OptEnumSortOrder is optional EnumSortOrder.
type OptEnumSortOrder struct {
	Value EnumSortOrder
	Set   bool
}

// IsSet returns true if OptEnumSortOrder was set.
func (o OptEnumSortOrder) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptEnumSortOrder) Reset() {
	var v EnumSortOrder
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptEnumSortOrder) SetTo(v EnumSortOrder) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptEnumSortOrder) Get() (v EnumSortOrder, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptEnumSortOrder) Or(d EnumSortOrder) EnumSortOrder {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetDbaasServiceMetricsReqPeriod returns new OptGetDbaasServiceMetricsReqPeriod with value set to v.
func NewOptGetDbaasServiceMetricsReqPeriod(v GetDbaasServiceMetricsReqPeriod) OptGetDbaasServiceMetricsReqPeriod {
	return OptGetDbaasServiceMetricsReqPeriod{
		Value: v,
		Set:   true,
	}
}

// OptGetDbaasServiceMetricsReqPeriod is optional GetDbaasServiceMetricsReqPeriod.
type OptGetDbaasServiceMetricsReqPeriod struct {
	Value GetDbaasServiceMetricsReqPeriod
	Set   bool
}

// IsSet returns true if OptGetDbaasServiceMetricsReqPeriod was set.
func (o OptGetDbaasServiceMetricsReqPeriod) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetDbaasServiceMetricsReqPeriod) Reset() {
	var v GetDbaasServiceMetricsReqPeriod
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetDbaasServiceMetricsReqPeriod) SetTo(v GetDbaasServiceMetricsReqPeriod) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetDbaasServiceMetricsReqPeriod) Get() (v GetDbaasServiceMetricsReqPeriod, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetDbaasServiceMetricsReqPeriod) Or(d GetDbaasServiceMetricsReqPeriod) GetDbaasServiceMetricsReqPeriod {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetDbaasSettingsKafkaOKSettings returns new OptGetDbaasSettingsKafkaOKSettings with value set to v.
func NewOptGetDbaasSettingsKafkaOKSettings(v GetDbaasSettingsKafkaOKSettings) OptGetDbaasSettingsKafkaOKSettings {
	return OptGetDbaasSettingsKafkaOKSettings{
		Value: v,
		Set:   true,
	}
}

// OptGetDbaasSettingsKafkaOKSettings is optional GetDbaasSettingsKafkaOKSettings.
type OptGetDbaasSettingsKafkaOKSettings struct {
	Value GetDbaasSettingsKafkaOKSettings
	Set   bool
}

// IsSet returns true if OptGetDbaasSettingsKafkaOKSettings was set.
func (o OptGetDbaasSettingsKafkaOKSettings) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetDbaasSettingsKafkaOKSettings) Reset() {
	var v GetDbaasSettingsKafkaOKSettings
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetDbaasSettingsKafkaOKSettings) SetTo(v GetDbaasSettingsKafkaOKSettings) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetDbaasSettingsKafkaOKSettings) Get() (v GetDbaasSettingsKafkaOKSettings, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetDbaasSettingsKafkaOKSettings) Or(d GetDbaasSettingsKafkaOKSettings) GetDbaasSettingsKafkaOKSettings {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetDbaasSettingsKafkaOKSettingsKafka returns new OptGetDbaasSettingsKafkaOKSettingsKafka with value set to v.
func NewOptGetDbaasSettingsKafkaOKSettingsKafka(v GetDbaasSettingsKafkaOKSettingsKafka) OptGetDbaasSettingsKafkaOKSettingsKafka {
	return OptGetDbaasSettingsKafkaOKSettingsKafka{
		Value: v,
		Set:   true,
	}
}

// OptGetDbaasSettingsKafkaOKSettingsKafka is optional GetDbaasSettingsKafkaOKSettingsKafka.
type OptGetDbaasSettingsKafkaOKSettingsKafka struct {
	Value GetDbaasSettingsKafkaOKSettingsKafka
	Set   bool
}

// IsSet returns true if OptGetDbaasSettingsKafkaOKSettingsKafka was set.
func (o OptGetDbaasSettingsKafkaOKSettingsKafka) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetDbaasSettingsKafkaOKSettingsKafka) Reset() {
	var v GetDbaasSettingsKafkaOKSettingsKafka
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetDbaasSettingsKafkaOKSettingsKafka) SetTo(v GetDbaasSettingsKafkaOKSettingsKafka) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetDbaasSettingsKafkaOKSettingsKafka) Get() (v GetDbaasSettingsKafkaOKSettingsKafka, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetDbaasSettingsKafkaOKSettingsKafka) Or(d GetDbaasSettingsKafkaOKSettingsKafka) GetDbaasSettingsKafkaOKSettingsKafka {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetDbaasSettingsKafkaOKSettingsKafkaMinusConnect returns new OptGetDbaasSettingsKafkaOKSettingsKafkaMinusConnect with value set to v.
func NewOptGetDbaasSettingsKafkaOKSettingsKafkaMinusConnect(v GetDbaasSettingsKafkaOKSettingsKafkaMinusConnect) OptGetDbaasSettingsKafkaOKSettingsKafkaMinusConnect {
	return OptGetDbaasSettingsKafkaOKSettingsKafkaMinusConnect{
		Value: v,
		Set:   true,
	}
}

// OptGetDbaasSettingsKafkaOKSettingsKafkaMinusConnect is optional GetDbaasSettingsKafkaOKSettingsKafkaMinusConnect.
type OptGetDbaasSettingsKafkaOKSettingsKafkaMinusConnect struct {
	Value GetDbaasSettingsKafkaOKSettingsKafkaMinusConnect
	Set   bool
}

// IsSet returns true if OptGetDbaasSettingsKafkaOKSettingsKafkaMinusConnect was set.
func (o OptGetDbaasSettingsKafkaOKSettingsKafkaMinusConnect) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetDbaasSettingsKafkaOKSettingsKafkaMinusConnect) Reset() {
	var v GetDbaasSettingsKafkaOKSettingsKafkaMinusConnect
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetDbaasSettingsKafkaOKSettingsKafkaMinusConnect) SetTo(v GetDbaasSettingsKafkaOKSettingsKafkaMinusConnect) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetDbaasSettingsKafkaOKSettingsKafkaMinusConnect) Get() (v GetDbaasSettingsKafkaOKSettingsKafkaMinusConnect, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetDbaasSettingsKafkaOKSettingsKafkaMinusConnect) Or(d GetDbaasSettingsKafkaOKSettingsKafkaMinusConnect) GetDbaasSettingsKafkaOKSettingsKafkaMinusConnect {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetDbaasSettingsKafkaOKSettingsKafkaMinusRest returns new OptGetDbaasSettingsKafkaOKSettingsKafkaMinusRest with value set to v.
func NewOptGetDbaasSettingsKafkaOKSettingsKafkaMinusRest(v GetDbaasSettingsKafkaOKSettingsKafkaMinusRest) OptGetDbaasSettingsKafkaOKSettingsKafkaMinusRest {
	return OptGetDbaasSettingsKafkaOKSettingsKafkaMinusRest{
		Value: v,
		Set:   true,
	}
}

// OptGetDbaasSettingsKafkaOKSettingsKafkaMinusRest is optional GetDbaasSettingsKafkaOKSettingsKafkaMinusRest.
type OptGetDbaasSettingsKafkaOKSettingsKafkaMinusRest struct {
	Value GetDbaasSettingsKafkaOKSettingsKafkaMinusRest
	Set   bool
}

// IsSet returns true if OptGetDbaasSettingsKafkaOKSettingsKafkaMinusRest was set.
func (o OptGetDbaasSettingsKafkaOKSettingsKafkaMinusRest) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetDbaasSettingsKafkaOKSettingsKafkaMinusRest) Reset() {
	var v GetDbaasSettingsKafkaOKSettingsKafkaMinusRest
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetDbaasSettingsKafkaOKSettingsKafkaMinusRest) SetTo(v GetDbaasSettingsKafkaOKSettingsKafkaMinusRest) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetDbaasSettingsKafkaOKSettingsKafkaMinusRest) Get() (v GetDbaasSettingsKafkaOKSettingsKafkaMinusRest, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetDbaasSettingsKafkaOKSettingsKafkaMinusRest) Or(d GetDbaasSettingsKafkaOKSettingsKafkaMinusRest) GetDbaasSettingsKafkaOKSettingsKafkaMinusRest {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetDbaasSettingsKafkaOKSettingsSchemaMinusRegistry returns new OptGetDbaasSettingsKafkaOKSettingsSchemaMinusRegistry with value set to v.
func NewOptGetDbaasSettingsKafkaOKSettingsSchemaMinusRegistry(v GetDbaasSettingsKafkaOKSettingsSchemaMinusRegistry) OptGetDbaasSettingsKafkaOKSettingsSchemaMinusRegistry {
	return OptGetDbaasSettingsKafkaOKSettingsSchemaMinusRegistry{
		Value: v,
		Set:   true,
	}
}

// OptGetDbaasSettingsKafkaOKSettingsSchemaMinusRegistry is optional GetDbaasSettingsKafkaOKSettingsSchemaMinusRegistry.
type OptGetDbaasSettingsKafkaOKSettingsSchemaMinusRegistry struct {
	Value GetDbaasSettingsKafkaOKSettingsSchemaMinusRegistry
	Set   bool
}

// IsSet returns true if OptGetDbaasSettingsKafkaOKSettingsSchemaMinusRegistry was set.
func (o OptGetDbaasSettingsKafkaOKSettingsSchemaMinusRegistry) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetDbaasSettingsKafkaOKSettingsSchemaMinusRegistry) Reset() {
	var v GetDbaasSettingsKafkaOKSettingsSchemaMinusRegistry
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetDbaasSettingsKafkaOKSettingsSchemaMinusRegistry) SetTo(v GetDbaasSettingsKafkaOKSettingsSchemaMinusRegistry) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetDbaasSettingsKafkaOKSettingsSchemaMinusRegistry) Get() (v GetDbaasSettingsKafkaOKSettingsSchemaMinusRegistry, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetDbaasSettingsKafkaOKSettingsSchemaMinusRegistry) Or(d GetDbaasSettingsKafkaOKSettingsSchemaMinusRegistry) GetDbaasSettingsKafkaOKSettingsSchemaMinusRegistry {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetDbaasSettingsMysqlOKSettings returns new OptGetDbaasSettingsMysqlOKSettings with value set to v.
func NewOptGetDbaasSettingsMysqlOKSettings(v GetDbaasSettingsMysqlOKSettings) OptGetDbaasSettingsMysqlOKSettings {
	return OptGetDbaasSettingsMysqlOKSettings{
		Value: v,
		Set:   true,
	}
}

// OptGetDbaasSettingsMysqlOKSettings is optional GetDbaasSettingsMysqlOKSettings.
type OptGetDbaasSettingsMysqlOKSettings struct {
	Value GetDbaasSettingsMysqlOKSettings
	Set   bool
}

// IsSet returns true if OptGetDbaasSettingsMysqlOKSettings was set.
func (o OptGetDbaasSettingsMysqlOKSettings) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetDbaasSettingsMysqlOKSettings) Reset() {
	var v GetDbaasSettingsMysqlOKSettings
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetDbaasSettingsMysqlOKSettings) SetTo(v GetDbaasSettingsMysqlOKSettings) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetDbaasSettingsMysqlOKSettings) Get() (v GetDbaasSettingsMysqlOKSettings, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetDbaasSettingsMysqlOKSettings) Or(d GetDbaasSettingsMysqlOKSettings) GetDbaasSettingsMysqlOKSettings {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetDbaasSettingsMysqlOKSettingsMysql returns new OptGetDbaasSettingsMysqlOKSettingsMysql with value set to v.
func NewOptGetDbaasSettingsMysqlOKSettingsMysql(v GetDbaasSettingsMysqlOKSettingsMysql) OptGetDbaasSettingsMysqlOKSettingsMysql {
	return OptGetDbaasSettingsMysqlOKSettingsMysql{
		Value: v,
		Set:   true,
	}
}

// OptGetDbaasSettingsMysqlOKSettingsMysql is optional GetDbaasSettingsMysqlOKSettingsMysql.
type OptGetDbaasSettingsMysqlOKSettingsMysql struct {
	Value GetDbaasSettingsMysqlOKSettingsMysql
	Set   bool
}

// IsSet returns true if OptGetDbaasSettingsMysqlOKSettingsMysql was set.
func (o OptGetDbaasSettingsMysqlOKSettingsMysql) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetDbaasSettingsMysqlOKSettingsMysql) Reset() {
	var v GetDbaasSettingsMysqlOKSettingsMysql
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetDbaasSettingsMysqlOKSettingsMysql) SetTo(v GetDbaasSettingsMysqlOKSettingsMysql) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetDbaasSettingsMysqlOKSettingsMysql) Get() (v GetDbaasSettingsMysqlOKSettingsMysql, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetDbaasSettingsMysqlOKSettingsMysql) Or(d GetDbaasSettingsMysqlOKSettingsMysql) GetDbaasSettingsMysqlOKSettingsMysql {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetDbaasSettingsOpensearchOKSettings returns new OptGetDbaasSettingsOpensearchOKSettings with value set to v.
func NewOptGetDbaasSettingsOpensearchOKSettings(v GetDbaasSettingsOpensearchOKSettings) OptGetDbaasSettingsOpensearchOKSettings {
	return OptGetDbaasSettingsOpensearchOKSettings{
		Value: v,
		Set:   true,
	}
}

// OptGetDbaasSettingsOpensearchOKSettings is optional GetDbaasSettingsOpensearchOKSettings.
type OptGetDbaasSettingsOpensearchOKSettings struct {
	Value GetDbaasSettingsOpensearchOKSettings
	Set   bool
}

// IsSet returns true if OptGetDbaasSettingsOpensearchOKSettings was set.
func (o OptGetDbaasSettingsOpensearchOKSettings) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetDbaasSettingsOpensearchOKSettings) Reset() {
	var v GetDbaasSettingsOpensearchOKSettings
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetDbaasSettingsOpensearchOKSettings) SetTo(v GetDbaasSettingsOpensearchOKSettings) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetDbaasSettingsOpensearchOKSettings) Get() (v GetDbaasSettingsOpensearchOKSettings, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetDbaasSettingsOpensearchOKSettings) Or(d GetDbaasSettingsOpensearchOKSettings) GetDbaasSettingsOpensearchOKSettings {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetDbaasSettingsOpensearchOKSettingsOpensearch returns new OptGetDbaasSettingsOpensearchOKSettingsOpensearch with value set to v.
func NewOptGetDbaasSettingsOpensearchOKSettingsOpensearch(v GetDbaasSettingsOpensearchOKSettingsOpensearch) OptGetDbaasSettingsOpensearchOKSettingsOpensearch {
	return OptGetDbaasSettingsOpensearchOKSettingsOpensearch{
		Value: v,
		Set:   true,
	}
}

// OptGetDbaasSettingsOpensearchOKSettingsOpensearch is optional GetDbaasSettingsOpensearchOKSettingsOpensearch.
type OptGetDbaasSettingsOpensearchOKSettingsOpensearch struct {
	Value GetDbaasSettingsOpensearchOKSettingsOpensearch
	Set   bool
}

// IsSet returns true if OptGetDbaasSettingsOpensearchOKSettingsOpensearch was set.
func (o OptGetDbaasSettingsOpensearchOKSettingsOpensearch) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetDbaasSettingsOpensearchOKSettingsOpensearch) Reset() {
	var v GetDbaasSettingsOpensearchOKSettingsOpensearch
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetDbaasSettingsOpensearchOKSettingsOpensearch) SetTo(v GetDbaasSettingsOpensearchOKSettingsOpensearch) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetDbaasSettingsOpensearchOKSettingsOpensearch) Get() (v GetDbaasSettingsOpensearchOKSettingsOpensearch, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetDbaasSettingsOpensearchOKSettingsOpensearch) Or(d GetDbaasSettingsOpensearchOKSettingsOpensearch) GetDbaasSettingsOpensearchOKSettingsOpensearch {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetDbaasSettingsPgOKSettings returns new OptGetDbaasSettingsPgOKSettings with value set to v.
func NewOptGetDbaasSettingsPgOKSettings(v GetDbaasSettingsPgOKSettings) OptGetDbaasSettingsPgOKSettings {
	return OptGetDbaasSettingsPgOKSettings{
		Value: v,
		Set:   true,
	}
}

// OptGetDbaasSettingsPgOKSettings is optional GetDbaasSettingsPgOKSettings.
type OptGetDbaasSettingsPgOKSettings struct {
	Value GetDbaasSettingsPgOKSettings
	Set   bool
}

// IsSet returns true if OptGetDbaasSettingsPgOKSettings was set.
func (o OptGetDbaasSettingsPgOKSettings) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetDbaasSettingsPgOKSettings) Reset() {
	var v GetDbaasSettingsPgOKSettings
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetDbaasSettingsPgOKSettings) SetTo(v GetDbaasSettingsPgOKSettings) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetDbaasSettingsPgOKSettings) Get() (v GetDbaasSettingsPgOKSettings, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetDbaasSettingsPgOKSettings) Or(d GetDbaasSettingsPgOKSettings) GetDbaasSettingsPgOKSettings {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetDbaasSettingsPgOKSettingsPg returns new OptGetDbaasSettingsPgOKSettingsPg with value set to v.
func NewOptGetDbaasSettingsPgOKSettingsPg(v GetDbaasSettingsPgOKSettingsPg) OptGetDbaasSettingsPgOKSettingsPg {
	return OptGetDbaasSettingsPgOKSettingsPg{
		Value: v,
		Set:   true,
	}
}

// OptGetDbaasSettingsPgOKSettingsPg is optional GetDbaasSettingsPgOKSettingsPg.
type OptGetDbaasSettingsPgOKSettingsPg struct {
	Value GetDbaasSettingsPgOKSettingsPg
	Set   bool
}

// IsSet returns true if OptGetDbaasSettingsPgOKSettingsPg was set.
func (o OptGetDbaasSettingsPgOKSettingsPg) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetDbaasSettingsPgOKSettingsPg) Reset() {
	var v GetDbaasSettingsPgOKSettingsPg
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetDbaasSettingsPgOKSettingsPg) SetTo(v GetDbaasSettingsPgOKSettingsPg) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetDbaasSettingsPgOKSettingsPg) Get() (v GetDbaasSettingsPgOKSettingsPg, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetDbaasSettingsPgOKSettingsPg) Or(d GetDbaasSettingsPgOKSettingsPg) GetDbaasSettingsPgOKSettingsPg {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetDbaasSettingsPgOKSettingsPgbouncer returns new OptGetDbaasSettingsPgOKSettingsPgbouncer with value set to v.
func NewOptGetDbaasSettingsPgOKSettingsPgbouncer(v GetDbaasSettingsPgOKSettingsPgbouncer) OptGetDbaasSettingsPgOKSettingsPgbouncer {
	return OptGetDbaasSettingsPgOKSettingsPgbouncer{
		Value: v,
		Set:   true,
	}
}

// OptGetDbaasSettingsPgOKSettingsPgbouncer is optional GetDbaasSettingsPgOKSettingsPgbouncer.
type OptGetDbaasSettingsPgOKSettingsPgbouncer struct {
	Value GetDbaasSettingsPgOKSettingsPgbouncer
	Set   bool
}

// IsSet returns true if OptGetDbaasSettingsPgOKSettingsPgbouncer was set.
func (o OptGetDbaasSettingsPgOKSettingsPgbouncer) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetDbaasSettingsPgOKSettingsPgbouncer) Reset() {
	var v GetDbaasSettingsPgOKSettingsPgbouncer
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetDbaasSettingsPgOKSettingsPgbouncer) SetTo(v GetDbaasSettingsPgOKSettingsPgbouncer) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetDbaasSettingsPgOKSettingsPgbouncer) Get() (v GetDbaasSettingsPgOKSettingsPgbouncer, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetDbaasSettingsPgOKSettingsPgbouncer) Or(d GetDbaasSettingsPgOKSettingsPgbouncer) GetDbaasSettingsPgOKSettingsPgbouncer {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetDbaasSettingsPgOKSettingsPglookout returns new OptGetDbaasSettingsPgOKSettingsPglookout with value set to v.
func NewOptGetDbaasSettingsPgOKSettingsPglookout(v GetDbaasSettingsPgOKSettingsPglookout) OptGetDbaasSettingsPgOKSettingsPglookout {
	return OptGetDbaasSettingsPgOKSettingsPglookout{
		Value: v,
		Set:   true,
	}
}

// OptGetDbaasSettingsPgOKSettingsPglookout is optional GetDbaasSettingsPgOKSettingsPglookout.
type OptGetDbaasSettingsPgOKSettingsPglookout struct {
	Value GetDbaasSettingsPgOKSettingsPglookout
	Set   bool
}

// IsSet returns true if OptGetDbaasSettingsPgOKSettingsPglookout was set.
func (o OptGetDbaasSettingsPgOKSettingsPglookout) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetDbaasSettingsPgOKSettingsPglookout) Reset() {
	var v GetDbaasSettingsPgOKSettingsPglookout
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetDbaasSettingsPgOKSettingsPglookout) SetTo(v GetDbaasSettingsPgOKSettingsPglookout) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetDbaasSettingsPgOKSettingsPglookout) Get() (v GetDbaasSettingsPgOKSettingsPglookout, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetDbaasSettingsPgOKSettingsPglookout) Or(d GetDbaasSettingsPgOKSettingsPglookout) GetDbaasSettingsPgOKSettingsPglookout {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetDbaasSettingsPgOKSettingsTimescaledb returns new OptGetDbaasSettingsPgOKSettingsTimescaledb with value set to v.
func NewOptGetDbaasSettingsPgOKSettingsTimescaledb(v GetDbaasSettingsPgOKSettingsTimescaledb) OptGetDbaasSettingsPgOKSettingsTimescaledb {
	return OptGetDbaasSettingsPgOKSettingsTimescaledb{
		Value: v,
		Set:   true,
	}
}

// OptGetDbaasSettingsPgOKSettingsTimescaledb is optional GetDbaasSettingsPgOKSettingsTimescaledb.
type OptGetDbaasSettingsPgOKSettingsTimescaledb struct {
	Value GetDbaasSettingsPgOKSettingsTimescaledb
	Set   bool
}

// IsSet returns true if OptGetDbaasSettingsPgOKSettingsTimescaledb was set.
func (o OptGetDbaasSettingsPgOKSettingsTimescaledb) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetDbaasSettingsPgOKSettingsTimescaledb) Reset() {
	var v GetDbaasSettingsPgOKSettingsTimescaledb
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetDbaasSettingsPgOKSettingsTimescaledb) SetTo(v GetDbaasSettingsPgOKSettingsTimescaledb) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetDbaasSettingsPgOKSettingsTimescaledb) Get() (v GetDbaasSettingsPgOKSettingsTimescaledb, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetDbaasSettingsPgOKSettingsTimescaledb) Or(d GetDbaasSettingsPgOKSettingsTimescaledb) GetDbaasSettingsPgOKSettingsTimescaledb {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetDbaasSettingsRedisOKSettings returns new OptGetDbaasSettingsRedisOKSettings with value set to v.
func NewOptGetDbaasSettingsRedisOKSettings(v GetDbaasSettingsRedisOKSettings) OptGetDbaasSettingsRedisOKSettings {
	return OptGetDbaasSettingsRedisOKSettings{
		Value: v,
		Set:   true,
	}
}

// OptGetDbaasSettingsRedisOKSettings is optional GetDbaasSettingsRedisOKSettings.
type OptGetDbaasSettingsRedisOKSettings struct {
	Value GetDbaasSettingsRedisOKSettings
	Set   bool
}

// IsSet returns true if OptGetDbaasSettingsRedisOKSettings was set.
func (o OptGetDbaasSettingsRedisOKSettings) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetDbaasSettingsRedisOKSettings) Reset() {
	var v GetDbaasSettingsRedisOKSettings
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetDbaasSettingsRedisOKSettings) SetTo(v GetDbaasSettingsRedisOKSettings) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetDbaasSettingsRedisOKSettings) Get() (v GetDbaasSettingsRedisOKSettings, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetDbaasSettingsRedisOKSettings) Or(d GetDbaasSettingsRedisOKSettings) GetDbaasSettingsRedisOKSettings {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetDbaasSettingsRedisOKSettingsRedis returns new OptGetDbaasSettingsRedisOKSettingsRedis with value set to v.
func NewOptGetDbaasSettingsRedisOKSettingsRedis(v GetDbaasSettingsRedisOKSettingsRedis) OptGetDbaasSettingsRedisOKSettingsRedis {
	return OptGetDbaasSettingsRedisOKSettingsRedis{
		Value: v,
		Set:   true,
	}
}

// OptGetDbaasSettingsRedisOKSettingsRedis is optional GetDbaasSettingsRedisOKSettingsRedis.
type OptGetDbaasSettingsRedisOKSettingsRedis struct {
	Value GetDbaasSettingsRedisOKSettingsRedis
	Set   bool
}

// IsSet returns true if OptGetDbaasSettingsRedisOKSettingsRedis was set.
func (o OptGetDbaasSettingsRedisOKSettingsRedis) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetDbaasSettingsRedisOKSettingsRedis) Reset() {
	var v GetDbaasSettingsRedisOKSettingsRedis
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetDbaasSettingsRedisOKSettingsRedis) SetTo(v GetDbaasSettingsRedisOKSettingsRedis) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetDbaasSettingsRedisOKSettingsRedis) Get() (v GetDbaasSettingsRedisOKSettingsRedis, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetDbaasSettingsRedisOKSettingsRedis) Or(d GetDbaasSettingsRedisOKSettingsRedis) GetDbaasSettingsRedisOKSettingsRedis {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptIPv4 returns new OptIPv4 with value set to v.
func NewOptIPv4(v netip.Addr) OptIPv4 {
	return OptIPv4{
		Value: v,
		Set:   true,
	}
}

// OptIPv4 is optional netip.Addr.
type OptIPv4 struct {
	Value netip.Addr
	Set   bool
}

// IsSet returns true if OptIPv4 was set.
func (o OptIPv4) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptIPv4) Reset() {
	var v netip.Addr
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptIPv4) SetTo(v netip.Addr) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptIPv4) Get() (v netip.Addr, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptIPv4) Or(d netip.Addr) netip.Addr {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptIamPolicy returns new OptIamPolicy with value set to v.
func NewOptIamPolicy(v IamPolicy) OptIamPolicy {
	return OptIamPolicy{
		Value: v,
		Set:   true,
	}
}

// OptIamPolicy is optional IamPolicy.
type OptIamPolicy struct {
	Value IamPolicy
	Set   bool
}

// IsSet returns true if OptIamPolicy was set.
func (o OptIamPolicy) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptIamPolicy) Reset() {
	var v IamPolicy
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptIamPolicy) SetTo(v IamPolicy) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptIamPolicy) Get() (v IamPolicy, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptIamPolicy) Or(d IamPolicy) IamPolicy {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptIamServicePolicyRuleAction returns new OptIamServicePolicyRuleAction with value set to v.
func NewOptIamServicePolicyRuleAction(v IamServicePolicyRuleAction) OptIamServicePolicyRuleAction {
	return OptIamServicePolicyRuleAction{
		Value: v,
		Set:   true,
	}
}

// OptIamServicePolicyRuleAction is optional IamServicePolicyRuleAction.
type OptIamServicePolicyRuleAction struct {
	Value IamServicePolicyRuleAction
	Set   bool
}

// IsSet returns true if OptIamServicePolicyRuleAction was set.
func (o OptIamServicePolicyRuleAction) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptIamServicePolicyRuleAction) Reset() {
	var v IamServicePolicyRuleAction
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptIamServicePolicyRuleAction) SetTo(v IamServicePolicyRuleAction) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptIamServicePolicyRuleAction) Get() (v IamServicePolicyRuleAction, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptIamServicePolicyRuleAction) Or(d IamServicePolicyRuleAction) IamServicePolicyRuleAction {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptIamServicePolicyType returns new OptIamServicePolicyType with value set to v.
func NewOptIamServicePolicyType(v IamServicePolicyType) OptIamServicePolicyType {
	return OptIamServicePolicyType{
		Value: v,
		Set:   true,
	}
}

// OptIamServicePolicyType is optional IamServicePolicyType.
type OptIamServicePolicyType struct {
	Value IamServicePolicyType
	Set   bool
}

// IsSet returns true if OptIamServicePolicyType was set.
func (o OptIamServicePolicyType) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptIamServicePolicyType) Reset() {
	var v IamServicePolicyType
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptIamServicePolicyType) SetTo(v IamServicePolicyType) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptIamServicePolicyType) Get() (v IamServicePolicyType, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptIamServicePolicyType) Or(d IamServicePolicyType) IamServicePolicyType {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptInstanceTypeFamily returns new OptInstanceTypeFamily with value set to v.
func NewOptInstanceTypeFamily(v InstanceTypeFamily) OptInstanceTypeFamily {
	return OptInstanceTypeFamily{
		Value: v,
		Set:   true,
	}
}

// OptInstanceTypeFamily is optional InstanceTypeFamily.
type OptInstanceTypeFamily struct {
	Value InstanceTypeFamily
	Set   bool
}

// IsSet returns true if OptInstanceTypeFamily was set.
func (o OptInstanceTypeFamily) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInstanceTypeFamily) Reset() {
	var v InstanceTypeFamily
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInstanceTypeFamily) SetTo(v InstanceTypeFamily) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInstanceTypeFamily) Get() (v InstanceTypeFamily, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInstanceTypeFamily) Or(d InstanceTypeFamily) InstanceTypeFamily {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptInstanceTypeSize returns new OptInstanceTypeSize with value set to v.
func NewOptInstanceTypeSize(v InstanceTypeSize) OptInstanceTypeSize {
	return OptInstanceTypeSize{
		Value: v,
		Set:   true,
	}
}

// OptInstanceTypeSize is optional InstanceTypeSize.
type OptInstanceTypeSize struct {
	Value InstanceTypeSize
	Set   bool
}

// IsSet returns true if OptInstanceTypeSize was set.
func (o OptInstanceTypeSize) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInstanceTypeSize) Reset() {
	var v InstanceTypeSize
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInstanceTypeSize) SetTo(v InstanceTypeSize) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInstanceTypeSize) Get() (v InstanceTypeSize, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInstanceTypeSize) Or(d InstanceTypeSize) InstanceTypeSize {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptInt64 returns new OptInt64 with value set to v.
func NewOptInt64(v int64) OptInt64 {
	return OptInt64{
		Value: v,
		Set:   true,
	}
}

// OptInt64 is optional int64.
type OptInt64 struct {
	Value int64
	Set   bool
}

// IsSet returns true if OptInt64 was set.
func (o OptInt64) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt64) Reset() {
	var v int64
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt64) SetTo(v int64) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt64) Get() (v int64, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt64) Or(d int64) int64 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptLabels returns new OptLabels with value set to v.
func NewOptLabels(v Labels) OptLabels {
	return OptLabels{
		Value: v,
		Set:   true,
	}
}

// OptLabels is optional Labels.
type OptLabels struct {
	Value Labels
	Set   bool
}

// IsSet returns true if OptLabels was set.
func (o OptLabels) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptLabels) Reset() {
	var v Labels
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptLabels) SetTo(v Labels) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptLabels) Get() (v Labels, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptLabels) Or(d Labels) Labels {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptListDbaasIntegrationSettingsOKSettings returns new OptListDbaasIntegrationSettingsOKSettings with value set to v.
func NewOptListDbaasIntegrationSettingsOKSettings(v ListDbaasIntegrationSettingsOKSettings) OptListDbaasIntegrationSettingsOKSettings {
	return OptListDbaasIntegrationSettingsOKSettings{
		Value: v,
		Set:   true,
	}
}

// OptListDbaasIntegrationSettingsOKSettings is optional ListDbaasIntegrationSettingsOKSettings.
type OptListDbaasIntegrationSettingsOKSettings struct {
	Value ListDbaasIntegrationSettingsOKSettings
	Set   bool
}

// IsSet returns true if OptListDbaasIntegrationSettingsOKSettings was set.
func (o OptListDbaasIntegrationSettingsOKSettings) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptListDbaasIntegrationSettingsOKSettings) Reset() {
	var v ListDbaasIntegrationSettingsOKSettings
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptListDbaasIntegrationSettingsOKSettings) SetTo(v ListDbaasIntegrationSettingsOKSettings) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptListDbaasIntegrationSettingsOKSettings) Get() (v ListDbaasIntegrationSettingsOKSettings, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptListDbaasIntegrationSettingsOKSettings) Or(d ListDbaasIntegrationSettingsOKSettings) ListDbaasIntegrationSettingsOKSettings {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptListTemplatesVisibility returns new OptListTemplatesVisibility with value set to v.
func NewOptListTemplatesVisibility(v ListTemplatesVisibility) OptListTemplatesVisibility {
	return OptListTemplatesVisibility{
		Value: v,
		Set:   true,
	}
}

// OptListTemplatesVisibility is optional ListTemplatesVisibility.
type OptListTemplatesVisibility struct {
	Value ListTemplatesVisibility
	Set   bool
}

// IsSet returns true if OptListTemplatesVisibility was set.
func (o OptListTemplatesVisibility) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptListTemplatesVisibility) Reset() {
	var v ListTemplatesVisibility
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptListTemplatesVisibility) SetTo(v ListTemplatesVisibility) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptListTemplatesVisibility) Get() (v ListTemplatesVisibility, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptListTemplatesVisibility) Or(d ListTemplatesVisibility) ListTemplatesVisibility {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptLoadBalancerServiceHealthcheck returns new OptLoadBalancerServiceHealthcheck with value set to v.
func NewOptLoadBalancerServiceHealthcheck(v LoadBalancerServiceHealthcheck) OptLoadBalancerServiceHealthcheck {
	return OptLoadBalancerServiceHealthcheck{
		Value: v,
		Set:   true,
	}
}

// OptLoadBalancerServiceHealthcheck is optional LoadBalancerServiceHealthcheck.
type OptLoadBalancerServiceHealthcheck struct {
	Value LoadBalancerServiceHealthcheck
	Set   bool
}

// IsSet returns true if OptLoadBalancerServiceHealthcheck was set.
func (o OptLoadBalancerServiceHealthcheck) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptLoadBalancerServiceHealthcheck) Reset() {
	var v LoadBalancerServiceHealthcheck
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptLoadBalancerServiceHealthcheck) SetTo(v LoadBalancerServiceHealthcheck) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptLoadBalancerServiceHealthcheck) Get() (v LoadBalancerServiceHealthcheck, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptLoadBalancerServiceHealthcheck) Or(d LoadBalancerServiceHealthcheck) LoadBalancerServiceHealthcheck {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptLoadBalancerServiceHealthcheckMode returns new OptLoadBalancerServiceHealthcheckMode with value set to v.
func NewOptLoadBalancerServiceHealthcheckMode(v LoadBalancerServiceHealthcheckMode) OptLoadBalancerServiceHealthcheckMode {
	return OptLoadBalancerServiceHealthcheckMode{
		Value: v,
		Set:   true,
	}
}

// OptLoadBalancerServiceHealthcheckMode is optional LoadBalancerServiceHealthcheckMode.
type OptLoadBalancerServiceHealthcheckMode struct {
	Value LoadBalancerServiceHealthcheckMode
	Set   bool
}

// IsSet returns true if OptLoadBalancerServiceHealthcheckMode was set.
func (o OptLoadBalancerServiceHealthcheckMode) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptLoadBalancerServiceHealthcheckMode) Reset() {
	var v LoadBalancerServiceHealthcheckMode
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptLoadBalancerServiceHealthcheckMode) SetTo(v LoadBalancerServiceHealthcheckMode) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptLoadBalancerServiceHealthcheckMode) Get() (v LoadBalancerServiceHealthcheckMode, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptLoadBalancerServiceHealthcheckMode) Or(d LoadBalancerServiceHealthcheckMode) LoadBalancerServiceHealthcheckMode {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilString returns new OptNilString with value set to v.
func NewOptNilString(v string) OptNilString {
	return OptNilString{
		Value: v,
		Set:   true,
	}
}

// OptNilString is optional nullable string.
type OptNilString struct {
	Value string
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilString was set.
func (o OptNilString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilString) Reset() {
	var v string
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilString) SetTo(v string) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilString) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilString) SetToNull() {
	o.Set = true
	o.Null = true
	var v string
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilString) Get() (v string, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptOperationReason returns new OptOperationReason with value set to v.
func NewOptOperationReason(v OperationReason) OptOperationReason {
	return OptOperationReason{
		Value: v,
		Set:   true,
	}
}

// OptOperationReason is optional OperationReason.
type OptOperationReason struct {
	Value OperationReason
	Set   bool
}

// IsSet returns true if OptOperationReason was set.
func (o OptOperationReason) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptOperationReason) Reset() {
	var v OperationReason
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptOperationReason) SetTo(v OperationReason) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptOperationReason) Get() (v OperationReason, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptOperationReason) Or(d OperationReason) OperationReason {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptOperationReference returns new OptOperationReference with value set to v.
func NewOptOperationReference(v OperationReference) OptOperationReference {
	return OptOperationReference{
		Value: v,
		Set:   true,
	}
}

// OptOperationReference is optional OperationReference.
type OptOperationReference struct {
	Value OperationReference
	Set   bool
}

// IsSet returns true if OptOperationReference was set.
func (o OptOperationReference) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptOperationReference) Reset() {
	var v OperationReference
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptOperationReference) SetTo(v OperationReference) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptOperationReference) Get() (v OperationReference, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptOperationReference) Or(d OperationReference) OperationReference {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptOperationState returns new OptOperationState with value set to v.
func NewOptOperationState(v OperationState) OptOperationState {
	return OptOperationState{
		Value: v,
		Set:   true,
	}
}

// OptOperationState is optional OperationState.
type OptOperationState struct {
	Value OperationState
	Set   bool
}

// IsSet returns true if OptOperationState was set.
func (o OptOperationState) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptOperationState) Reset() {
	var v OperationState
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptOperationState) SetTo(v OperationState) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptOperationState) Get() (v OperationState, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptOperationState) Or(d OperationState) OperationState {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPublicIPAssignment returns new OptPublicIPAssignment with value set to v.
func NewOptPublicIPAssignment(v PublicIPAssignment) OptPublicIPAssignment {
	return OptPublicIPAssignment{
		Value: v,
		Set:   true,
	}
}

// OptPublicIPAssignment is optional PublicIPAssignment.
type OptPublicIPAssignment struct {
	Value PublicIPAssignment
	Set   bool
}

// IsSet returns true if OptPublicIPAssignment was set.
func (o OptPublicIPAssignment) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPublicIPAssignment) Reset() {
	var v PublicIPAssignment
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPublicIPAssignment) SetTo(v PublicIPAssignment) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPublicIPAssignment) Get() (v PublicIPAssignment, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPublicIPAssignment) Or(d PublicIPAssignment) PublicIPAssignment {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptRegisterTemplateReqBootMinusMode returns new OptRegisterTemplateReqBootMinusMode with value set to v.
func NewOptRegisterTemplateReqBootMinusMode(v RegisterTemplateReqBootMinusMode) OptRegisterTemplateReqBootMinusMode {
	return OptRegisterTemplateReqBootMinusMode{
		Value: v,
		Set:   true,
	}
}

// OptRegisterTemplateReqBootMinusMode is optional RegisterTemplateReqBootMinusMode.
type OptRegisterTemplateReqBootMinusMode struct {
	Value RegisterTemplateReqBootMinusMode
	Set   bool
}

// IsSet returns true if OptRegisterTemplateReqBootMinusMode was set.
func (o OptRegisterTemplateReqBootMinusMode) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptRegisterTemplateReqBootMinusMode) Reset() {
	var v RegisterTemplateReqBootMinusMode
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptRegisterTemplateReqBootMinusMode) SetTo(v RegisterTemplateReqBootMinusMode) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptRegisterTemplateReqBootMinusMode) Get() (v RegisterTemplateReqBootMinusMode, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptRegisterTemplateReqBootMinusMode) Or(d RegisterTemplateReqBootMinusMode) RegisterTemplateReqBootMinusMode {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptSecurityGroupResource returns new OptSecurityGroupResource with value set to v.
func NewOptSecurityGroupResource(v SecurityGroupResource) OptSecurityGroupResource {
	return OptSecurityGroupResource{
		Value: v,
		Set:   true,
	}
}

// OptSecurityGroupResource is optional SecurityGroupResource.
type OptSecurityGroupResource struct {
	Value SecurityGroupResource
	Set   bool
}

// IsSet returns true if OptSecurityGroupResource was set.
func (o OptSecurityGroupResource) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptSecurityGroupResource) Reset() {
	var v SecurityGroupResource
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptSecurityGroupResource) SetTo(v SecurityGroupResource) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptSecurityGroupResource) Get() (v SecurityGroupResource, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptSecurityGroupResource) Or(d SecurityGroupResource) SecurityGroupResource {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptSecurityGroupResourceVisibility returns new OptSecurityGroupResourceVisibility with value set to v.
func NewOptSecurityGroupResourceVisibility(v SecurityGroupResourceVisibility) OptSecurityGroupResourceVisibility {
	return OptSecurityGroupResourceVisibility{
		Value: v,
		Set:   true,
	}
}

// OptSecurityGroupResourceVisibility is optional SecurityGroupResourceVisibility.
type OptSecurityGroupResourceVisibility struct {
	Value SecurityGroupResourceVisibility
	Set   bool
}

// IsSet returns true if OptSecurityGroupResourceVisibility was set.
func (o OptSecurityGroupResourceVisibility) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptSecurityGroupResourceVisibility) Reset() {
	var v SecurityGroupResourceVisibility
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptSecurityGroupResourceVisibility) SetTo(v SecurityGroupResourceVisibility) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptSecurityGroupResourceVisibility) Get() (v SecurityGroupResourceVisibility, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptSecurityGroupResourceVisibility) Or(d SecurityGroupResourceVisibility) SecurityGroupResourceVisibility {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptSksOidc returns new OptSksOidc with value set to v.
func NewOptSksOidc(v SksOidc) OptSksOidc {
	return OptSksOidc{
		Value: v,
		Set:   true,
	}
}

// OptSksOidc is optional SksOidc.
type OptSksOidc struct {
	Value SksOidc
	Set   bool
}

// IsSet returns true if OptSksOidc was set.
func (o OptSksOidc) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptSksOidc) Reset() {
	var v SksOidc
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptSksOidc) SetTo(v SksOidc) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptSksOidc) Get() (v SksOidc, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptSksOidc) Or(d SksOidc) SksOidc {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptSksOidcRequiredMinusClaim returns new OptSksOidcRequiredMinusClaim with value set to v.
func NewOptSksOidcRequiredMinusClaim(v SksOidcRequiredMinusClaim) OptSksOidcRequiredMinusClaim {
	return OptSksOidcRequiredMinusClaim{
		Value: v,
		Set:   true,
	}
}

// OptSksOidcRequiredMinusClaim is optional SksOidcRequiredMinusClaim.
type OptSksOidcRequiredMinusClaim struct {
	Value SksOidcRequiredMinusClaim
	Set   bool
}

// IsSet returns true if OptSksOidcRequiredMinusClaim was set.
func (o OptSksOidcRequiredMinusClaim) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptSksOidcRequiredMinusClaim) Reset() {
	var v SksOidcRequiredMinusClaim
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptSksOidcRequiredMinusClaim) SetTo(v SksOidcRequiredMinusClaim) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptSksOidcRequiredMinusClaim) Get() (v SksOidcRequiredMinusClaim, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptSksOidcRequiredMinusClaim) Or(d SksOidcRequiredMinusClaim) SksOidcRequiredMinusClaim {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptStartInstanceReqRescueMinusProfile returns new OptStartInstanceReqRescueMinusProfile with value set to v.
func NewOptStartInstanceReqRescueMinusProfile(v StartInstanceReqRescueMinusProfile) OptStartInstanceReqRescueMinusProfile {
	return OptStartInstanceReqRescueMinusProfile{
		Value: v,
		Set:   true,
	}
}

// OptStartInstanceReqRescueMinusProfile is optional StartInstanceReqRescueMinusProfile.
type OptStartInstanceReqRescueMinusProfile struct {
	Value StartInstanceReqRescueMinusProfile
	Set   bool
}

// IsSet returns true if OptStartInstanceReqRescueMinusProfile was set.
func (o OptStartInstanceReqRescueMinusProfile) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptStartInstanceReqRescueMinusProfile) Reset() {
	var v StartInstanceReqRescueMinusProfile
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptStartInstanceReqRescueMinusProfile) SetTo(v StartInstanceReqRescueMinusProfile) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptStartInstanceReqRescueMinusProfile) Get() (v StartInstanceReqRescueMinusProfile, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptStartInstanceReqRescueMinusProfile) Or(d StartInstanceReqRescueMinusProfile) StartInstanceReqRescueMinusProfile {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptTemplate returns new OptTemplate with value set to v.
func NewOptTemplate(v Template) OptTemplate {
	return OptTemplate{
		Value: v,
		Set:   true,
	}
}

// OptTemplate is optional Template.
type OptTemplate struct {
	Value Template
	Set   bool
}

// IsSet returns true if OptTemplate was set.
func (o OptTemplate) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptTemplate) Reset() {
	var v Template
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptTemplate) SetTo(v Template) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptTemplate) Get() (v Template, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptTemplate) Or(d Template) Template {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptTemplateBootMinusMode returns new OptTemplateBootMinusMode with value set to v.
func NewOptTemplateBootMinusMode(v TemplateBootMinusMode) OptTemplateBootMinusMode {
	return OptTemplateBootMinusMode{
		Value: v,
		Set:   true,
	}
}

// OptTemplateBootMinusMode is optional TemplateBootMinusMode.
type OptTemplateBootMinusMode struct {
	Value TemplateBootMinusMode
	Set   bool
}

// IsSet returns true if OptTemplateBootMinusMode was set.
func (o OptTemplateBootMinusMode) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptTemplateBootMinusMode) Reset() {
	var v TemplateBootMinusMode
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptTemplateBootMinusMode) SetTo(v TemplateBootMinusMode) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptTemplateBootMinusMode) Get() (v TemplateBootMinusMode, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptTemplateBootMinusMode) Or(d TemplateBootMinusMode) TemplateBootMinusMode {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptTemplateVisibility returns new OptTemplateVisibility with value set to v.
func NewOptTemplateVisibility(v TemplateVisibility) OptTemplateVisibility {
	return OptTemplateVisibility{
		Value: v,
		Set:   true,
	}
}

// OptTemplateVisibility is optional TemplateVisibility.
type OptTemplateVisibility struct {
	Value TemplateVisibility
	Set   bool
}

// IsSet returns true if OptTemplateVisibility was set.
func (o OptTemplateVisibility) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptTemplateVisibility) Reset() {
	var v TemplateVisibility
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptTemplateVisibility) SetTo(v TemplateVisibility) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptTemplateVisibility) Get() (v TemplateVisibility, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptTemplateVisibility) Or(d TemplateVisibility) TemplateVisibility {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUUID returns new OptUUID with value set to v.
func NewOptUUID(v uuid.UUID) OptUUID {
	return OptUUID{
		Value: v,
		Set:   true,
	}
}

// OptUUID is optional uuid.UUID.
type OptUUID struct {
	Value uuid.UUID
	Set   bool
}

// IsSet returns true if OptUUID was set.
func (o OptUUID) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUUID) Reset() {
	var v uuid.UUID
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUUID) SetTo(v uuid.UUID) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUUID) Get() (v uuid.UUID, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUUID) Or(d uuid.UUID) uuid.UUID {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateDbaasServiceKafkaReqAuthenticationMinusMethods returns new OptUpdateDbaasServiceKafkaReqAuthenticationMinusMethods with value set to v.
func NewOptUpdateDbaasServiceKafkaReqAuthenticationMinusMethods(v UpdateDbaasServiceKafkaReqAuthenticationMinusMethods) OptUpdateDbaasServiceKafkaReqAuthenticationMinusMethods {
	return OptUpdateDbaasServiceKafkaReqAuthenticationMinusMethods{
		Value: v,
		Set:   true,
	}
}

// OptUpdateDbaasServiceKafkaReqAuthenticationMinusMethods is optional UpdateDbaasServiceKafkaReqAuthenticationMinusMethods.
type OptUpdateDbaasServiceKafkaReqAuthenticationMinusMethods struct {
	Value UpdateDbaasServiceKafkaReqAuthenticationMinusMethods
	Set   bool
}

// IsSet returns true if OptUpdateDbaasServiceKafkaReqAuthenticationMinusMethods was set.
func (o OptUpdateDbaasServiceKafkaReqAuthenticationMinusMethods) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateDbaasServiceKafkaReqAuthenticationMinusMethods) Reset() {
	var v UpdateDbaasServiceKafkaReqAuthenticationMinusMethods
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateDbaasServiceKafkaReqAuthenticationMinusMethods) SetTo(v UpdateDbaasServiceKafkaReqAuthenticationMinusMethods) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateDbaasServiceKafkaReqAuthenticationMinusMethods) Get() (v UpdateDbaasServiceKafkaReqAuthenticationMinusMethods, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateDbaasServiceKafkaReqAuthenticationMinusMethods) Or(d UpdateDbaasServiceKafkaReqAuthenticationMinusMethods) UpdateDbaasServiceKafkaReqAuthenticationMinusMethods {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateDbaasServiceKafkaReqMaintenance returns new OptUpdateDbaasServiceKafkaReqMaintenance with value set to v.
func NewOptUpdateDbaasServiceKafkaReqMaintenance(v UpdateDbaasServiceKafkaReqMaintenance) OptUpdateDbaasServiceKafkaReqMaintenance {
	return OptUpdateDbaasServiceKafkaReqMaintenance{
		Value: v,
		Set:   true,
	}
}

// OptUpdateDbaasServiceKafkaReqMaintenance is optional UpdateDbaasServiceKafkaReqMaintenance.
type OptUpdateDbaasServiceKafkaReqMaintenance struct {
	Value UpdateDbaasServiceKafkaReqMaintenance
	Set   bool
}

// IsSet returns true if OptUpdateDbaasServiceKafkaReqMaintenance was set.
func (o OptUpdateDbaasServiceKafkaReqMaintenance) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateDbaasServiceKafkaReqMaintenance) Reset() {
	var v UpdateDbaasServiceKafkaReqMaintenance
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateDbaasServiceKafkaReqMaintenance) SetTo(v UpdateDbaasServiceKafkaReqMaintenance) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateDbaasServiceKafkaReqMaintenance) Get() (v UpdateDbaasServiceKafkaReqMaintenance, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateDbaasServiceKafkaReqMaintenance) Or(d UpdateDbaasServiceKafkaReqMaintenance) UpdateDbaasServiceKafkaReqMaintenance {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateDbaasServiceMysqlReqBackupMinusSchedule returns new OptUpdateDbaasServiceMysqlReqBackupMinusSchedule with value set to v.
func NewOptUpdateDbaasServiceMysqlReqBackupMinusSchedule(v UpdateDbaasServiceMysqlReqBackupMinusSchedule) OptUpdateDbaasServiceMysqlReqBackupMinusSchedule {
	return OptUpdateDbaasServiceMysqlReqBackupMinusSchedule{
		Value: v,
		Set:   true,
	}
}

// OptUpdateDbaasServiceMysqlReqBackupMinusSchedule is optional UpdateDbaasServiceMysqlReqBackupMinusSchedule.
type OptUpdateDbaasServiceMysqlReqBackupMinusSchedule struct {
	Value UpdateDbaasServiceMysqlReqBackupMinusSchedule
	Set   bool
}

// IsSet returns true if OptUpdateDbaasServiceMysqlReqBackupMinusSchedule was set.
func (o OptUpdateDbaasServiceMysqlReqBackupMinusSchedule) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateDbaasServiceMysqlReqBackupMinusSchedule) Reset() {
	var v UpdateDbaasServiceMysqlReqBackupMinusSchedule
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateDbaasServiceMysqlReqBackupMinusSchedule) SetTo(v UpdateDbaasServiceMysqlReqBackupMinusSchedule) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateDbaasServiceMysqlReqBackupMinusSchedule) Get() (v UpdateDbaasServiceMysqlReqBackupMinusSchedule, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateDbaasServiceMysqlReqBackupMinusSchedule) Or(d UpdateDbaasServiceMysqlReqBackupMinusSchedule) UpdateDbaasServiceMysqlReqBackupMinusSchedule {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateDbaasServiceMysqlReqMaintenance returns new OptUpdateDbaasServiceMysqlReqMaintenance with value set to v.
func NewOptUpdateDbaasServiceMysqlReqMaintenance(v UpdateDbaasServiceMysqlReqMaintenance) OptUpdateDbaasServiceMysqlReqMaintenance {
	return OptUpdateDbaasServiceMysqlReqMaintenance{
		Value: v,
		Set:   true,
	}
}

// OptUpdateDbaasServiceMysqlReqMaintenance is optional UpdateDbaasServiceMysqlReqMaintenance.
type OptUpdateDbaasServiceMysqlReqMaintenance struct {
	Value UpdateDbaasServiceMysqlReqMaintenance
	Set   bool
}

// IsSet returns true if OptUpdateDbaasServiceMysqlReqMaintenance was set.
func (o OptUpdateDbaasServiceMysqlReqMaintenance) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateDbaasServiceMysqlReqMaintenance) Reset() {
	var v UpdateDbaasServiceMysqlReqMaintenance
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateDbaasServiceMysqlReqMaintenance) SetTo(v UpdateDbaasServiceMysqlReqMaintenance) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateDbaasServiceMysqlReqMaintenance) Get() (v UpdateDbaasServiceMysqlReqMaintenance, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateDbaasServiceMysqlReqMaintenance) Or(d UpdateDbaasServiceMysqlReqMaintenance) UpdateDbaasServiceMysqlReqMaintenance {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateDbaasServiceMysqlReqMigration returns new OptUpdateDbaasServiceMysqlReqMigration with value set to v.
func NewOptUpdateDbaasServiceMysqlReqMigration(v UpdateDbaasServiceMysqlReqMigration) OptUpdateDbaasServiceMysqlReqMigration {
	return OptUpdateDbaasServiceMysqlReqMigration{
		Value: v,
		Set:   true,
	}
}

// OptUpdateDbaasServiceMysqlReqMigration is optional UpdateDbaasServiceMysqlReqMigration.
type OptUpdateDbaasServiceMysqlReqMigration struct {
	Value UpdateDbaasServiceMysqlReqMigration
	Set   bool
}

// IsSet returns true if OptUpdateDbaasServiceMysqlReqMigration was set.
func (o OptUpdateDbaasServiceMysqlReqMigration) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateDbaasServiceMysqlReqMigration) Reset() {
	var v UpdateDbaasServiceMysqlReqMigration
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateDbaasServiceMysqlReqMigration) SetTo(v UpdateDbaasServiceMysqlReqMigration) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateDbaasServiceMysqlReqMigration) Get() (v UpdateDbaasServiceMysqlReqMigration, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateDbaasServiceMysqlReqMigration) Or(d UpdateDbaasServiceMysqlReqMigration) UpdateDbaasServiceMysqlReqMigration {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateDbaasServiceOpensearchReqIndexMinusPatternsItemSortingMinusAlgorithm returns new OptUpdateDbaasServiceOpensearchReqIndexMinusPatternsItemSortingMinusAlgorithm with value set to v.
func NewOptUpdateDbaasServiceOpensearchReqIndexMinusPatternsItemSortingMinusAlgorithm(v UpdateDbaasServiceOpensearchReqIndexMinusPatternsItemSortingMinusAlgorithm) OptUpdateDbaasServiceOpensearchReqIndexMinusPatternsItemSortingMinusAlgorithm {
	return OptUpdateDbaasServiceOpensearchReqIndexMinusPatternsItemSortingMinusAlgorithm{
		Value: v,
		Set:   true,
	}
}

// OptUpdateDbaasServiceOpensearchReqIndexMinusPatternsItemSortingMinusAlgorithm is optional UpdateDbaasServiceOpensearchReqIndexMinusPatternsItemSortingMinusAlgorithm.
type OptUpdateDbaasServiceOpensearchReqIndexMinusPatternsItemSortingMinusAlgorithm struct {
	Value UpdateDbaasServiceOpensearchReqIndexMinusPatternsItemSortingMinusAlgorithm
	Set   bool
}

// IsSet returns true if OptUpdateDbaasServiceOpensearchReqIndexMinusPatternsItemSortingMinusAlgorithm was set.
func (o OptUpdateDbaasServiceOpensearchReqIndexMinusPatternsItemSortingMinusAlgorithm) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptUpdateDbaasServiceOpensearchReqIndexMinusPatternsItemSortingMinusAlgorithm) Reset() {
	var v UpdateDbaasServiceOpensearchReqIndexMinusPatternsItemSortingMinusAlgorithm
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateDbaasServiceOpensearchReqIndexMinusPatternsItemSortingMinusAlgorithm) SetTo(v UpdateDbaasServiceOpensearchReqIndexMinusPatternsItemSortingMinusAlgorithm) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateDbaasServiceOpensearchReqIndexMinusPatternsItemSortingMinusAlgorithm) Get() (v UpdateDbaasServiceOpensearchReqIndexMinusPatternsItemSortingMinusAlgorithm, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateDbaasServiceOpensearchReqIndexMinusPatternsItemSortingMinusAlgorithm) Or(d UpdateDbaasServiceOpensearchReqIndexMinusPatternsItemSortingMinusAlgorithm) UpdateDbaasServiceOpensearchReqIndexMinusPatternsItemSortingMinusAlgorithm {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateDbaasServiceOpensearchReqIndexMinusTemplate returns new OptUpdateDbaasServiceOpensearchReqIndexMinusTemplate with value set to v.
func NewOptUpdateDbaasServiceOpensearchReqIndexMinusTemplate(v UpdateDbaasServiceOpensearchReqIndexMinusTemplate) OptUpdateDbaasServiceOpensearchReqIndexMinusTemplate {
	return OptUpdateDbaasServiceOpensearchReqIndexMinusTemplate{
		Value: v,
		Set:   true,
	}
}

// OptUpdateDbaasServiceOpensearchReqIndexMinusTemplate is optional UpdateDbaasServiceOpensearchReqIndexMinusTemplate.
type OptUpdateDbaasServiceOpensearchReqIndexMinusTemplate struct {
	Value UpdateDbaasServiceOpensearchReqIndexMinusTemplate
	Set   bool
}

// IsSet returns true if OptUpdateDbaasServiceOpensearchReqIndexMinusTemplate was set.
func (o OptUpdateDbaasServiceOpensearchReqIndexMinusTemplate) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateDbaasServiceOpensearchReqIndexMinusTemplate) Reset() {
	var v UpdateDbaasServiceOpensearchReqIndexMinusTemplate
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateDbaasServiceOpensearchReqIndexMinusTemplate) SetTo(v UpdateDbaasServiceOpensearchReqIndexMinusTemplate) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateDbaasServiceOpensearchReqIndexMinusTemplate) Get() (v UpdateDbaasServiceOpensearchReqIndexMinusTemplate, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateDbaasServiceOpensearchReqIndexMinusTemplate) Or(d UpdateDbaasServiceOpensearchReqIndexMinusTemplate) UpdateDbaasServiceOpensearchReqIndexMinusTemplate {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateDbaasServiceOpensearchReqMaintenance returns new OptUpdateDbaasServiceOpensearchReqMaintenance with value set to v.
func NewOptUpdateDbaasServiceOpensearchReqMaintenance(v UpdateDbaasServiceOpensearchReqMaintenance) OptUpdateDbaasServiceOpensearchReqMaintenance {
	return OptUpdateDbaasServiceOpensearchReqMaintenance{
		Value: v,
		Set:   true,
	}
}

// OptUpdateDbaasServiceOpensearchReqMaintenance is optional UpdateDbaasServiceOpensearchReqMaintenance.
type OptUpdateDbaasServiceOpensearchReqMaintenance struct {
	Value UpdateDbaasServiceOpensearchReqMaintenance
	Set   bool
}

// IsSet returns true if OptUpdateDbaasServiceOpensearchReqMaintenance was set.
func (o OptUpdateDbaasServiceOpensearchReqMaintenance) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateDbaasServiceOpensearchReqMaintenance) Reset() {
	var v UpdateDbaasServiceOpensearchReqMaintenance
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateDbaasServiceOpensearchReqMaintenance) SetTo(v UpdateDbaasServiceOpensearchReqMaintenance) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateDbaasServiceOpensearchReqMaintenance) Get() (v UpdateDbaasServiceOpensearchReqMaintenance, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateDbaasServiceOpensearchReqMaintenance) Or(d UpdateDbaasServiceOpensearchReqMaintenance) UpdateDbaasServiceOpensearchReqMaintenance {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateDbaasServiceOpensearchReqOpensearchMinusDashboards returns new OptUpdateDbaasServiceOpensearchReqOpensearchMinusDashboards with value set to v.
func NewOptUpdateDbaasServiceOpensearchReqOpensearchMinusDashboards(v UpdateDbaasServiceOpensearchReqOpensearchMinusDashboards) OptUpdateDbaasServiceOpensearchReqOpensearchMinusDashboards {
	return OptUpdateDbaasServiceOpensearchReqOpensearchMinusDashboards{
		Value: v,
		Set:   true,
	}
}

// OptUpdateDbaasServiceOpensearchReqOpensearchMinusDashboards is optional UpdateDbaasServiceOpensearchReqOpensearchMinusDashboards.
type OptUpdateDbaasServiceOpensearchReqOpensearchMinusDashboards struct {
	Value UpdateDbaasServiceOpensearchReqOpensearchMinusDashboards
	Set   bool
}

// IsSet returns true if OptUpdateDbaasServiceOpensearchReqOpensearchMinusDashboards was set.
func (o OptUpdateDbaasServiceOpensearchReqOpensearchMinusDashboards) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateDbaasServiceOpensearchReqOpensearchMinusDashboards) Reset() {
	var v UpdateDbaasServiceOpensearchReqOpensearchMinusDashboards
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateDbaasServiceOpensearchReqOpensearchMinusDashboards) SetTo(v UpdateDbaasServiceOpensearchReqOpensearchMinusDashboards) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateDbaasServiceOpensearchReqOpensearchMinusDashboards) Get() (v UpdateDbaasServiceOpensearchReqOpensearchMinusDashboards, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateDbaasServiceOpensearchReqOpensearchMinusDashboards) Or(d UpdateDbaasServiceOpensearchReqOpensearchMinusDashboards) UpdateDbaasServiceOpensearchReqOpensearchMinusDashboards {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateDbaasServicePgReqBackupMinusSchedule returns new OptUpdateDbaasServicePgReqBackupMinusSchedule with value set to v.
func NewOptUpdateDbaasServicePgReqBackupMinusSchedule(v UpdateDbaasServicePgReqBackupMinusSchedule) OptUpdateDbaasServicePgReqBackupMinusSchedule {
	return OptUpdateDbaasServicePgReqBackupMinusSchedule{
		Value: v,
		Set:   true,
	}
}

// OptUpdateDbaasServicePgReqBackupMinusSchedule is optional UpdateDbaasServicePgReqBackupMinusSchedule.
type OptUpdateDbaasServicePgReqBackupMinusSchedule struct {
	Value UpdateDbaasServicePgReqBackupMinusSchedule
	Set   bool
}

// IsSet returns true if OptUpdateDbaasServicePgReqBackupMinusSchedule was set.
func (o OptUpdateDbaasServicePgReqBackupMinusSchedule) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateDbaasServicePgReqBackupMinusSchedule) Reset() {
	var v UpdateDbaasServicePgReqBackupMinusSchedule
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateDbaasServicePgReqBackupMinusSchedule) SetTo(v UpdateDbaasServicePgReqBackupMinusSchedule) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateDbaasServicePgReqBackupMinusSchedule) Get() (v UpdateDbaasServicePgReqBackupMinusSchedule, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateDbaasServicePgReqBackupMinusSchedule) Or(d UpdateDbaasServicePgReqBackupMinusSchedule) UpdateDbaasServicePgReqBackupMinusSchedule {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateDbaasServicePgReqMaintenance returns new OptUpdateDbaasServicePgReqMaintenance with value set to v.
func NewOptUpdateDbaasServicePgReqMaintenance(v UpdateDbaasServicePgReqMaintenance) OptUpdateDbaasServicePgReqMaintenance {
	return OptUpdateDbaasServicePgReqMaintenance{
		Value: v,
		Set:   true,
	}
}

// OptUpdateDbaasServicePgReqMaintenance is optional UpdateDbaasServicePgReqMaintenance.
type OptUpdateDbaasServicePgReqMaintenance struct {
	Value UpdateDbaasServicePgReqMaintenance
	Set   bool
}

// IsSet returns true if OptUpdateDbaasServicePgReqMaintenance was set.
func (o OptUpdateDbaasServicePgReqMaintenance) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateDbaasServicePgReqMaintenance) Reset() {
	var v UpdateDbaasServicePgReqMaintenance
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateDbaasServicePgReqMaintenance) SetTo(v UpdateDbaasServicePgReqMaintenance) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateDbaasServicePgReqMaintenance) Get() (v UpdateDbaasServicePgReqMaintenance, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateDbaasServicePgReqMaintenance) Or(d UpdateDbaasServicePgReqMaintenance) UpdateDbaasServicePgReqMaintenance {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateDbaasServicePgReqMigration returns new OptUpdateDbaasServicePgReqMigration with value set to v.
func NewOptUpdateDbaasServicePgReqMigration(v UpdateDbaasServicePgReqMigration) OptUpdateDbaasServicePgReqMigration {
	return OptUpdateDbaasServicePgReqMigration{
		Value: v,
		Set:   true,
	}
}

// OptUpdateDbaasServicePgReqMigration is optional UpdateDbaasServicePgReqMigration.
type OptUpdateDbaasServicePgReqMigration struct {
	Value UpdateDbaasServicePgReqMigration
	Set   bool
}

// IsSet returns true if OptUpdateDbaasServicePgReqMigration was set.
func (o OptUpdateDbaasServicePgReqMigration) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateDbaasServicePgReqMigration) Reset() {
	var v UpdateDbaasServicePgReqMigration
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateDbaasServicePgReqMigration) SetTo(v UpdateDbaasServicePgReqMigration) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateDbaasServicePgReqMigration) Get() (v UpdateDbaasServicePgReqMigration, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateDbaasServicePgReqMigration) Or(d UpdateDbaasServicePgReqMigration) UpdateDbaasServicePgReqMigration {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateDbaasServiceRedisReqMaintenance returns new OptUpdateDbaasServiceRedisReqMaintenance with value set to v.
func NewOptUpdateDbaasServiceRedisReqMaintenance(v UpdateDbaasServiceRedisReqMaintenance) OptUpdateDbaasServiceRedisReqMaintenance {
	return OptUpdateDbaasServiceRedisReqMaintenance{
		Value: v,
		Set:   true,
	}
}

// OptUpdateDbaasServiceRedisReqMaintenance is optional UpdateDbaasServiceRedisReqMaintenance.
type OptUpdateDbaasServiceRedisReqMaintenance struct {
	Value UpdateDbaasServiceRedisReqMaintenance
	Set   bool
}

// IsSet returns true if OptUpdateDbaasServiceRedisReqMaintenance was set.
func (o OptUpdateDbaasServiceRedisReqMaintenance) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateDbaasServiceRedisReqMaintenance) Reset() {
	var v UpdateDbaasServiceRedisReqMaintenance
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateDbaasServiceRedisReqMaintenance) SetTo(v UpdateDbaasServiceRedisReqMaintenance) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateDbaasServiceRedisReqMaintenance) Get() (v UpdateDbaasServiceRedisReqMaintenance, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateDbaasServiceRedisReqMaintenance) Or(d UpdateDbaasServiceRedisReqMaintenance) UpdateDbaasServiceRedisReqMaintenance {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateDbaasServiceRedisReqMigration returns new OptUpdateDbaasServiceRedisReqMigration with value set to v.
func NewOptUpdateDbaasServiceRedisReqMigration(v UpdateDbaasServiceRedisReqMigration) OptUpdateDbaasServiceRedisReqMigration {
	return OptUpdateDbaasServiceRedisReqMigration{
		Value: v,
		Set:   true,
	}
}

// OptUpdateDbaasServiceRedisReqMigration is optional UpdateDbaasServiceRedisReqMigration.
type OptUpdateDbaasServiceRedisReqMigration struct {
	Value UpdateDbaasServiceRedisReqMigration
	Set   bool
}

// IsSet returns true if OptUpdateDbaasServiceRedisReqMigration was set.
func (o OptUpdateDbaasServiceRedisReqMigration) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateDbaasServiceRedisReqMigration) Reset() {
	var v UpdateDbaasServiceRedisReqMigration
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateDbaasServiceRedisReqMigration) SetTo(v UpdateDbaasServiceRedisReqMigration) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateDbaasServiceRedisReqMigration) Get() (v UpdateDbaasServiceRedisReqMigration, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateDbaasServiceRedisReqMigration) Or(d UpdateDbaasServiceRedisReqMigration) UpdateDbaasServiceRedisReqMigration {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateLoadBalancerServiceReqProtocol returns new OptUpdateLoadBalancerServiceReqProtocol with value set to v.
func NewOptUpdateLoadBalancerServiceReqProtocol(v UpdateLoadBalancerServiceReqProtocol) OptUpdateLoadBalancerServiceReqProtocol {
	return OptUpdateLoadBalancerServiceReqProtocol{
		Value: v,
		Set:   true,
	}
}

// OptUpdateLoadBalancerServiceReqProtocol is optional UpdateLoadBalancerServiceReqProtocol.
type OptUpdateLoadBalancerServiceReqProtocol struct {
	Value UpdateLoadBalancerServiceReqProtocol
	Set   bool
}

// IsSet returns true if OptUpdateLoadBalancerServiceReqProtocol was set.
func (o OptUpdateLoadBalancerServiceReqProtocol) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateLoadBalancerServiceReqProtocol) Reset() {
	var v UpdateLoadBalancerServiceReqProtocol
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateLoadBalancerServiceReqProtocol) SetTo(v UpdateLoadBalancerServiceReqProtocol) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateLoadBalancerServiceReqProtocol) Get() (v UpdateLoadBalancerServiceReqProtocol, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateLoadBalancerServiceReqProtocol) Or(d UpdateLoadBalancerServiceReqProtocol) UpdateLoadBalancerServiceReqProtocol {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateLoadBalancerServiceReqStrategy returns new OptUpdateLoadBalancerServiceReqStrategy with value set to v.
func NewOptUpdateLoadBalancerServiceReqStrategy(v UpdateLoadBalancerServiceReqStrategy) OptUpdateLoadBalancerServiceReqStrategy {
	return OptUpdateLoadBalancerServiceReqStrategy{
		Value: v,
		Set:   true,
	}
}

// OptUpdateLoadBalancerServiceReqStrategy is optional UpdateLoadBalancerServiceReqStrategy.
type OptUpdateLoadBalancerServiceReqStrategy struct {
	Value UpdateLoadBalancerServiceReqStrategy
	Set   bool
}

// IsSet returns true if OptUpdateLoadBalancerServiceReqStrategy was set.
func (o OptUpdateLoadBalancerServiceReqStrategy) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateLoadBalancerServiceReqStrategy) Reset() {
	var v UpdateLoadBalancerServiceReqStrategy
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateLoadBalancerServiceReqStrategy) SetTo(v UpdateLoadBalancerServiceReqStrategy) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateLoadBalancerServiceReqStrategy) Get() (v UpdateLoadBalancerServiceReqStrategy, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateLoadBalancerServiceReqStrategy) Or(d UpdateLoadBalancerServiceReqStrategy) UpdateLoadBalancerServiceReqStrategy {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptZoneName returns new OptZoneName with value set to v.
func NewOptZoneName(v ZoneName) OptZoneName {
	return OptZoneName{
		Value: v,
		Set:   true,
	}
}

// OptZoneName is optional ZoneName.
type OptZoneName struct {
	Value ZoneName
	Set   bool
}

// IsSet returns true if OptZoneName was set.
func (o OptZoneName) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptZoneName) Reset() {
	var v ZoneName
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptZoneName) SetTo(v ZoneName) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptZoneName) Get() (v ZoneName, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptZoneName) Or(d ZoneName) ZoneName {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// Private Network.
// Ref: #/components/schemas/private-network
type PrivateNetwork struct {
	// Private Network ID.
	ID OptUUID `json:"id"`
	// Private Network name.
	Name OptString `json:"name"`
	// Private Network description.
	Description OptString `json:"description"`
	// Private Network netmask.
	Netmask OptIPv4 `json:"netmask"`
	// Private Network start IP address.
	StartMinusIP OptIPv4 `json:"start-ip"`
	// Private Network end IP address.
	EndMinusIP OptIPv4 `json:"end-ip"`
	// Private Network leased IP addresses.
	Leases []PrivateNetworkLease `json:"leases"`
	// Private Network labels.
	Labels OptLabels `json:"labels"`
}

// GetID returns the value of ID.
func (s *PrivateNetwork) GetID() OptUUID {
	return s.ID
}

// GetName returns the value of Name.
func (s *PrivateNetwork) GetName() OptString {
	return s.Name
}

// GetDescription returns the value of Description.
func (s *PrivateNetwork) GetDescription() OptString {
	return s.Description
}

// GetNetmask returns the value of Netmask.
func (s *PrivateNetwork) GetNetmask() OptIPv4 {
	return s.Netmask
}

// GetStartMinusIP returns the value of StartMinusIP.
func (s *PrivateNetwork) GetStartMinusIP() OptIPv4 {
	return s.StartMinusIP
}

// GetEndMinusIP returns the value of EndMinusIP.
func (s *PrivateNetwork) GetEndMinusIP() OptIPv4 {
	return s.EndMinusIP
}

// GetLeases returns the value of Leases.
func (s *PrivateNetwork) GetLeases() []PrivateNetworkLease {
	return s.Leases
}

// GetLabels returns the value of Labels.
func (s *PrivateNetwork) GetLabels() OptLabels {
	return s.Labels
}

// SetID sets the value of ID.
func (s *PrivateNetwork) SetID(val OptUUID) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *PrivateNetwork) SetName(val OptString) {
	s.Name = val
}

// SetDescription sets the value of Description.
func (s *PrivateNetwork) SetDescription(val OptString) {
	s.Description = val
}

// SetNetmask sets the value of Netmask.
func (s *PrivateNetwork) SetNetmask(val OptIPv4) {
	s.Netmask = val
}

// SetStartMinusIP sets the value of StartMinusIP.
func (s *PrivateNetwork) SetStartMinusIP(val OptIPv4) {
	s.StartMinusIP = val
}

// SetEndMinusIP sets the value of EndMinusIP.
func (s *PrivateNetwork) SetEndMinusIP(val OptIPv4) {
	s.EndMinusIP = val
}

// SetLeases sets the value of Leases.
func (s *PrivateNetwork) SetLeases(val []PrivateNetworkLease) {
	s.Leases = val
}

// SetLabels sets the value of Labels.
func (s *PrivateNetwork) SetLabels(val OptLabels) {
	s.Labels = val
}

// Private Network leased IP address.
// Ref: #/components/schemas/private-network-lease
type PrivateNetworkLease struct {
	// Private Network IP address.
	IP OptIPv4 `json:"ip"`
	// Attached instance ID.
	InstanceMinusID OptUUID `json:"instance-id"`
}

// GetIP returns the value of IP.
func (s *PrivateNetworkLease) GetIP() OptIPv4 {
	return s.IP
}

// GetInstanceMinusID returns the value of InstanceMinusID.
func (s *PrivateNetworkLease) GetInstanceMinusID() OptUUID {
	return s.InstanceMinusID
}

// SetIP sets the value of IP.
func (s *PrivateNetworkLease) SetIP(val OptIPv4) {
	s.IP = val
}

// SetInstanceMinusID sets the value of InstanceMinusID.
func (s *PrivateNetworkLease) SetInstanceMinusID(val OptUUID) {
	s.InstanceMinusID = val
}

type PromoteSnapshotToTemplateReq struct {
	// Template name.
	Name string `json:"name"`
	// Template description.
	Description OptString `json:"description"`
	// Template default user.
	DefaultMinusUser OptString `json:"default-user"`
	// Enable SSH key-based login in the template.
	SSHMinusKeyMinusEnabled OptBool `json:"ssh-key-enabled"`
	// Enable password-based login in the template.
	PasswordMinusEnabled OptBool `json:"password-enabled"`
}

// GetName returns the value of Name.
func (s *PromoteSnapshotToTemplateReq) GetName() string {
	return s.Name
}

// GetDescription returns the value of Description.
func (s *PromoteSnapshotToTemplateReq) GetDescription() OptString {
	return s.Description
}

// GetDefaultMinusUser returns the value of DefaultMinusUser.
func (s *PromoteSnapshotToTemplateReq) GetDefaultMinusUser() OptString {
	return s.DefaultMinusUser
}

// GetSSHMinusKeyMinusEnabled returns the value of SSHMinusKeyMinusEnabled.
func (s *PromoteSnapshotToTemplateReq) GetSSHMinusKeyMinusEnabled() OptBool {
	return s.SSHMinusKeyMinusEnabled
}

// GetPasswordMinusEnabled returns the value of PasswordMinusEnabled.
func (s *PromoteSnapshotToTemplateReq) GetPasswordMinusEnabled() OptBool {
	return s.PasswordMinusEnabled
}

// SetName sets the value of Name.
func (s *PromoteSnapshotToTemplateReq) SetName(val string) {
	s.Name = val
}

// SetDescription sets the value of Description.
func (s *PromoteSnapshotToTemplateReq) SetDescription(val OptString) {
	s.Description = val
}

// SetDefaultMinusUser sets the value of DefaultMinusUser.
func (s *PromoteSnapshotToTemplateReq) SetDefaultMinusUser(val OptString) {
	s.DefaultMinusUser = val
}

// SetSSHMinusKeyMinusEnabled sets the value of SSHMinusKeyMinusEnabled.
func (s *PromoteSnapshotToTemplateReq) SetSSHMinusKeyMinusEnabled(val OptBool) {
	s.SSHMinusKeyMinusEnabled = val
}

// SetPasswordMinusEnabled sets the value of PasswordMinusEnabled.
func (s *PromoteSnapshotToTemplateReq) SetPasswordMinusEnabled(val OptBool) {
	s.PasswordMinusEnabled = val
}

// Ref: #/components/schemas/public-ip-assignment
type PublicIPAssignment string

const (
	PublicIPAssignmentInet4 PublicIPAssignment = "inet4"
	PublicIPAssignmentDual  PublicIPAssignment = "dual"
	PublicIPAssignmentNone  PublicIPAssignment = "none"
)

// MarshalText implements encoding.TextMarshaler.
func (s PublicIPAssignment) MarshalText() ([]byte, error) {
	switch s {
	case PublicIPAssignmentInet4:
		return []byte(s), nil
	case PublicIPAssignmentDual:
		return []byte(s), nil
	case PublicIPAssignmentNone:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *PublicIPAssignment) UnmarshalText(data []byte) error {
	switch PublicIPAssignment(data) {
	case PublicIPAssignmentInet4:
		*s = PublicIPAssignmentInet4
		return nil
	case PublicIPAssignmentDual:
		*s = PublicIPAssignmentDual
		return nil
	case PublicIPAssignmentNone:
		*s = PublicIPAssignmentNone
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Organization Quota.
// Ref: #/components/schemas/quota
type Quota struct {
	// Resource Name.
	Resource OptString `json:"resource"`
	// Resource Usage.
	Usage OptInt64 `json:"usage"`
	// Resource Limit. -1 for Unlimited.
	Limit OptInt64 `json:"limit"`
}

// GetResource returns the value of Resource.
func (s *Quota) GetResource() OptString {
	return s.Resource
}

// GetUsage returns the value of Usage.
func (s *Quota) GetUsage() OptInt64 {
	return s.Usage
}

// GetLimit returns the value of Limit.
func (s *Quota) GetLimit() OptInt64 {
	return s.Limit
}

// SetResource sets the value of Resource.
func (s *Quota) SetResource(val OptString) {
	s.Resource = val
}

// SetUsage sets the value of Usage.
func (s *Quota) SetUsage(val OptInt64) {
	s.Usage = val
}

// SetLimit sets the value of Limit.
func (s *Quota) SetLimit(val OptInt64) {
	s.Limit = val
}

type RegisterSSHKeyReq struct {
	// Private Network name.
	Name string `json:"name"`
	// Public key value.
	PublicMinusKey string `json:"public-key"`
}

// GetName returns the value of Name.
func (s *RegisterSSHKeyReq) GetName() string {
	return s.Name
}

// GetPublicMinusKey returns the value of PublicMinusKey.
func (s *RegisterSSHKeyReq) GetPublicMinusKey() string {
	return s.PublicMinusKey
}

// SetName sets the value of Name.
func (s *RegisterSSHKeyReq) SetName(val string) {
	s.Name = val
}

// SetPublicMinusKey sets the value of PublicMinusKey.
func (s *RegisterSSHKeyReq) SetPublicMinusKey(val string) {
	s.PublicMinusKey = val
}

type RegisterTemplateReq struct {
	// Template maintainer.
	Maintainer OptString `json:"maintainer"`
	// Template description.
	Description OptString `json:"description"`
	// Enable SSH key-based login.
	SSHMinusKeyMinusEnabled bool `json:"ssh-key-enabled"`
	// Template name.
	Name string `json:"name"`
	// Template default user.
	DefaultMinusUser OptString `json:"default-user"`
	// Template size.
	Size OptInt64 `json:"size"`
	// Enable password-based login.
	PasswordMinusEnabled bool `json:"password-enabled"`
	// Template build.
	Build OptString `json:"build"`
	// Template MD5 checksum.
	Checksum string `json:"checksum"`
	// Boot mode (default: legacy).
	BootMinusMode OptRegisterTemplateReqBootMinusMode `json:"boot-mode"`
	// Template source URL.
	URL string `json:"url"`
	// Template version.
	Version OptString `json:"version"`
}

// GetMaintainer returns the value of Maintainer.
func (s *RegisterTemplateReq) GetMaintainer() OptString {
	return s.Maintainer
}

// GetDescription returns the value of Description.
func (s *RegisterTemplateReq) GetDescription() OptString {
	return s.Description
}

// GetSSHMinusKeyMinusEnabled returns the value of SSHMinusKeyMinusEnabled.
func (s *RegisterTemplateReq) GetSSHMinusKeyMinusEnabled() bool {
	return s.SSHMinusKeyMinusEnabled
}

// GetName returns the value of Name.
func (s *RegisterTemplateReq) GetName() string {
	return s.Name
}

// GetDefaultMinusUser returns the value of DefaultMinusUser.
func (s *RegisterTemplateReq) GetDefaultMinusUser() OptString {
	return s.DefaultMinusUser
}

// GetSize returns the value of Size.
func (s *RegisterTemplateReq) GetSize() OptInt64 {
	return s.Size
}

// GetPasswordMinusEnabled returns the value of PasswordMinusEnabled.
func (s *RegisterTemplateReq) GetPasswordMinusEnabled() bool {
	return s.PasswordMinusEnabled
}

// GetBuild returns the value of Build.
func (s *RegisterTemplateReq) GetBuild() OptString {
	return s.Build
}

// GetChecksum returns the value of Checksum.
func (s *RegisterTemplateReq) GetChecksum() string {
	return s.Checksum
}

// GetBootMinusMode returns the value of BootMinusMode.
func (s *RegisterTemplateReq) GetBootMinusMode() OptRegisterTemplateReqBootMinusMode {
	return s.BootMinusMode
}

// GetURL returns the value of URL.
func (s *RegisterTemplateReq) GetURL() string {
	return s.URL
}

// GetVersion returns the value of Version.
func (s *RegisterTemplateReq) GetVersion() OptString {
	return s.Version
}

// SetMaintainer sets the value of Maintainer.
func (s *RegisterTemplateReq) SetMaintainer(val OptString) {
	s.Maintainer = val
}

// SetDescription sets the value of Description.
func (s *RegisterTemplateReq) SetDescription(val OptString) {
	s.Description = val
}

// SetSSHMinusKeyMinusEnabled sets the value of SSHMinusKeyMinusEnabled.
func (s *RegisterTemplateReq) SetSSHMinusKeyMinusEnabled(val bool) {
	s.SSHMinusKeyMinusEnabled = val
}

// SetName sets the value of Name.
func (s *RegisterTemplateReq) SetName(val string) {
	s.Name = val
}

// SetDefaultMinusUser sets the value of DefaultMinusUser.
func (s *RegisterTemplateReq) SetDefaultMinusUser(val OptString) {
	s.DefaultMinusUser = val
}

// SetSize sets the value of Size.
func (s *RegisterTemplateReq) SetSize(val OptInt64) {
	s.Size = val
}

// SetPasswordMinusEnabled sets the value of PasswordMinusEnabled.
func (s *RegisterTemplateReq) SetPasswordMinusEnabled(val bool) {
	s.PasswordMinusEnabled = val
}

// SetBuild sets the value of Build.
func (s *RegisterTemplateReq) SetBuild(val OptString) {
	s.Build = val
}

// SetChecksum sets the value of Checksum.
func (s *RegisterTemplateReq) SetChecksum(val string) {
	s.Checksum = val
}

// SetBootMinusMode sets the value of BootMinusMode.
func (s *RegisterTemplateReq) SetBootMinusMode(val OptRegisterTemplateReqBootMinusMode) {
	s.BootMinusMode = val
}

// SetURL sets the value of URL.
func (s *RegisterTemplateReq) SetURL(val string) {
	s.URL = val
}

// SetVersion sets the value of Version.
func (s *RegisterTemplateReq) SetVersion(val OptString) {
	s.Version = val
}

// Boot mode (default: legacy).
type RegisterTemplateReqBootMinusMode string

const (
	RegisterTemplateReqBootMinusModeLegacy RegisterTemplateReqBootMinusMode = "legacy"
	RegisterTemplateReqBootMinusModeUefi   RegisterTemplateReqBootMinusMode = "uefi"
)

// MarshalText implements encoding.TextMarshaler.
func (s RegisterTemplateReqBootMinusMode) MarshalText() ([]byte, error) {
	switch s {
	case RegisterTemplateReqBootMinusModeLegacy:
		return []byte(s), nil
	case RegisterTemplateReqBootMinusModeUefi:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *RegisterTemplateReqBootMinusMode) UnmarshalText(data []byte) error {
	switch RegisterTemplateReqBootMinusMode(data) {
	case RegisterTemplateReqBootMinusModeLegacy:
		*s = RegisterTemplateReqBootMinusModeLegacy
		return nil
	case RegisterTemplateReqBootMinusModeUefi:
		*s = RegisterTemplateReqBootMinusModeUefi
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type RemoveExternalSourceFromSecurityGroupReq struct {
	// CIDR-formatted network to remove.
	Cidr string `json:"cidr"`
}

// GetCidr returns the value of Cidr.
func (s *RemoveExternalSourceFromSecurityGroupReq) GetCidr() string {
	return s.Cidr
}

// SetCidr sets the value of Cidr.
func (s *RemoveExternalSourceFromSecurityGroupReq) SetCidr(val string) {
	s.Cidr = val
}

type RemoveInstanceProtectionOK struct{}

type ResetDbaasKafkaUserPasswordReq struct {
	// New password.
	Password OptDbaasUserPassword `json:"password"`
}

// GetPassword returns the value of Password.
func (s *ResetDbaasKafkaUserPasswordReq) GetPassword() OptDbaasUserPassword {
	return s.Password
}

// SetPassword sets the value of Password.
func (s *ResetDbaasKafkaUserPasswordReq) SetPassword(val OptDbaasUserPassword) {
	s.Password = val
}

type ResetDbaasPostgresUserPasswordReq struct {
	// New password.
	Password OptDbaasUserPassword `json:"password"`
}

// GetPassword returns the value of Password.
func (s *ResetDbaasPostgresUserPasswordReq) GetPassword() OptDbaasUserPassword {
	return s.Password
}

// SetPassword sets the value of Password.
func (s *ResetDbaasPostgresUserPasswordReq) SetPassword(val OptDbaasUserPassword) {
	s.Password = val
}

type ResetElasticIPFieldField string

const (
	ResetElasticIPFieldFieldDescription ResetElasticIPFieldField = "description"
)

// MarshalText implements encoding.TextMarshaler.
func (s ResetElasticIPFieldField) MarshalText() ([]byte, error) {
	switch s {
	case ResetElasticIPFieldFieldDescription:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *ResetElasticIPFieldField) UnmarshalText(data []byte) error {
	switch ResetElasticIPFieldField(data) {
	case ResetElasticIPFieldFieldDescription:
		*s = ResetElasticIPFieldFieldDescription
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type ResetInstanceFieldField string

const (
	ResetInstanceFieldFieldLabels ResetInstanceFieldField = "labels"
)

// MarshalText implements encoding.TextMarshaler.
func (s ResetInstanceFieldField) MarshalText() ([]byte, error) {
	switch s {
	case ResetInstanceFieldFieldLabels:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *ResetInstanceFieldField) UnmarshalText(data []byte) error {
	switch ResetInstanceFieldField(data) {
	case ResetInstanceFieldFieldLabels:
		*s = ResetInstanceFieldFieldLabels
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type ResetInstancePoolFieldField string

const (
	ResetInstancePoolFieldFieldAntiAffinityGroups ResetInstancePoolFieldField = "anti-affinity-groups"
	ResetInstancePoolFieldFieldDescription        ResetInstancePoolFieldField = "description"
	ResetInstancePoolFieldFieldLabels             ResetInstancePoolFieldField = "labels"
	ResetInstancePoolFieldFieldSecurityGroups     ResetInstancePoolFieldField = "security-groups"
	ResetInstancePoolFieldFieldElasticIps         ResetInstancePoolFieldField = "elastic-ips"
	ResetInstancePoolFieldFieldPrivateNetworks    ResetInstancePoolFieldField = "private-networks"
	ResetInstancePoolFieldFieldSSHKey             ResetInstancePoolFieldField = "ssh-key"
	ResetInstancePoolFieldFieldUserData           ResetInstancePoolFieldField = "user-data"
	ResetInstancePoolFieldFieldDeployTarget       ResetInstancePoolFieldField = "deploy-target"
	ResetInstancePoolFieldFieldIpv6Enabled        ResetInstancePoolFieldField = "ipv6-enabled"
)

// MarshalText implements encoding.TextMarshaler.
func (s ResetInstancePoolFieldField) MarshalText() ([]byte, error) {
	switch s {
	case ResetInstancePoolFieldFieldAntiAffinityGroups:
		return []byte(s), nil
	case ResetInstancePoolFieldFieldDescription:
		return []byte(s), nil
	case ResetInstancePoolFieldFieldLabels:
		return []byte(s), nil
	case ResetInstancePoolFieldFieldSecurityGroups:
		return []byte(s), nil
	case ResetInstancePoolFieldFieldElasticIps:
		return []byte(s), nil
	case ResetInstancePoolFieldFieldPrivateNetworks:
		return []byte(s), nil
	case ResetInstancePoolFieldFieldSSHKey:
		return []byte(s), nil
	case ResetInstancePoolFieldFieldUserData:
		return []byte(s), nil
	case ResetInstancePoolFieldFieldDeployTarget:
		return []byte(s), nil
	case ResetInstancePoolFieldFieldIpv6Enabled:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *ResetInstancePoolFieldField) UnmarshalText(data []byte) error {
	switch ResetInstancePoolFieldField(data) {
	case ResetInstancePoolFieldFieldAntiAffinityGroups:
		*s = ResetInstancePoolFieldFieldAntiAffinityGroups
		return nil
	case ResetInstancePoolFieldFieldDescription:
		*s = ResetInstancePoolFieldFieldDescription
		return nil
	case ResetInstancePoolFieldFieldLabels:
		*s = ResetInstancePoolFieldFieldLabels
		return nil
	case ResetInstancePoolFieldFieldSecurityGroups:
		*s = ResetInstancePoolFieldFieldSecurityGroups
		return nil
	case ResetInstancePoolFieldFieldElasticIps:
		*s = ResetInstancePoolFieldFieldElasticIps
		return nil
	case ResetInstancePoolFieldFieldPrivateNetworks:
		*s = ResetInstancePoolFieldFieldPrivateNetworks
		return nil
	case ResetInstancePoolFieldFieldSSHKey:
		*s = ResetInstancePoolFieldFieldSSHKey
		return nil
	case ResetInstancePoolFieldFieldUserData:
		*s = ResetInstancePoolFieldFieldUserData
		return nil
	case ResetInstancePoolFieldFieldDeployTarget:
		*s = ResetInstancePoolFieldFieldDeployTarget
		return nil
	case ResetInstancePoolFieldFieldIpv6Enabled:
		*s = ResetInstancePoolFieldFieldIpv6Enabled
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type ResetInstanceReq struct {
	// Template to recreate Instance from.
	Template OptTemplate `json:"template"`
	// Instance disk size in GB.
	DiskMinusSize OptInt64 `json:"disk-size"`
}

// GetTemplate returns the value of Template.
func (s *ResetInstanceReq) GetTemplate() OptTemplate {
	return s.Template
}

// GetDiskMinusSize returns the value of DiskMinusSize.
func (s *ResetInstanceReq) GetDiskMinusSize() OptInt64 {
	return s.DiskMinusSize
}

// SetTemplate sets the value of Template.
func (s *ResetInstanceReq) SetTemplate(val OptTemplate) {
	s.Template = val
}

// SetDiskMinusSize sets the value of DiskMinusSize.
func (s *ResetInstanceReq) SetDiskMinusSize(val OptInt64) {
	s.DiskMinusSize = val
}

type ResetLoadBalancerFieldField string

const (
	ResetLoadBalancerFieldFieldDescription ResetLoadBalancerFieldField = "description"
	ResetLoadBalancerFieldFieldLabels      ResetLoadBalancerFieldField = "labels"
)

// MarshalText implements encoding.TextMarshaler.
func (s ResetLoadBalancerFieldField) MarshalText() ([]byte, error) {
	switch s {
	case ResetLoadBalancerFieldFieldDescription:
		return []byte(s), nil
	case ResetLoadBalancerFieldFieldLabels:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *ResetLoadBalancerFieldField) UnmarshalText(data []byte) error {
	switch ResetLoadBalancerFieldField(data) {
	case ResetLoadBalancerFieldFieldDescription:
		*s = ResetLoadBalancerFieldFieldDescription
		return nil
	case ResetLoadBalancerFieldFieldLabels:
		*s = ResetLoadBalancerFieldFieldLabels
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type ResetLoadBalancerServiceFieldField string

const (
	ResetLoadBalancerServiceFieldFieldDescription ResetLoadBalancerServiceFieldField = "description"
)

// MarshalText implements encoding.TextMarshaler.
func (s ResetLoadBalancerServiceFieldField) MarshalText() ([]byte, error) {
	switch s {
	case ResetLoadBalancerServiceFieldFieldDescription:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *ResetLoadBalancerServiceFieldField) UnmarshalText(data []byte) error {
	switch ResetLoadBalancerServiceFieldField(data) {
	case ResetLoadBalancerServiceFieldFieldDescription:
		*s = ResetLoadBalancerServiceFieldFieldDescription
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type ResetPrivateNetworkFieldField string

const (
	ResetPrivateNetworkFieldFieldLabels ResetPrivateNetworkFieldField = "labels"
)

// MarshalText implements encoding.TextMarshaler.
func (s ResetPrivateNetworkFieldField) MarshalText() ([]byte, error) {
	switch s {
	case ResetPrivateNetworkFieldFieldLabels:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *ResetPrivateNetworkFieldField) UnmarshalText(data []byte) error {
	switch ResetPrivateNetworkFieldField(data) {
	case ResetPrivateNetworkFieldFieldLabels:
		*s = ResetPrivateNetworkFieldFieldLabels
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type ResetSksClusterFieldField string

const (
	ResetSksClusterFieldFieldDescription ResetSksClusterFieldField = "description"
	ResetSksClusterFieldFieldLabels      ResetSksClusterFieldField = "labels"
)

// MarshalText implements encoding.TextMarshaler.
func (s ResetSksClusterFieldField) MarshalText() ([]byte, error) {
	switch s {
	case ResetSksClusterFieldFieldDescription:
		return []byte(s), nil
	case ResetSksClusterFieldFieldLabels:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *ResetSksClusterFieldField) UnmarshalText(data []byte) error {
	switch ResetSksClusterFieldField(data) {
	case ResetSksClusterFieldFieldDescription:
		*s = ResetSksClusterFieldFieldDescription
		return nil
	case ResetSksClusterFieldFieldLabels:
		*s = ResetSksClusterFieldFieldLabels
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type ResetSksNodepoolFieldField string

const (
	ResetSksNodepoolFieldFieldAntiAffinityGroups ResetSksNodepoolFieldField = "anti-affinity-groups"
	ResetSksNodepoolFieldFieldDescription        ResetSksNodepoolFieldField = "description"
	ResetSksNodepoolFieldFieldLabels             ResetSksNodepoolFieldField = "labels"
	ResetSksNodepoolFieldFieldSecurityGroups     ResetSksNodepoolFieldField = "security-groups"
	ResetSksNodepoolFieldFieldPrivateNetworks    ResetSksNodepoolFieldField = "private-networks"
	ResetSksNodepoolFieldFieldDeployTarget       ResetSksNodepoolFieldField = "deploy-target"
)

// MarshalText implements encoding.TextMarshaler.
func (s ResetSksNodepoolFieldField) MarshalText() ([]byte, error) {
	switch s {
	case ResetSksNodepoolFieldFieldAntiAffinityGroups:
		return []byte(s), nil
	case ResetSksNodepoolFieldFieldDescription:
		return []byte(s), nil
	case ResetSksNodepoolFieldFieldLabels:
		return []byte(s), nil
	case ResetSksNodepoolFieldFieldSecurityGroups:
		return []byte(s), nil
	case ResetSksNodepoolFieldFieldPrivateNetworks:
		return []byte(s), nil
	case ResetSksNodepoolFieldFieldDeployTarget:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *ResetSksNodepoolFieldField) UnmarshalText(data []byte) error {
	switch ResetSksNodepoolFieldField(data) {
	case ResetSksNodepoolFieldFieldAntiAffinityGroups:
		*s = ResetSksNodepoolFieldFieldAntiAffinityGroups
		return nil
	case ResetSksNodepoolFieldFieldDescription:
		*s = ResetSksNodepoolFieldFieldDescription
		return nil
	case ResetSksNodepoolFieldFieldLabels:
		*s = ResetSksNodepoolFieldFieldLabels
		return nil
	case ResetSksNodepoolFieldFieldSecurityGroups:
		*s = ResetSksNodepoolFieldFieldSecurityGroups
		return nil
	case ResetSksNodepoolFieldFieldPrivateNetworks:
		*s = ResetSksNodepoolFieldFieldPrivateNetworks
		return nil
	case ResetSksNodepoolFieldFieldDeployTarget:
		*s = ResetSksNodepoolFieldFieldDeployTarget
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type ResizeInstanceDiskReq struct {
	// Instance disk size in GB.
	DiskMinusSize int64 `json:"disk-size"`
}

// GetDiskMinusSize returns the value of DiskMinusSize.
func (s *ResizeInstanceDiskReq) GetDiskMinusSize() int64 {
	return s.DiskMinusSize
}

// SetDiskMinusSize sets the value of DiskMinusSize.
func (s *ResizeInstanceDiskReq) SetDiskMinusSize(val int64) {
	s.DiskMinusSize = val
}

// Ref: #/components/schemas/reverse-dns-record
type ReverseDNSRecord struct {
	DomainMinusName OptDomainName `json:"domain-name"`
}

// GetDomainMinusName returns the value of DomainMinusName.
func (s *ReverseDNSRecord) GetDomainMinusName() OptDomainName {
	return s.DomainMinusName
}

// SetDomainMinusName sets the value of DomainMinusName.
func (s *ReverseDNSRecord) SetDomainMinusName(val OptDomainName) {
	s.DomainMinusName = val
}

type RevertInstanceToSnapshotReq struct {
	// Snapshot ID.
	ID uuid.UUID `json:"id"`
}

// GetID returns the value of ID.
func (s *RevertInstanceToSnapshotReq) GetID() uuid.UUID {
	return s.ID
}

// SetID sets the value of ID.
func (s *RevertInstanceToSnapshotReq) SetID(val uuid.UUID) {
	s.ID = val
}

// SSH key.
// Ref: #/components/schemas/ssh-key
type SSHKey struct {
	// SSH key name.
	Name OptString `json:"name"`
	// SSH key fingerprint.
	Fingerprint OptString `json:"fingerprint"`
}

// GetName returns the value of Name.
func (s *SSHKey) GetName() OptString {
	return s.Name
}

// GetFingerprint returns the value of Fingerprint.
func (s *SSHKey) GetFingerprint() OptString {
	return s.Fingerprint
}

// SetName sets the value of Name.
func (s *SSHKey) SetName(val OptString) {
	s.Name = val
}

// SetFingerprint sets the value of Fingerprint.
func (s *SSHKey) SetFingerprint(val OptString) {
	s.Fingerprint = val
}

type ScaleInstancePoolReq struct {
	// Number of managed Instances.
	Size int64 `json:"size"`
}

// GetSize returns the value of Size.
func (s *ScaleInstancePoolReq) GetSize() int64 {
	return s.Size
}

// SetSize sets the value of Size.
func (s *ScaleInstancePoolReq) SetSize(val int64) {
	s.Size = val
}

type ScaleInstanceReq struct {
	// Instance Type.
	InstanceMinusType InstanceType `json:"instance-type"`
}

// GetInstanceMinusType returns the value of InstanceMinusType.
func (s *ScaleInstanceReq) GetInstanceMinusType() InstanceType {
	return s.InstanceMinusType
}

// SetInstanceMinusType sets the value of InstanceMinusType.
func (s *ScaleInstanceReq) SetInstanceMinusType(val InstanceType) {
	s.InstanceMinusType = val
}

type ScaleSksNodepoolReq struct {
	// Number of instances.
	Size int64 `json:"size"`
}

// GetSize returns the value of Size.
func (s *ScaleSksNodepoolReq) GetSize() int64 {
	return s.Size
}

// SetSize sets the value of Size.
func (s *ScaleSksNodepoolReq) SetSize(val int64) {
	s.Size = val
}

// Security Group.
// Ref: #/components/schemas/security-group-resource
type SecurityGroupResource struct {
	// Security Group ID.
	ID OptUUID `json:"id"`
	// Security Group name.
	Name OptString `json:"name"`
	// Whether this points to a public security group. This is only valid when in the context of
	// a rule addition which uses a public security group as a source or destination.
	Visibility OptSecurityGroupResourceVisibility `json:"visibility"`
}

// GetID returns the value of ID.
func (s *SecurityGroupResource) GetID() OptUUID {
	return s.ID
}

// GetName returns the value of Name.
func (s *SecurityGroupResource) GetName() OptString {
	return s.Name
}

// GetVisibility returns the value of Visibility.
func (s *SecurityGroupResource) GetVisibility() OptSecurityGroupResourceVisibility {
	return s.Visibility
}

// SetID sets the value of ID.
func (s *SecurityGroupResource) SetID(val OptUUID) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *SecurityGroupResource) SetName(val OptString) {
	s.Name = val
}

// SetVisibility sets the value of Visibility.
func (s *SecurityGroupResource) SetVisibility(val OptSecurityGroupResourceVisibility) {
	s.Visibility = val
}

// Whether this points to a public security group. This is only valid when in the context of
// a rule addition which uses a public security group as a source or destination.
type SecurityGroupResourceVisibility string

const (
	SecurityGroupResourceVisibilityPrivate SecurityGroupResourceVisibility = "private"
	SecurityGroupResourceVisibilityPublic  SecurityGroupResourceVisibility = "public"
)

// MarshalText implements encoding.TextMarshaler.
func (s SecurityGroupResourceVisibility) MarshalText() ([]byte, error) {
	switch s {
	case SecurityGroupResourceVisibilityPrivate:
		return []byte(s), nil
	case SecurityGroupResourceVisibilityPublic:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *SecurityGroupResourceVisibility) UnmarshalText(data []byte) error {
	switch SecurityGroupResourceVisibility(data) {
	case SecurityGroupResourceVisibilityPrivate:
		*s = SecurityGroupResourceVisibilityPrivate
		return nil
	case SecurityGroupResourceVisibilityPublic:
		*s = SecurityGroupResourceVisibilityPublic
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/sks-cluster-deprecated-resource
type SksClusterDeprecatedResource map[string]string

func (s *SksClusterDeprecatedResource) init() SksClusterDeprecatedResource {
	m := *s
	if m == nil {
		m = map[string]string{}
		*s = m
	}
	return m
}

// Kubeconfig request for a SKS cluster.
// Ref: #/components/schemas/sks-kubeconfig-request
type SksKubeconfigRequest struct {
	// Validity in seconds of the Kubeconfig user certificate (default: 30 days).
	TTL OptInt64 `json:"ttl"`
	// User name in the generated Kubeconfig. The certificate present in the Kubeconfig will also have
	// this name set for the CN field.
	User OptString `json:"user"`
	// List of roles. The certificate present in the Kubeconfig will have these roles set in the Org
	// field.
	Groups []string `json:"groups"`
}

// GetTTL returns the value of TTL.
func (s *SksKubeconfigRequest) GetTTL() OptInt64 {
	return s.TTL
}

// GetUser returns the value of User.
func (s *SksKubeconfigRequest) GetUser() OptString {
	return s.User
}

// GetGroups returns the value of Groups.
func (s *SksKubeconfigRequest) GetGroups() []string {
	return s.Groups
}

// SetTTL sets the value of TTL.
func (s *SksKubeconfigRequest) SetTTL(val OptInt64) {
	s.TTL = val
}

// SetUser sets the value of User.
func (s *SksKubeconfigRequest) SetUser(val OptString) {
	s.User = val
}

// SetGroups sets the value of Groups.
func (s *SksKubeconfigRequest) SetGroups(val []string) {
	s.Groups = val
}

// SKS Cluster OpenID config map.
// Ref: #/components/schemas/sks-oidc
type SksOidc struct {
	// OpenID client ID.
	ClientMinusID string `json:"client-id"`
	// OpenID provider URL.
	IssuerMinusURL string `json:"issuer-url"`
	// JWT claim to use as the user name.
	UsernameMinusClaim OptString `json:"username-claim"`
	// Prefix prepended to username claims.
	UsernameMinusPrefix OptString `json:"username-prefix"`
	// JWT claim to use as the user's group.
	GroupsMinusClaim OptString `json:"groups-claim"`
	// Prefix prepended to group claims.
	GroupsMinusPrefix OptString `json:"groups-prefix"`
	// A key value map that describes a required claim in the ID Token.
	RequiredMinusClaim OptSksOidcRequiredMinusClaim `json:"required-claim"`
}

// GetClientMinusID returns the value of ClientMinusID.
func (s *SksOidc) GetClientMinusID() string {
	return s.ClientMinusID
}

// GetIssuerMinusURL returns the value of IssuerMinusURL.
func (s *SksOidc) GetIssuerMinusURL() string {
	return s.IssuerMinusURL
}

// GetUsernameMinusClaim returns the value of UsernameMinusClaim.
func (s *SksOidc) GetUsernameMinusClaim() OptString {
	return s.UsernameMinusClaim
}

// GetUsernameMinusPrefix returns the value of UsernameMinusPrefix.
func (s *SksOidc) GetUsernameMinusPrefix() OptString {
	return s.UsernameMinusPrefix
}

// GetGroupsMinusClaim returns the value of GroupsMinusClaim.
func (s *SksOidc) GetGroupsMinusClaim() OptString {
	return s.GroupsMinusClaim
}

// GetGroupsMinusPrefix returns the value of GroupsMinusPrefix.
func (s *SksOidc) GetGroupsMinusPrefix() OptString {
	return s.GroupsMinusPrefix
}

// GetRequiredMinusClaim returns the value of RequiredMinusClaim.
func (s *SksOidc) GetRequiredMinusClaim() OptSksOidcRequiredMinusClaim {
	return s.RequiredMinusClaim
}

// SetClientMinusID sets the value of ClientMinusID.
func (s *SksOidc) SetClientMinusID(val string) {
	s.ClientMinusID = val
}

// SetIssuerMinusURL sets the value of IssuerMinusURL.
func (s *SksOidc) SetIssuerMinusURL(val string) {
	s.IssuerMinusURL = val
}

// SetUsernameMinusClaim sets the value of UsernameMinusClaim.
func (s *SksOidc) SetUsernameMinusClaim(val OptString) {
	s.UsernameMinusClaim = val
}

// SetUsernameMinusPrefix sets the value of UsernameMinusPrefix.
func (s *SksOidc) SetUsernameMinusPrefix(val OptString) {
	s.UsernameMinusPrefix = val
}

// SetGroupsMinusClaim sets the value of GroupsMinusClaim.
func (s *SksOidc) SetGroupsMinusClaim(val OptString) {
	s.GroupsMinusClaim = val
}

// SetGroupsMinusPrefix sets the value of GroupsMinusPrefix.
func (s *SksOidc) SetGroupsMinusPrefix(val OptString) {
	s.GroupsMinusPrefix = val
}

// SetRequiredMinusClaim sets the value of RequiredMinusClaim.
func (s *SksOidc) SetRequiredMinusClaim(val OptSksOidcRequiredMinusClaim) {
	s.RequiredMinusClaim = val
}

// A key value map that describes a required claim in the ID Token.
type SksOidcRequiredMinusClaim map[string]string

func (s *SksOidcRequiredMinusClaim) init() SksOidcRequiredMinusClaim {
	m := *s
	if m == nil {
		m = map[string]string{}
		*s = m
	}
	return m
}

// SOS Bucket usage.
// Ref: #/components/schemas/sos-bucket-usage
type SosBucketUsage struct {
	// SOS Bucket name.
	Name OptString `json:"name"`
	// SOS Bucket creation date.
	CreatedMinusAt OptDateTime `json:"created-at"`
	// SOS Bucket zone.
	ZoneMinusName OptZoneName `json:"zone-name"`
	// SOS Bucket size in B.
	Size OptInt64 `json:"size"`
}

// GetName returns the value of Name.
func (s *SosBucketUsage) GetName() OptString {
	return s.Name
}

// GetCreatedMinusAt returns the value of CreatedMinusAt.
func (s *SosBucketUsage) GetCreatedMinusAt() OptDateTime {
	return s.CreatedMinusAt
}

// GetZoneMinusName returns the value of ZoneMinusName.
func (s *SosBucketUsage) GetZoneMinusName() OptZoneName {
	return s.ZoneMinusName
}

// GetSize returns the value of Size.
func (s *SosBucketUsage) GetSize() OptInt64 {
	return s.Size
}

// SetName sets the value of Name.
func (s *SosBucketUsage) SetName(val OptString) {
	s.Name = val
}

// SetCreatedMinusAt sets the value of CreatedMinusAt.
func (s *SosBucketUsage) SetCreatedMinusAt(val OptDateTime) {
	s.CreatedMinusAt = val
}

// SetZoneMinusName sets the value of ZoneMinusName.
func (s *SosBucketUsage) SetZoneMinusName(val OptZoneName) {
	s.ZoneMinusName = val
}

// SetSize sets the value of Size.
func (s *SosBucketUsage) SetSize(val OptInt64) {
	s.Size = val
}

type StartInstanceReq struct {
	// Boot in Rescue Mode, using named profile (supported: netboot, netboot-efi).
	RescueMinusProfile OptStartInstanceReqRescueMinusProfile `json:"rescue-profile"`
}

// GetRescueMinusProfile returns the value of RescueMinusProfile.
func (s *StartInstanceReq) GetRescueMinusProfile() OptStartInstanceReqRescueMinusProfile {
	return s.RescueMinusProfile
}

// SetRescueMinusProfile sets the value of RescueMinusProfile.
func (s *StartInstanceReq) SetRescueMinusProfile(val OptStartInstanceReqRescueMinusProfile) {
	s.RescueMinusProfile = val
}

// Boot in Rescue Mode, using named profile (supported: netboot, netboot-efi).
type StartInstanceReqRescueMinusProfile string

const (
	StartInstanceReqRescueMinusProfileNetbootEfi StartInstanceReqRescueMinusProfile = "netboot-efi"
	StartInstanceReqRescueMinusProfileNetboot    StartInstanceReqRescueMinusProfile = "netboot"
)

// MarshalText implements encoding.TextMarshaler.
func (s StartInstanceReqRescueMinusProfile) MarshalText() ([]byte, error) {
	switch s {
	case StartInstanceReqRescueMinusProfileNetbootEfi:
		return []byte(s), nil
	case StartInstanceReqRescueMinusProfileNetboot:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *StartInstanceReqRescueMinusProfile) UnmarshalText(data []byte) error {
	switch StartInstanceReqRescueMinusProfile(data) {
	case StartInstanceReqRescueMinusProfileNetbootEfi:
		*s = StartInstanceReqRescueMinusProfileNetbootEfi
		return nil
	case StartInstanceReqRescueMinusProfileNetboot:
		*s = StartInstanceReqRescueMinusProfileNetboot
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Instance template.
// Ref: #/components/schemas/template
type Template struct {
	// Template maintainer.
	Maintainer OptString `json:"maintainer"`
	// Template description.
	Description OptString `json:"description"`
	// Enable SSH key-based login.
	SSHMinusKeyMinusEnabled OptBool `json:"ssh-key-enabled"`
	// Template family.
	Family OptString `json:"family"`
	// Template name.
	Name OptString `json:"name"`
	// Template default user.
	DefaultMinusUser OptString `json:"default-user"`
	// Template size.
	Size OptInt64 `json:"size"`
	// Enable password-based login.
	PasswordMinusEnabled OptBool `json:"password-enabled"`
	// Template build.
	Build OptString `json:"build"`
	// Template MD5 checksum.
	Checksum OptString `json:"checksum"`
	// Boot mode (default: legacy).
	BootMinusMode OptTemplateBootMinusMode `json:"boot-mode"`
	// Template ID.
	ID OptUUID `json:"id"`
	// Zones availability.
	Zones []ZoneName `json:"zones"`
	// Template source URL.
	URL OptString `json:"url"`
	// Template version.
	Version OptString `json:"version"`
	// Template creation date.
	CreatedMinusAt OptDateTime `json:"created-at"`
	// Template visibility.
	Visibility OptTemplateVisibility `json:"visibility"`
}

// GetMaintainer returns the value of Maintainer.
func (s *Template) GetMaintainer() OptString {
	return s.Maintainer
}

// GetDescription returns the value of Description.
func (s *Template) GetDescription() OptString {
	return s.Description
}

// GetSSHMinusKeyMinusEnabled returns the value of SSHMinusKeyMinusEnabled.
func (s *Template) GetSSHMinusKeyMinusEnabled() OptBool {
	return s.SSHMinusKeyMinusEnabled
}

// GetFamily returns the value of Family.
func (s *Template) GetFamily() OptString {
	return s.Family
}

// GetName returns the value of Name.
func (s *Template) GetName() OptString {
	return s.Name
}

// GetDefaultMinusUser returns the value of DefaultMinusUser.
func (s *Template) GetDefaultMinusUser() OptString {
	return s.DefaultMinusUser
}

// GetSize returns the value of Size.
func (s *Template) GetSize() OptInt64 {
	return s.Size
}

// GetPasswordMinusEnabled returns the value of PasswordMinusEnabled.
func (s *Template) GetPasswordMinusEnabled() OptBool {
	return s.PasswordMinusEnabled
}

// GetBuild returns the value of Build.
func (s *Template) GetBuild() OptString {
	return s.Build
}

// GetChecksum returns the value of Checksum.
func (s *Template) GetChecksum() OptString {
	return s.Checksum
}

// GetBootMinusMode returns the value of BootMinusMode.
func (s *Template) GetBootMinusMode() OptTemplateBootMinusMode {
	return s.BootMinusMode
}

// GetID returns the value of ID.
func (s *Template) GetID() OptUUID {
	return s.ID
}

// GetZones returns the value of Zones.
func (s *Template) GetZones() []ZoneName {
	return s.Zones
}

// GetURL returns the value of URL.
func (s *Template) GetURL() OptString {
	return s.URL
}

// GetVersion returns the value of Version.
func (s *Template) GetVersion() OptString {
	return s.Version
}

// GetCreatedMinusAt returns the value of CreatedMinusAt.
func (s *Template) GetCreatedMinusAt() OptDateTime {
	return s.CreatedMinusAt
}

// GetVisibility returns the value of Visibility.
func (s *Template) GetVisibility() OptTemplateVisibility {
	return s.Visibility
}

// SetMaintainer sets the value of Maintainer.
func (s *Template) SetMaintainer(val OptString) {
	s.Maintainer = val
}

// SetDescription sets the value of Description.
func (s *Template) SetDescription(val OptString) {
	s.Description = val
}

// SetSSHMinusKeyMinusEnabled sets the value of SSHMinusKeyMinusEnabled.
func (s *Template) SetSSHMinusKeyMinusEnabled(val OptBool) {
	s.SSHMinusKeyMinusEnabled = val
}

// SetFamily sets the value of Family.
func (s *Template) SetFamily(val OptString) {
	s.Family = val
}

// SetName sets the value of Name.
func (s *Template) SetName(val OptString) {
	s.Name = val
}

// SetDefaultMinusUser sets the value of DefaultMinusUser.
func (s *Template) SetDefaultMinusUser(val OptString) {
	s.DefaultMinusUser = val
}

// SetSize sets the value of Size.
func (s *Template) SetSize(val OptInt64) {
	s.Size = val
}

// SetPasswordMinusEnabled sets the value of PasswordMinusEnabled.
func (s *Template) SetPasswordMinusEnabled(val OptBool) {
	s.PasswordMinusEnabled = val
}

// SetBuild sets the value of Build.
func (s *Template) SetBuild(val OptString) {
	s.Build = val
}

// SetChecksum sets the value of Checksum.
func (s *Template) SetChecksum(val OptString) {
	s.Checksum = val
}

// SetBootMinusMode sets the value of BootMinusMode.
func (s *Template) SetBootMinusMode(val OptTemplateBootMinusMode) {
	s.BootMinusMode = val
}

// SetID sets the value of ID.
func (s *Template) SetID(val OptUUID) {
	s.ID = val
}

// SetZones sets the value of Zones.
func (s *Template) SetZones(val []ZoneName) {
	s.Zones = val
}

// SetURL sets the value of URL.
func (s *Template) SetURL(val OptString) {
	s.URL = val
}

// SetVersion sets the value of Version.
func (s *Template) SetVersion(val OptString) {
	s.Version = val
}

// SetCreatedMinusAt sets the value of CreatedMinusAt.
func (s *Template) SetCreatedMinusAt(val OptDateTime) {
	s.CreatedMinusAt = val
}

// SetVisibility sets the value of Visibility.
func (s *Template) SetVisibility(val OptTemplateVisibility) {
	s.Visibility = val
}

// Boot mode (default: legacy).
type TemplateBootMinusMode string

const (
	TemplateBootMinusModeLegacy TemplateBootMinusMode = "legacy"
	TemplateBootMinusModeUefi   TemplateBootMinusMode = "uefi"
)

// MarshalText implements encoding.TextMarshaler.
func (s TemplateBootMinusMode) MarshalText() ([]byte, error) {
	switch s {
	case TemplateBootMinusModeLegacy:
		return []byte(s), nil
	case TemplateBootMinusModeUefi:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *TemplateBootMinusMode) UnmarshalText(data []byte) error {
	switch TemplateBootMinusMode(data) {
	case TemplateBootMinusModeLegacy:
		*s = TemplateBootMinusModeLegacy
		return nil
	case TemplateBootMinusModeUefi:
		*s = TemplateBootMinusModeUefi
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Template visibility.
type TemplateVisibility string

const (
	TemplateVisibilityPrivate TemplateVisibility = "private"
	TemplateVisibilityPublic  TemplateVisibility = "public"
)

// MarshalText implements encoding.TextMarshaler.
func (s TemplateVisibility) MarshalText() ([]byte, error) {
	switch s {
	case TemplateVisibilityPrivate:
		return []byte(s), nil
	case TemplateVisibilityPublic:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *TemplateVisibility) UnmarshalText(data []byte) error {
	switch TemplateVisibility(data) {
	case TemplateVisibilityPrivate:
		*s = TemplateVisibilityPrivate
		return nil
	case TemplateVisibilityPublic:
		*s = TemplateVisibilityPublic
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type UpdateDNSDomainRecordReq struct {
	// DNS domain record name.
	Name OptString `json:"name"`
	// DNS domain record content.
	Content OptString `json:"content"`
	// DNS domain record TTL.
	TTL OptInt64 `json:"ttl"`
	// DNS domain record priority.
	Priority OptInt64 `json:"priority"`
}

// GetName returns the value of Name.
func (s *UpdateDNSDomainRecordReq) GetName() OptString {
	return s.Name
}

// GetContent returns the value of Content.
func (s *UpdateDNSDomainRecordReq) GetContent() OptString {
	return s.Content
}

// GetTTL returns the value of TTL.
func (s *UpdateDNSDomainRecordReq) GetTTL() OptInt64 {
	return s.TTL
}

// GetPriority returns the value of Priority.
func (s *UpdateDNSDomainRecordReq) GetPriority() OptInt64 {
	return s.Priority
}

// SetName sets the value of Name.
func (s *UpdateDNSDomainRecordReq) SetName(val OptString) {
	s.Name = val
}

// SetContent sets the value of Content.
func (s *UpdateDNSDomainRecordReq) SetContent(val OptString) {
	s.Content = val
}

// SetTTL sets the value of TTL.
func (s *UpdateDNSDomainRecordReq) SetTTL(val OptInt64) {
	s.TTL = val
}

// SetPriority sets the value of Priority.
func (s *UpdateDNSDomainRecordReq) SetPriority(val OptInt64) {
	s.Priority = val
}

type UpdateDbaasIntegrationReq struct {
	// Integration settings.
	Settings UpdateDbaasIntegrationReqSettings `json:"settings"`
}

// GetSettings returns the value of Settings.
func (s *UpdateDbaasIntegrationReq) GetSettings() UpdateDbaasIntegrationReqSettings {
	return s.Settings
}

// SetSettings sets the value of Settings.
func (s *UpdateDbaasIntegrationReq) SetSettings(val UpdateDbaasIntegrationReqSettings) {
	s.Settings = val
}

// Integration settings.
type UpdateDbaasIntegrationReqSettings struct{}

type UpdateDbaasPostgresAllowReplicationReq struct {
	AllowMinusReplication OptBool `json:"allow-replication"`
}

// GetAllowMinusReplication returns the value of AllowMinusReplication.
func (s *UpdateDbaasPostgresAllowReplicationReq) GetAllowMinusReplication() OptBool {
	return s.AllowMinusReplication
}

// SetAllowMinusReplication sets the value of AllowMinusReplication.
func (s *UpdateDbaasPostgresAllowReplicationReq) SetAllowMinusReplication(val OptBool) {
	s.AllowMinusReplication = val
}

type UpdateDbaasServiceKafkaReq struct {
	// Kafka authentication methods.
	AuthenticationMinusMethods OptUpdateDbaasServiceKafkaReqAuthenticationMinusMethods `json:"authentication-methods"`
	// Enable Kafka-REST service.
	KafkaMinusRestMinusEnabled OptBool `json:"kafka-rest-enabled"`
	// Allow clients to connect to kafka_connect from the public internet for service nodes that are in a
	// project VPC or another type of private network.
	KafkaMinusConnectMinusEnabled OptBool `json:"kafka-connect-enabled"`
	// Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
	IPMinusFilter []string `json:"ip-filter"`
	// Schema Registry configuration.
	SchemaMinusRegistryMinusSettings *UpdateDbaasServiceKafkaReqSchemaMinusRegistryMinusSettings `json:"schema-registry-settings"`
	// Kafka REST configuration.
	KafkaMinusRestMinusSettings *UpdateDbaasServiceKafkaReqKafkaMinusRestMinusSettings `json:"kafka-rest-settings"`
	// Service is protected against termination and powering off.
	TerminationMinusProtection OptBool `json:"termination-protection"`
	// Kafka Connect configuration values.
	KafkaMinusConnectMinusSettings *UpdateDbaasServiceKafkaReqKafkaMinusConnectMinusSettings `json:"kafka-connect-settings"`
	// Automatic maintenance settings.
	Maintenance OptUpdateDbaasServiceKafkaReqMaintenance `json:"maintenance"`
	// Kafka-specific settings.
	KafkaMinusSettings *UpdateDbaasServiceKafkaReqKafkaMinusSettings `json:"kafka-settings"`
	// Enable Schema-Registry service.
	SchemaMinusRegistryMinusEnabled OptBool `json:"schema-registry-enabled"`
	// Subscription plan.
	Plan OptString `json:"plan"`
}

// GetAuthenticationMinusMethods returns the value of AuthenticationMinusMethods.
func (s *UpdateDbaasServiceKafkaReq) GetAuthenticationMinusMethods() OptUpdateDbaasServiceKafkaReqAuthenticationMinusMethods {
	return s.AuthenticationMinusMethods
}

// GetKafkaMinusRestMinusEnabled returns the value of KafkaMinusRestMinusEnabled.
func (s *UpdateDbaasServiceKafkaReq) GetKafkaMinusRestMinusEnabled() OptBool {
	return s.KafkaMinusRestMinusEnabled
}

// GetKafkaMinusConnectMinusEnabled returns the value of KafkaMinusConnectMinusEnabled.
func (s *UpdateDbaasServiceKafkaReq) GetKafkaMinusConnectMinusEnabled() OptBool {
	return s.KafkaMinusConnectMinusEnabled
}

// GetIPMinusFilter returns the value of IPMinusFilter.
func (s *UpdateDbaasServiceKafkaReq) GetIPMinusFilter() []string {
	return s.IPMinusFilter
}

// GetSchemaMinusRegistryMinusSettings returns the value of SchemaMinusRegistryMinusSettings.
func (s *UpdateDbaasServiceKafkaReq) GetSchemaMinusRegistryMinusSettings() *UpdateDbaasServiceKafkaReqSchemaMinusRegistryMinusSettings {
	return s.SchemaMinusRegistryMinusSettings
}

// GetKafkaMinusRestMinusSettings returns the value of KafkaMinusRestMinusSettings.
func (s *UpdateDbaasServiceKafkaReq) GetKafkaMinusRestMinusSettings() *UpdateDbaasServiceKafkaReqKafkaMinusRestMinusSettings {
	return s.KafkaMinusRestMinusSettings
}

// GetTerminationMinusProtection returns the value of TerminationMinusProtection.
func (s *UpdateDbaasServiceKafkaReq) GetTerminationMinusProtection() OptBool {
	return s.TerminationMinusProtection
}

// GetKafkaMinusConnectMinusSettings returns the value of KafkaMinusConnectMinusSettings.
func (s *UpdateDbaasServiceKafkaReq) GetKafkaMinusConnectMinusSettings() *UpdateDbaasServiceKafkaReqKafkaMinusConnectMinusSettings {
	return s.KafkaMinusConnectMinusSettings
}

// GetMaintenance returns the value of Maintenance.
func (s *UpdateDbaasServiceKafkaReq) GetMaintenance() OptUpdateDbaasServiceKafkaReqMaintenance {
	return s.Maintenance
}

// GetKafkaMinusSettings returns the value of KafkaMinusSettings.
func (s *UpdateDbaasServiceKafkaReq) GetKafkaMinusSettings() *UpdateDbaasServiceKafkaReqKafkaMinusSettings {
	return s.KafkaMinusSettings
}

// GetSchemaMinusRegistryMinusEnabled returns the value of SchemaMinusRegistryMinusEnabled.
func (s *UpdateDbaasServiceKafkaReq) GetSchemaMinusRegistryMinusEnabled() OptBool {
	return s.SchemaMinusRegistryMinusEnabled
}

// GetPlan returns the value of Plan.
func (s *UpdateDbaasServiceKafkaReq) GetPlan() OptString {
	return s.Plan
}

// SetAuthenticationMinusMethods sets the value of AuthenticationMinusMethods.
func (s *UpdateDbaasServiceKafkaReq) SetAuthenticationMinusMethods(val OptUpdateDbaasServiceKafkaReqAuthenticationMinusMethods) {
	s.AuthenticationMinusMethods = val
}

// SetKafkaMinusRestMinusEnabled sets the value of KafkaMinusRestMinusEnabled.
func (s *UpdateDbaasServiceKafkaReq) SetKafkaMinusRestMinusEnabled(val OptBool) {
	s.KafkaMinusRestMinusEnabled = val
}

// SetKafkaMinusConnectMinusEnabled sets the value of KafkaMinusConnectMinusEnabled.
func (s *UpdateDbaasServiceKafkaReq) SetKafkaMinusConnectMinusEnabled(val OptBool) {
	s.KafkaMinusConnectMinusEnabled = val
}

// SetIPMinusFilter sets the value of IPMinusFilter.
func (s *UpdateDbaasServiceKafkaReq) SetIPMinusFilter(val []string) {
	s.IPMinusFilter = val
}

// SetSchemaMinusRegistryMinusSettings sets the value of SchemaMinusRegistryMinusSettings.
func (s *UpdateDbaasServiceKafkaReq) SetSchemaMinusRegistryMinusSettings(val *UpdateDbaasServiceKafkaReqSchemaMinusRegistryMinusSettings) {
	s.SchemaMinusRegistryMinusSettings = val
}

// SetKafkaMinusRestMinusSettings sets the value of KafkaMinusRestMinusSettings.
func (s *UpdateDbaasServiceKafkaReq) SetKafkaMinusRestMinusSettings(val *UpdateDbaasServiceKafkaReqKafkaMinusRestMinusSettings) {
	s.KafkaMinusRestMinusSettings = val
}

// SetTerminationMinusProtection sets the value of TerminationMinusProtection.
func (s *UpdateDbaasServiceKafkaReq) SetTerminationMinusProtection(val OptBool) {
	s.TerminationMinusProtection = val
}

// SetKafkaMinusConnectMinusSettings sets the value of KafkaMinusConnectMinusSettings.
func (s *UpdateDbaasServiceKafkaReq) SetKafkaMinusConnectMinusSettings(val *UpdateDbaasServiceKafkaReqKafkaMinusConnectMinusSettings) {
	s.KafkaMinusConnectMinusSettings = val
}

// SetMaintenance sets the value of Maintenance.
func (s *UpdateDbaasServiceKafkaReq) SetMaintenance(val OptUpdateDbaasServiceKafkaReqMaintenance) {
	s.Maintenance = val
}

// SetKafkaMinusSettings sets the value of KafkaMinusSettings.
func (s *UpdateDbaasServiceKafkaReq) SetKafkaMinusSettings(val *UpdateDbaasServiceKafkaReqKafkaMinusSettings) {
	s.KafkaMinusSettings = val
}

// SetSchemaMinusRegistryMinusEnabled sets the value of SchemaMinusRegistryMinusEnabled.
func (s *UpdateDbaasServiceKafkaReq) SetSchemaMinusRegistryMinusEnabled(val OptBool) {
	s.SchemaMinusRegistryMinusEnabled = val
}

// SetPlan sets the value of Plan.
func (s *UpdateDbaasServiceKafkaReq) SetPlan(val OptString) {
	s.Plan = val
}

// Kafka authentication methods.
type UpdateDbaasServiceKafkaReqAuthenticationMinusMethods struct {
	// Enable certificate/SSL authentication.
	Certificate OptBool `json:"certificate"`
	// Enable SASL authentication.
	Sasl OptBool `json:"sasl"`
}

// GetCertificate returns the value of Certificate.
func (s *UpdateDbaasServiceKafkaReqAuthenticationMinusMethods) GetCertificate() OptBool {
	return s.Certificate
}

// GetSasl returns the value of Sasl.
func (s *UpdateDbaasServiceKafkaReqAuthenticationMinusMethods) GetSasl() OptBool {
	return s.Sasl
}

// SetCertificate sets the value of Certificate.
func (s *UpdateDbaasServiceKafkaReqAuthenticationMinusMethods) SetCertificate(val OptBool) {
	s.Certificate = val
}

// SetSasl sets the value of Sasl.
func (s *UpdateDbaasServiceKafkaReqAuthenticationMinusMethods) SetSasl(val OptBool) {
	s.Sasl = val
}

// Kafka Connect configuration values.
type UpdateDbaasServiceKafkaReqKafkaMinusConnectMinusSettings struct{}

// Kafka REST configuration.
type UpdateDbaasServiceKafkaReqKafkaMinusRestMinusSettings struct{}

// Kafka-specific settings.
type UpdateDbaasServiceKafkaReqKafkaMinusSettings struct{}

// Automatic maintenance settings.
type UpdateDbaasServiceKafkaReqMaintenance struct {
	// Day of week for installing updates.
	Dow UpdateDbaasServiceKafkaReqMaintenanceDow `json:"dow"`
	// Time for installing updates, UTC.
	Time string `json:"time"`
}

// GetDow returns the value of Dow.
func (s *UpdateDbaasServiceKafkaReqMaintenance) GetDow() UpdateDbaasServiceKafkaReqMaintenanceDow {
	return s.Dow
}

// GetTime returns the value of Time.
func (s *UpdateDbaasServiceKafkaReqMaintenance) GetTime() string {
	return s.Time
}

// SetDow sets the value of Dow.
func (s *UpdateDbaasServiceKafkaReqMaintenance) SetDow(val UpdateDbaasServiceKafkaReqMaintenanceDow) {
	s.Dow = val
}

// SetTime sets the value of Time.
func (s *UpdateDbaasServiceKafkaReqMaintenance) SetTime(val string) {
	s.Time = val
}

// Day of week for installing updates.
type UpdateDbaasServiceKafkaReqMaintenanceDow string

const (
	UpdateDbaasServiceKafkaReqMaintenanceDowSaturday  UpdateDbaasServiceKafkaReqMaintenanceDow = "saturday"
	UpdateDbaasServiceKafkaReqMaintenanceDowTuesday   UpdateDbaasServiceKafkaReqMaintenanceDow = "tuesday"
	UpdateDbaasServiceKafkaReqMaintenanceDowNever     UpdateDbaasServiceKafkaReqMaintenanceDow = "never"
	UpdateDbaasServiceKafkaReqMaintenanceDowWednesday UpdateDbaasServiceKafkaReqMaintenanceDow = "wednesday"
	UpdateDbaasServiceKafkaReqMaintenanceDowSunday    UpdateDbaasServiceKafkaReqMaintenanceDow = "sunday"
	UpdateDbaasServiceKafkaReqMaintenanceDowFriday    UpdateDbaasServiceKafkaReqMaintenanceDow = "friday"
	UpdateDbaasServiceKafkaReqMaintenanceDowMonday    UpdateDbaasServiceKafkaReqMaintenanceDow = "monday"
	UpdateDbaasServiceKafkaReqMaintenanceDowThursday  UpdateDbaasServiceKafkaReqMaintenanceDow = "thursday"
)

// MarshalText implements encoding.TextMarshaler.
func (s UpdateDbaasServiceKafkaReqMaintenanceDow) MarshalText() ([]byte, error) {
	switch s {
	case UpdateDbaasServiceKafkaReqMaintenanceDowSaturday:
		return []byte(s), nil
	case UpdateDbaasServiceKafkaReqMaintenanceDowTuesday:
		return []byte(s), nil
	case UpdateDbaasServiceKafkaReqMaintenanceDowNever:
		return []byte(s), nil
	case UpdateDbaasServiceKafkaReqMaintenanceDowWednesday:
		return []byte(s), nil
	case UpdateDbaasServiceKafkaReqMaintenanceDowSunday:
		return []byte(s), nil
	case UpdateDbaasServiceKafkaReqMaintenanceDowFriday:
		return []byte(s), nil
	case UpdateDbaasServiceKafkaReqMaintenanceDowMonday:
		return []byte(s), nil
	case UpdateDbaasServiceKafkaReqMaintenanceDowThursday:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *UpdateDbaasServiceKafkaReqMaintenanceDow) UnmarshalText(data []byte) error {
	switch UpdateDbaasServiceKafkaReqMaintenanceDow(data) {
	case UpdateDbaasServiceKafkaReqMaintenanceDowSaturday:
		*s = UpdateDbaasServiceKafkaReqMaintenanceDowSaturday
		return nil
	case UpdateDbaasServiceKafkaReqMaintenanceDowTuesday:
		*s = UpdateDbaasServiceKafkaReqMaintenanceDowTuesday
		return nil
	case UpdateDbaasServiceKafkaReqMaintenanceDowNever:
		*s = UpdateDbaasServiceKafkaReqMaintenanceDowNever
		return nil
	case UpdateDbaasServiceKafkaReqMaintenanceDowWednesday:
		*s = UpdateDbaasServiceKafkaReqMaintenanceDowWednesday
		return nil
	case UpdateDbaasServiceKafkaReqMaintenanceDowSunday:
		*s = UpdateDbaasServiceKafkaReqMaintenanceDowSunday
		return nil
	case UpdateDbaasServiceKafkaReqMaintenanceDowFriday:
		*s = UpdateDbaasServiceKafkaReqMaintenanceDowFriday
		return nil
	case UpdateDbaasServiceKafkaReqMaintenanceDowMonday:
		*s = UpdateDbaasServiceKafkaReqMaintenanceDowMonday
		return nil
	case UpdateDbaasServiceKafkaReqMaintenanceDowThursday:
		*s = UpdateDbaasServiceKafkaReqMaintenanceDowThursday
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Schema Registry configuration.
type UpdateDbaasServiceKafkaReqSchemaMinusRegistryMinusSettings struct{}

type UpdateDbaasServiceMysqlReq struct {
	// Automatic maintenance settings.
	Maintenance OptUpdateDbaasServiceMysqlReqMaintenance `json:"maintenance"`
	// Subscription plan.
	Plan OptString `json:"plan"`
	// Service is protected against termination and powering off.
	TerminationMinusProtection OptBool `json:"termination-protection"`
	// Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
	IPMinusFilter []string `json:"ip-filter"`
	// MySQL-specific settings.
	MysqlMinusSettings *UpdateDbaasServiceMysqlReqMysqlMinusSettings `json:"mysql-settings"`
	// Migrate data from existing server.
	Migration OptUpdateDbaasServiceMysqlReqMigration `json:"migration"`
	// The minimum amount of time in seconds to keep binlog entries before deletion. This may be extended
	// for services that require binlog entries for longer than the default for example if using the
	// MySQL Debezium Kafka connector.
	BinlogMinusRetentionMinusPeriod OptInt64                                         `json:"binlog-retention-period"`
	BackupMinusSchedule             OptUpdateDbaasServiceMysqlReqBackupMinusSchedule `json:"backup-schedule"`
}

// GetMaintenance returns the value of Maintenance.
func (s *UpdateDbaasServiceMysqlReq) GetMaintenance() OptUpdateDbaasServiceMysqlReqMaintenance {
	return s.Maintenance
}

// GetPlan returns the value of Plan.
func (s *UpdateDbaasServiceMysqlReq) GetPlan() OptString {
	return s.Plan
}

// GetTerminationMinusProtection returns the value of TerminationMinusProtection.
func (s *UpdateDbaasServiceMysqlReq) GetTerminationMinusProtection() OptBool {
	return s.TerminationMinusProtection
}

// GetIPMinusFilter returns the value of IPMinusFilter.
func (s *UpdateDbaasServiceMysqlReq) GetIPMinusFilter() []string {
	return s.IPMinusFilter
}

// GetMysqlMinusSettings returns the value of MysqlMinusSettings.
func (s *UpdateDbaasServiceMysqlReq) GetMysqlMinusSettings() *UpdateDbaasServiceMysqlReqMysqlMinusSettings {
	return s.MysqlMinusSettings
}

// GetMigration returns the value of Migration.
func (s *UpdateDbaasServiceMysqlReq) GetMigration() OptUpdateDbaasServiceMysqlReqMigration {
	return s.Migration
}

// GetBinlogMinusRetentionMinusPeriod returns the value of BinlogMinusRetentionMinusPeriod.
func (s *UpdateDbaasServiceMysqlReq) GetBinlogMinusRetentionMinusPeriod() OptInt64 {
	return s.BinlogMinusRetentionMinusPeriod
}

// GetBackupMinusSchedule returns the value of BackupMinusSchedule.
func (s *UpdateDbaasServiceMysqlReq) GetBackupMinusSchedule() OptUpdateDbaasServiceMysqlReqBackupMinusSchedule {
	return s.BackupMinusSchedule
}

// SetMaintenance sets the value of Maintenance.
func (s *UpdateDbaasServiceMysqlReq) SetMaintenance(val OptUpdateDbaasServiceMysqlReqMaintenance) {
	s.Maintenance = val
}

// SetPlan sets the value of Plan.
func (s *UpdateDbaasServiceMysqlReq) SetPlan(val OptString) {
	s.Plan = val
}

// SetTerminationMinusProtection sets the value of TerminationMinusProtection.
func (s *UpdateDbaasServiceMysqlReq) SetTerminationMinusProtection(val OptBool) {
	s.TerminationMinusProtection = val
}

// SetIPMinusFilter sets the value of IPMinusFilter.
func (s *UpdateDbaasServiceMysqlReq) SetIPMinusFilter(val []string) {
	s.IPMinusFilter = val
}

// SetMysqlMinusSettings sets the value of MysqlMinusSettings.
func (s *UpdateDbaasServiceMysqlReq) SetMysqlMinusSettings(val *UpdateDbaasServiceMysqlReqMysqlMinusSettings) {
	s.MysqlMinusSettings = val
}

// SetMigration sets the value of Migration.
func (s *UpdateDbaasServiceMysqlReq) SetMigration(val OptUpdateDbaasServiceMysqlReqMigration) {
	s.Migration = val
}

// SetBinlogMinusRetentionMinusPeriod sets the value of BinlogMinusRetentionMinusPeriod.
func (s *UpdateDbaasServiceMysqlReq) SetBinlogMinusRetentionMinusPeriod(val OptInt64) {
	s.BinlogMinusRetentionMinusPeriod = val
}

// SetBackupMinusSchedule sets the value of BackupMinusSchedule.
func (s *UpdateDbaasServiceMysqlReq) SetBackupMinusSchedule(val OptUpdateDbaasServiceMysqlReqBackupMinusSchedule) {
	s.BackupMinusSchedule = val
}

type UpdateDbaasServiceMysqlReqBackupMinusSchedule struct {
	// The hour of day (in UTC) when backup for the service is started. New backup is only started if
	// previous backup has already completed.
	BackupMinusHour OptInt64 `json:"backup-hour"`
	// The minute of an hour when backup for the service is started. New backup is only started if
	// previous backup has already completed.
	BackupMinusMinute OptInt64 `json:"backup-minute"`
}

// GetBackupMinusHour returns the value of BackupMinusHour.
func (s *UpdateDbaasServiceMysqlReqBackupMinusSchedule) GetBackupMinusHour() OptInt64 {
	return s.BackupMinusHour
}

// GetBackupMinusMinute returns the value of BackupMinusMinute.
func (s *UpdateDbaasServiceMysqlReqBackupMinusSchedule) GetBackupMinusMinute() OptInt64 {
	return s.BackupMinusMinute
}

// SetBackupMinusHour sets the value of BackupMinusHour.
func (s *UpdateDbaasServiceMysqlReqBackupMinusSchedule) SetBackupMinusHour(val OptInt64) {
	s.BackupMinusHour = val
}

// SetBackupMinusMinute sets the value of BackupMinusMinute.
func (s *UpdateDbaasServiceMysqlReqBackupMinusSchedule) SetBackupMinusMinute(val OptInt64) {
	s.BackupMinusMinute = val
}

// Automatic maintenance settings.
type UpdateDbaasServiceMysqlReqMaintenance struct {
	// Day of week for installing updates.
	Dow UpdateDbaasServiceMysqlReqMaintenanceDow `json:"dow"`
	// Time for installing updates, UTC.
	Time string `json:"time"`
}

// GetDow returns the value of Dow.
func (s *UpdateDbaasServiceMysqlReqMaintenance) GetDow() UpdateDbaasServiceMysqlReqMaintenanceDow {
	return s.Dow
}

// GetTime returns the value of Time.
func (s *UpdateDbaasServiceMysqlReqMaintenance) GetTime() string {
	return s.Time
}

// SetDow sets the value of Dow.
func (s *UpdateDbaasServiceMysqlReqMaintenance) SetDow(val UpdateDbaasServiceMysqlReqMaintenanceDow) {
	s.Dow = val
}

// SetTime sets the value of Time.
func (s *UpdateDbaasServiceMysqlReqMaintenance) SetTime(val string) {
	s.Time = val
}

// Day of week for installing updates.
type UpdateDbaasServiceMysqlReqMaintenanceDow string

const (
	UpdateDbaasServiceMysqlReqMaintenanceDowSaturday  UpdateDbaasServiceMysqlReqMaintenanceDow = "saturday"
	UpdateDbaasServiceMysqlReqMaintenanceDowTuesday   UpdateDbaasServiceMysqlReqMaintenanceDow = "tuesday"
	UpdateDbaasServiceMysqlReqMaintenanceDowNever     UpdateDbaasServiceMysqlReqMaintenanceDow = "never"
	UpdateDbaasServiceMysqlReqMaintenanceDowWednesday UpdateDbaasServiceMysqlReqMaintenanceDow = "wednesday"
	UpdateDbaasServiceMysqlReqMaintenanceDowSunday    UpdateDbaasServiceMysqlReqMaintenanceDow = "sunday"
	UpdateDbaasServiceMysqlReqMaintenanceDowFriday    UpdateDbaasServiceMysqlReqMaintenanceDow = "friday"
	UpdateDbaasServiceMysqlReqMaintenanceDowMonday    UpdateDbaasServiceMysqlReqMaintenanceDow = "monday"
	UpdateDbaasServiceMysqlReqMaintenanceDowThursday  UpdateDbaasServiceMysqlReqMaintenanceDow = "thursday"
)

// MarshalText implements encoding.TextMarshaler.
func (s UpdateDbaasServiceMysqlReqMaintenanceDow) MarshalText() ([]byte, error) {
	switch s {
	case UpdateDbaasServiceMysqlReqMaintenanceDowSaturday:
		return []byte(s), nil
	case UpdateDbaasServiceMysqlReqMaintenanceDowTuesday:
		return []byte(s), nil
	case UpdateDbaasServiceMysqlReqMaintenanceDowNever:
		return []byte(s), nil
	case UpdateDbaasServiceMysqlReqMaintenanceDowWednesday:
		return []byte(s), nil
	case UpdateDbaasServiceMysqlReqMaintenanceDowSunday:
		return []byte(s), nil
	case UpdateDbaasServiceMysqlReqMaintenanceDowFriday:
		return []byte(s), nil
	case UpdateDbaasServiceMysqlReqMaintenanceDowMonday:
		return []byte(s), nil
	case UpdateDbaasServiceMysqlReqMaintenanceDowThursday:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *UpdateDbaasServiceMysqlReqMaintenanceDow) UnmarshalText(data []byte) error {
	switch UpdateDbaasServiceMysqlReqMaintenanceDow(data) {
	case UpdateDbaasServiceMysqlReqMaintenanceDowSaturday:
		*s = UpdateDbaasServiceMysqlReqMaintenanceDowSaturday
		return nil
	case UpdateDbaasServiceMysqlReqMaintenanceDowTuesday:
		*s = UpdateDbaasServiceMysqlReqMaintenanceDowTuesday
		return nil
	case UpdateDbaasServiceMysqlReqMaintenanceDowNever:
		*s = UpdateDbaasServiceMysqlReqMaintenanceDowNever
		return nil
	case UpdateDbaasServiceMysqlReqMaintenanceDowWednesday:
		*s = UpdateDbaasServiceMysqlReqMaintenanceDowWednesday
		return nil
	case UpdateDbaasServiceMysqlReqMaintenanceDowSunday:
		*s = UpdateDbaasServiceMysqlReqMaintenanceDowSunday
		return nil
	case UpdateDbaasServiceMysqlReqMaintenanceDowFriday:
		*s = UpdateDbaasServiceMysqlReqMaintenanceDowFriday
		return nil
	case UpdateDbaasServiceMysqlReqMaintenanceDowMonday:
		*s = UpdateDbaasServiceMysqlReqMaintenanceDowMonday
		return nil
	case UpdateDbaasServiceMysqlReqMaintenanceDowThursday:
		*s = UpdateDbaasServiceMysqlReqMaintenanceDowThursday
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Migrate data from existing server.
type UpdateDbaasServiceMysqlReqMigration struct {
	// Hostname or IP address of the server where to migrate data from.
	Host string `json:"host"`
	// Port number of the server where to migrate data from.
	Port int64 `json:"port"`
	// Password for authentication with the server where to migrate data from.
	Password OptString `json:"password"`
	// The server where to migrate data from is secured with SSL.
	Ssl OptBool `json:"ssl"`
	// User name for authentication with the server where to migrate data from.
	Username OptString `json:"username"`
	// Database name for bootstrapping the initial connection.
	Dbname OptString `json:"dbname"`
	// Comma-separated list of databases, which should be ignored during migration (supported by MySQL
	// only at the moment).
	IgnoreMinusDbs OptString `json:"ignore-dbs"`
	// The migration method to be used.
	Method OptEnumMigrationMethod `json:"method"`
}

// GetHost returns the value of Host.
func (s *UpdateDbaasServiceMysqlReqMigration) GetHost() string {
	return s.Host
}

// GetPort returns the value of Port.
func (s *UpdateDbaasServiceMysqlReqMigration) GetPort() int64 {
	return s.Port
}

// GetPassword returns the value of Password.
func (s *UpdateDbaasServiceMysqlReqMigration) GetPassword() OptString {
	return s.Password
}

// GetSsl returns the value of Ssl.
func (s *UpdateDbaasServiceMysqlReqMigration) GetSsl() OptBool {
	return s.Ssl
}

// GetUsername returns the value of Username.
func (s *UpdateDbaasServiceMysqlReqMigration) GetUsername() OptString {
	return s.Username
}

// GetDbname returns the value of Dbname.
func (s *UpdateDbaasServiceMysqlReqMigration) GetDbname() OptString {
	return s.Dbname
}

// GetIgnoreMinusDbs returns the value of IgnoreMinusDbs.
func (s *UpdateDbaasServiceMysqlReqMigration) GetIgnoreMinusDbs() OptString {
	return s.IgnoreMinusDbs
}

// GetMethod returns the value of Method.
func (s *UpdateDbaasServiceMysqlReqMigration) GetMethod() OptEnumMigrationMethod {
	return s.Method
}

// SetHost sets the value of Host.
func (s *UpdateDbaasServiceMysqlReqMigration) SetHost(val string) {
	s.Host = val
}

// SetPort sets the value of Port.
func (s *UpdateDbaasServiceMysqlReqMigration) SetPort(val int64) {
	s.Port = val
}

// SetPassword sets the value of Password.
func (s *UpdateDbaasServiceMysqlReqMigration) SetPassword(val OptString) {
	s.Password = val
}

// SetSsl sets the value of Ssl.
func (s *UpdateDbaasServiceMysqlReqMigration) SetSsl(val OptBool) {
	s.Ssl = val
}

// SetUsername sets the value of Username.
func (s *UpdateDbaasServiceMysqlReqMigration) SetUsername(val OptString) {
	s.Username = val
}

// SetDbname sets the value of Dbname.
func (s *UpdateDbaasServiceMysqlReqMigration) SetDbname(val OptString) {
	s.Dbname = val
}

// SetIgnoreMinusDbs sets the value of IgnoreMinusDbs.
func (s *UpdateDbaasServiceMysqlReqMigration) SetIgnoreMinusDbs(val OptString) {
	s.IgnoreMinusDbs = val
}

// SetMethod sets the value of Method.
func (s *UpdateDbaasServiceMysqlReqMigration) SetMethod(val OptEnumMigrationMethod) {
	s.Method = val
}

// MySQL-specific settings.
type UpdateDbaasServiceMysqlReqMysqlMinusSettings struct{}

type UpdateDbaasServiceOpensearchReq struct {
	// Maximum number of indexes to keep before deleting the oldest one.
	MaxMinusIndexMinusCount OptInt64 `json:"max-index-count"`
	// Aiven automation resets index.refresh_interval to default value for every index to be sure that
	// indices are always visible to search. If it doesn't fit your case, you can disable this by setting
	// up this flag to true.
	KeepMinusIndexMinusRefreshMinusInterval OptBool `json:"keep-index-refresh-interval"`
	// Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
	IPMinusFilter []string `json:"ip-filter"`
	// Service is protected against termination and powering off.
	TerminationMinusProtection OptBool `json:"termination-protection"`
	// Allows you to create glob style patterns and set a max number of indexes matching this pattern you
	// want to keep. Creating indexes exceeding this value will cause the oldest one to get deleted. You
	// could for example create a pattern looking like 'logs.?' and then create index logs.1, logs.2 etc,
	// it will delete logs.1 once you create logs.6. Do note 'logs.?' does not apply to logs.10. Note:
	// Setting max_index_count to 0 will do nothing and the pattern gets ignored.
	IndexMinusPatterns []UpdateDbaasServiceOpensearchReqIndexMinusPatternsItem `json:"index-patterns"`
	// Automatic maintenance settings.
	Maintenance OptUpdateDbaasServiceOpensearchReqMaintenance `json:"maintenance"`
	// Template settings for all new indexes.
	IndexMinusTemplate OptUpdateDbaasServiceOpensearchReqIndexMinusTemplate `json:"index-template"`
	// OpenSearch-specific settings.
	OpensearchMinusSettings *UpdateDbaasServiceOpensearchReqOpensearchMinusSettings `json:"opensearch-settings"`
	// Subscription plan.
	Plan OptString `json:"plan"`
	// OpenSearch Dashboards settings.
	OpensearchMinusDashboards OptUpdateDbaasServiceOpensearchReqOpensearchMinusDashboards `json:"opensearch-dashboards"`
}

// GetMaxMinusIndexMinusCount returns the value of MaxMinusIndexMinusCount.
func (s *UpdateDbaasServiceOpensearchReq) GetMaxMinusIndexMinusCount() OptInt64 {
	return s.MaxMinusIndexMinusCount
}

// GetKeepMinusIndexMinusRefreshMinusInterval returns the value of KeepMinusIndexMinusRefreshMinusInterval.
func (s *UpdateDbaasServiceOpensearchReq) GetKeepMinusIndexMinusRefreshMinusInterval() OptBool {
	return s.KeepMinusIndexMinusRefreshMinusInterval
}

// GetIPMinusFilter returns the value of IPMinusFilter.
func (s *UpdateDbaasServiceOpensearchReq) GetIPMinusFilter() []string {
	return s.IPMinusFilter
}

// GetTerminationMinusProtection returns the value of TerminationMinusProtection.
func (s *UpdateDbaasServiceOpensearchReq) GetTerminationMinusProtection() OptBool {
	return s.TerminationMinusProtection
}

// GetIndexMinusPatterns returns the value of IndexMinusPatterns.
func (s *UpdateDbaasServiceOpensearchReq) GetIndexMinusPatterns() []UpdateDbaasServiceOpensearchReqIndexMinusPatternsItem {
	return s.IndexMinusPatterns
}

// GetMaintenance returns the value of Maintenance.
func (s *UpdateDbaasServiceOpensearchReq) GetMaintenance() OptUpdateDbaasServiceOpensearchReqMaintenance {
	return s.Maintenance
}

// GetIndexMinusTemplate returns the value of IndexMinusTemplate.
func (s *UpdateDbaasServiceOpensearchReq) GetIndexMinusTemplate() OptUpdateDbaasServiceOpensearchReqIndexMinusTemplate {
	return s.IndexMinusTemplate
}

// GetOpensearchMinusSettings returns the value of OpensearchMinusSettings.
func (s *UpdateDbaasServiceOpensearchReq) GetOpensearchMinusSettings() *UpdateDbaasServiceOpensearchReqOpensearchMinusSettings {
	return s.OpensearchMinusSettings
}

// GetPlan returns the value of Plan.
func (s *UpdateDbaasServiceOpensearchReq) GetPlan() OptString {
	return s.Plan
}

// GetOpensearchMinusDashboards returns the value of OpensearchMinusDashboards.
func (s *UpdateDbaasServiceOpensearchReq) GetOpensearchMinusDashboards() OptUpdateDbaasServiceOpensearchReqOpensearchMinusDashboards {
	return s.OpensearchMinusDashboards
}

// SetMaxMinusIndexMinusCount sets the value of MaxMinusIndexMinusCount.
func (s *UpdateDbaasServiceOpensearchReq) SetMaxMinusIndexMinusCount(val OptInt64) {
	s.MaxMinusIndexMinusCount = val
}

// SetKeepMinusIndexMinusRefreshMinusInterval sets the value of KeepMinusIndexMinusRefreshMinusInterval.
func (s *UpdateDbaasServiceOpensearchReq) SetKeepMinusIndexMinusRefreshMinusInterval(val OptBool) {
	s.KeepMinusIndexMinusRefreshMinusInterval = val
}

// SetIPMinusFilter sets the value of IPMinusFilter.
func (s *UpdateDbaasServiceOpensearchReq) SetIPMinusFilter(val []string) {
	s.IPMinusFilter = val
}

// SetTerminationMinusProtection sets the value of TerminationMinusProtection.
func (s *UpdateDbaasServiceOpensearchReq) SetTerminationMinusProtection(val OptBool) {
	s.TerminationMinusProtection = val
}

// SetIndexMinusPatterns sets the value of IndexMinusPatterns.
func (s *UpdateDbaasServiceOpensearchReq) SetIndexMinusPatterns(val []UpdateDbaasServiceOpensearchReqIndexMinusPatternsItem) {
	s.IndexMinusPatterns = val
}

// SetMaintenance sets the value of Maintenance.
func (s *UpdateDbaasServiceOpensearchReq) SetMaintenance(val OptUpdateDbaasServiceOpensearchReqMaintenance) {
	s.Maintenance = val
}

// SetIndexMinusTemplate sets the value of IndexMinusTemplate.
func (s *UpdateDbaasServiceOpensearchReq) SetIndexMinusTemplate(val OptUpdateDbaasServiceOpensearchReqIndexMinusTemplate) {
	s.IndexMinusTemplate = val
}

// SetOpensearchMinusSettings sets the value of OpensearchMinusSettings.
func (s *UpdateDbaasServiceOpensearchReq) SetOpensearchMinusSettings(val *UpdateDbaasServiceOpensearchReqOpensearchMinusSettings) {
	s.OpensearchMinusSettings = val
}

// SetPlan sets the value of Plan.
func (s *UpdateDbaasServiceOpensearchReq) SetPlan(val OptString) {
	s.Plan = val
}

// SetOpensearchMinusDashboards sets the value of OpensearchMinusDashboards.
func (s *UpdateDbaasServiceOpensearchReq) SetOpensearchMinusDashboards(val OptUpdateDbaasServiceOpensearchReqOpensearchMinusDashboards) {
	s.OpensearchMinusDashboards = val
}

type UpdateDbaasServiceOpensearchReqIndexMinusPatternsItem struct {
	// Maximum number of indexes to keep.
	MaxMinusIndexMinusCount OptInt64 `json:"max-index-count"`
	// Deletion sorting algorithm.
	SortingMinusAlgorithm OptUpdateDbaasServiceOpensearchReqIndexMinusPatternsItemSortingMinusAlgorithm `json:"sorting-algorithm"`
	// Fnmatch pattern.
	Pattern OptString `json:"pattern"`
}

// GetMaxMinusIndexMinusCount returns the value of MaxMinusIndexMinusCount.
func (s *UpdateDbaasServiceOpensearchReqIndexMinusPatternsItem) GetMaxMinusIndexMinusCount() OptInt64 {
	return s.MaxMinusIndexMinusCount
}

// GetSortingMinusAlgorithm returns the value of SortingMinusAlgorithm.
func (s *UpdateDbaasServiceOpensearchReqIndexMinusPatternsItem) GetSortingMinusAlgorithm() OptUpdateDbaasServiceOpensearchReqIndexMinusPatternsItemSortingMinusAlgorithm {
	return s.SortingMinusAlgorithm
}

// GetPattern returns the value of Pattern.
func (s *UpdateDbaasServiceOpensearchReqIndexMinusPatternsItem) GetPattern() OptString {
	return s.Pattern
}

// SetMaxMinusIndexMinusCount sets the value of MaxMinusIndexMinusCount.
func (s *UpdateDbaasServiceOpensearchReqIndexMinusPatternsItem) SetMaxMinusIndexMinusCount(val OptInt64) {
	s.MaxMinusIndexMinusCount = val
}

// SetSortingMinusAlgorithm sets the value of SortingMinusAlgorithm.
func (s *UpdateDbaasServiceOpensearchReqIndexMinusPatternsItem) SetSortingMinusAlgorithm(val OptUpdateDbaasServiceOpensearchReqIndexMinusPatternsItemSortingMinusAlgorithm) {
	s.SortingMinusAlgorithm = val
}

// SetPattern sets the value of Pattern.
func (s *UpdateDbaasServiceOpensearchReqIndexMinusPatternsItem) SetPattern(val OptString) {
	s.Pattern = val
}

// Deletion sorting algorithm.
type UpdateDbaasServiceOpensearchReqIndexMinusPatternsItemSortingMinusAlgorithm string

const (
	UpdateDbaasServiceOpensearchReqIndexMinusPatternsItemSortingMinusAlgorithmAlphabetical UpdateDbaasServiceOpensearchReqIndexMinusPatternsItemSortingMinusAlgorithm = "alphabetical"
	UpdateDbaasServiceOpensearchReqIndexMinusPatternsItemSortingMinusAlgorithmCreationDate UpdateDbaasServiceOpensearchReqIndexMinusPatternsItemSortingMinusAlgorithm = "creation_date"
)

// MarshalText implements encoding.TextMarshaler.
func (s UpdateDbaasServiceOpensearchReqIndexMinusPatternsItemSortingMinusAlgorithm) MarshalText() ([]byte, error) {
	switch s {
	case UpdateDbaasServiceOpensearchReqIndexMinusPatternsItemSortingMinusAlgorithmAlphabetical:
		return []byte(s), nil
	case UpdateDbaasServiceOpensearchReqIndexMinusPatternsItemSortingMinusAlgorithmCreationDate:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *UpdateDbaasServiceOpensearchReqIndexMinusPatternsItemSortingMinusAlgorithm) UnmarshalText(data []byte) error {
	switch UpdateDbaasServiceOpensearchReqIndexMinusPatternsItemSortingMinusAlgorithm(data) {
	case UpdateDbaasServiceOpensearchReqIndexMinusPatternsItemSortingMinusAlgorithmAlphabetical:
		*s = UpdateDbaasServiceOpensearchReqIndexMinusPatternsItemSortingMinusAlgorithmAlphabetical
		return nil
	case UpdateDbaasServiceOpensearchReqIndexMinusPatternsItemSortingMinusAlgorithmCreationDate:
		*s = UpdateDbaasServiceOpensearchReqIndexMinusPatternsItemSortingMinusAlgorithmCreationDate
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Template settings for all new indexes.
type UpdateDbaasServiceOpensearchReqIndexMinusTemplate struct {
	// The maximum number of nested JSON objects that a single document can contain across all nested
	// types. This limit helps to prevent out of memory errors when a document contains too many nested
	// objects. Default is 10000.
	MappingMinusNestedMinusObjectsMinusLimit OptInt64 `json:"mapping-nested-objects-limit"`
	// The number of replicas each primary shard has.
	NumberMinusOfMinusReplicas OptInt64 `json:"number-of-replicas"`
	// The number of primary shards that an index should have.
	NumberMinusOfMinusShards OptInt64 `json:"number-of-shards"`
}

// GetMappingMinusNestedMinusObjectsMinusLimit returns the value of MappingMinusNestedMinusObjectsMinusLimit.
func (s *UpdateDbaasServiceOpensearchReqIndexMinusTemplate) GetMappingMinusNestedMinusObjectsMinusLimit() OptInt64 {
	return s.MappingMinusNestedMinusObjectsMinusLimit
}

// GetNumberMinusOfMinusReplicas returns the value of NumberMinusOfMinusReplicas.
func (s *UpdateDbaasServiceOpensearchReqIndexMinusTemplate) GetNumberMinusOfMinusReplicas() OptInt64 {
	return s.NumberMinusOfMinusReplicas
}

// GetNumberMinusOfMinusShards returns the value of NumberMinusOfMinusShards.
func (s *UpdateDbaasServiceOpensearchReqIndexMinusTemplate) GetNumberMinusOfMinusShards() OptInt64 {
	return s.NumberMinusOfMinusShards
}

// SetMappingMinusNestedMinusObjectsMinusLimit sets the value of MappingMinusNestedMinusObjectsMinusLimit.
func (s *UpdateDbaasServiceOpensearchReqIndexMinusTemplate) SetMappingMinusNestedMinusObjectsMinusLimit(val OptInt64) {
	s.MappingMinusNestedMinusObjectsMinusLimit = val
}

// SetNumberMinusOfMinusReplicas sets the value of NumberMinusOfMinusReplicas.
func (s *UpdateDbaasServiceOpensearchReqIndexMinusTemplate) SetNumberMinusOfMinusReplicas(val OptInt64) {
	s.NumberMinusOfMinusReplicas = val
}

// SetNumberMinusOfMinusShards sets the value of NumberMinusOfMinusShards.
func (s *UpdateDbaasServiceOpensearchReqIndexMinusTemplate) SetNumberMinusOfMinusShards(val OptInt64) {
	s.NumberMinusOfMinusShards = val
}

// Automatic maintenance settings.
type UpdateDbaasServiceOpensearchReqMaintenance struct {
	// Day of week for installing updates.
	Dow UpdateDbaasServiceOpensearchReqMaintenanceDow `json:"dow"`
	// Time for installing updates, UTC.
	Time string `json:"time"`
}

// GetDow returns the value of Dow.
func (s *UpdateDbaasServiceOpensearchReqMaintenance) GetDow() UpdateDbaasServiceOpensearchReqMaintenanceDow {
	return s.Dow
}

// GetTime returns the value of Time.
func (s *UpdateDbaasServiceOpensearchReqMaintenance) GetTime() string {
	return s.Time
}

// SetDow sets the value of Dow.
func (s *UpdateDbaasServiceOpensearchReqMaintenance) SetDow(val UpdateDbaasServiceOpensearchReqMaintenanceDow) {
	s.Dow = val
}

// SetTime sets the value of Time.
func (s *UpdateDbaasServiceOpensearchReqMaintenance) SetTime(val string) {
	s.Time = val
}

// Day of week for installing updates.
type UpdateDbaasServiceOpensearchReqMaintenanceDow string

const (
	UpdateDbaasServiceOpensearchReqMaintenanceDowSaturday  UpdateDbaasServiceOpensearchReqMaintenanceDow = "saturday"
	UpdateDbaasServiceOpensearchReqMaintenanceDowTuesday   UpdateDbaasServiceOpensearchReqMaintenanceDow = "tuesday"
	UpdateDbaasServiceOpensearchReqMaintenanceDowNever     UpdateDbaasServiceOpensearchReqMaintenanceDow = "never"
	UpdateDbaasServiceOpensearchReqMaintenanceDowWednesday UpdateDbaasServiceOpensearchReqMaintenanceDow = "wednesday"
	UpdateDbaasServiceOpensearchReqMaintenanceDowSunday    UpdateDbaasServiceOpensearchReqMaintenanceDow = "sunday"
	UpdateDbaasServiceOpensearchReqMaintenanceDowFriday    UpdateDbaasServiceOpensearchReqMaintenanceDow = "friday"
	UpdateDbaasServiceOpensearchReqMaintenanceDowMonday    UpdateDbaasServiceOpensearchReqMaintenanceDow = "monday"
	UpdateDbaasServiceOpensearchReqMaintenanceDowThursday  UpdateDbaasServiceOpensearchReqMaintenanceDow = "thursday"
)

// MarshalText implements encoding.TextMarshaler.
func (s UpdateDbaasServiceOpensearchReqMaintenanceDow) MarshalText() ([]byte, error) {
	switch s {
	case UpdateDbaasServiceOpensearchReqMaintenanceDowSaturday:
		return []byte(s), nil
	case UpdateDbaasServiceOpensearchReqMaintenanceDowTuesday:
		return []byte(s), nil
	case UpdateDbaasServiceOpensearchReqMaintenanceDowNever:
		return []byte(s), nil
	case UpdateDbaasServiceOpensearchReqMaintenanceDowWednesday:
		return []byte(s), nil
	case UpdateDbaasServiceOpensearchReqMaintenanceDowSunday:
		return []byte(s), nil
	case UpdateDbaasServiceOpensearchReqMaintenanceDowFriday:
		return []byte(s), nil
	case UpdateDbaasServiceOpensearchReqMaintenanceDowMonday:
		return []byte(s), nil
	case UpdateDbaasServiceOpensearchReqMaintenanceDowThursday:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *UpdateDbaasServiceOpensearchReqMaintenanceDow) UnmarshalText(data []byte) error {
	switch UpdateDbaasServiceOpensearchReqMaintenanceDow(data) {
	case UpdateDbaasServiceOpensearchReqMaintenanceDowSaturday:
		*s = UpdateDbaasServiceOpensearchReqMaintenanceDowSaturday
		return nil
	case UpdateDbaasServiceOpensearchReqMaintenanceDowTuesday:
		*s = UpdateDbaasServiceOpensearchReqMaintenanceDowTuesday
		return nil
	case UpdateDbaasServiceOpensearchReqMaintenanceDowNever:
		*s = UpdateDbaasServiceOpensearchReqMaintenanceDowNever
		return nil
	case UpdateDbaasServiceOpensearchReqMaintenanceDowWednesday:
		*s = UpdateDbaasServiceOpensearchReqMaintenanceDowWednesday
		return nil
	case UpdateDbaasServiceOpensearchReqMaintenanceDowSunday:
		*s = UpdateDbaasServiceOpensearchReqMaintenanceDowSunday
		return nil
	case UpdateDbaasServiceOpensearchReqMaintenanceDowFriday:
		*s = UpdateDbaasServiceOpensearchReqMaintenanceDowFriday
		return nil
	case UpdateDbaasServiceOpensearchReqMaintenanceDowMonday:
		*s = UpdateDbaasServiceOpensearchReqMaintenanceDowMonday
		return nil
	case UpdateDbaasServiceOpensearchReqMaintenanceDowThursday:
		*s = UpdateDbaasServiceOpensearchReqMaintenanceDowThursday
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// OpenSearch Dashboards settings.
type UpdateDbaasServiceOpensearchReqOpensearchMinusDashboards struct {
	// Timeout in milliseconds for requests made by OpenSearch Dashboards towards OpenSearch (default:
	// 30000).
	OpensearchMinusRequestMinusTimeout OptInt64 `json:"opensearch-request-timeout"`
	// Enable or disable OpenSearch Dashboards (default: true).
	Enabled OptBool `json:"enabled"`
	// Limits the maximum amount of memory (in MiB) the OpenSearch Dashboards process can use. This sets
	// the max_old_space_size option of the nodejs running the OpenSearch Dashboards. Note: the memory
	// reserved by OpenSearch Dashboards is not available for OpenSearch. (default: 128).
	MaxMinusOldMinusSpaceMinusSize OptInt64 `json:"max-old-space-size"`
}

// GetOpensearchMinusRequestMinusTimeout returns the value of OpensearchMinusRequestMinusTimeout.
func (s *UpdateDbaasServiceOpensearchReqOpensearchMinusDashboards) GetOpensearchMinusRequestMinusTimeout() OptInt64 {
	return s.OpensearchMinusRequestMinusTimeout
}

// GetEnabled returns the value of Enabled.
func (s *UpdateDbaasServiceOpensearchReqOpensearchMinusDashboards) GetEnabled() OptBool {
	return s.Enabled
}

// GetMaxMinusOldMinusSpaceMinusSize returns the value of MaxMinusOldMinusSpaceMinusSize.
func (s *UpdateDbaasServiceOpensearchReqOpensearchMinusDashboards) GetMaxMinusOldMinusSpaceMinusSize() OptInt64 {
	return s.MaxMinusOldMinusSpaceMinusSize
}

// SetOpensearchMinusRequestMinusTimeout sets the value of OpensearchMinusRequestMinusTimeout.
func (s *UpdateDbaasServiceOpensearchReqOpensearchMinusDashboards) SetOpensearchMinusRequestMinusTimeout(val OptInt64) {
	s.OpensearchMinusRequestMinusTimeout = val
}

// SetEnabled sets the value of Enabled.
func (s *UpdateDbaasServiceOpensearchReqOpensearchMinusDashboards) SetEnabled(val OptBool) {
	s.Enabled = val
}

// SetMaxMinusOldMinusSpaceMinusSize sets the value of MaxMinusOldMinusSpaceMinusSize.
func (s *UpdateDbaasServiceOpensearchReqOpensearchMinusDashboards) SetMaxMinusOldMinusSpaceMinusSize(val OptInt64) {
	s.MaxMinusOldMinusSpaceMinusSize = val
}

// OpenSearch-specific settings.
type UpdateDbaasServiceOpensearchReqOpensearchMinusSettings struct{}

type UpdateDbaasServicePgReq struct {
	// PGBouncer connection pooling settings.
	PgbouncerMinusSettings *UpdateDbaasServicePgReqPgbouncerMinusSettings `json:"pgbouncer-settings"`
	BackupMinusSchedule    OptUpdateDbaasServicePgReqBackupMinusSchedule  `json:"backup-schedule"`
	// Variant of the PostgreSQL service, may affect the features that are exposed by default.
	Variant OptEnumPgVariant `json:"variant"`
	// TimescaleDB extension configuration values.
	TimescaledbMinusSettings *UpdateDbaasServicePgReqTimescaledbMinusSettings `json:"timescaledb-settings"`
	// Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
	IPMinusFilter []string `json:"ip-filter"`
	// Service is protected against termination and powering off.
	TerminationMinusProtection OptBool `json:"termination-protection"`
	// Synchronous replication type. Note that the service plan also needs to support synchronous
	// replication.
	SynchronousMinusReplication OptEnumPgSynchronousReplication `json:"synchronous-replication"`
	// PGLookout settings.
	PglookoutMinusSettings *UpdateDbaasServicePgReqPglookoutMinusSettings `json:"pglookout-settings"`
	// Automatic maintenance settings.
	Maintenance OptUpdateDbaasServicePgReqMaintenance `json:"maintenance"`
	// Subscription plan.
	Plan OptString `json:"plan"`
	// Sets the maximum amount of memory to be used by a query operation (such as a sort or hash table)
	// before writing to temporary disk files, in MB. Default is 1MB + 0.075% of total RAM (up to 32MB).
	WorkMinusMem OptInt64 `json:"work-mem"`
	// Percentage of total RAM that the database server uses for shared memory buffers. Valid range is
	// 20-60 (float), which corresponds to 20% - 60%. This setting adjusts the shared_buffers
	// configuration value.
	SharedMinusBuffersMinusPercentage OptInt64 `json:"shared-buffers-percentage"`
	// PostgreSQL-specific settings.
	PgMinusSettings *UpdateDbaasServicePgReqPgMinusSettings `json:"pg-settings"`
	// Migrate data from existing server.
	Migration OptUpdateDbaasServicePgReqMigration `json:"migration"`
}

// GetPgbouncerMinusSettings returns the value of PgbouncerMinusSettings.
func (s *UpdateDbaasServicePgReq) GetPgbouncerMinusSettings() *UpdateDbaasServicePgReqPgbouncerMinusSettings {
	return s.PgbouncerMinusSettings
}

// GetBackupMinusSchedule returns the value of BackupMinusSchedule.
func (s *UpdateDbaasServicePgReq) GetBackupMinusSchedule() OptUpdateDbaasServicePgReqBackupMinusSchedule {
	return s.BackupMinusSchedule
}

// GetVariant returns the value of Variant.
func (s *UpdateDbaasServicePgReq) GetVariant() OptEnumPgVariant {
	return s.Variant
}

// GetTimescaledbMinusSettings returns the value of TimescaledbMinusSettings.
func (s *UpdateDbaasServicePgReq) GetTimescaledbMinusSettings() *UpdateDbaasServicePgReqTimescaledbMinusSettings {
	return s.TimescaledbMinusSettings
}

// GetIPMinusFilter returns the value of IPMinusFilter.
func (s *UpdateDbaasServicePgReq) GetIPMinusFilter() []string {
	return s.IPMinusFilter
}

// GetTerminationMinusProtection returns the value of TerminationMinusProtection.
func (s *UpdateDbaasServicePgReq) GetTerminationMinusProtection() OptBool {
	return s.TerminationMinusProtection
}

// GetSynchronousMinusReplication returns the value of SynchronousMinusReplication.
func (s *UpdateDbaasServicePgReq) GetSynchronousMinusReplication() OptEnumPgSynchronousReplication {
	return s.SynchronousMinusReplication
}

// GetPglookoutMinusSettings returns the value of PglookoutMinusSettings.
func (s *UpdateDbaasServicePgReq) GetPglookoutMinusSettings() *UpdateDbaasServicePgReqPglookoutMinusSettings {
	return s.PglookoutMinusSettings
}

// GetMaintenance returns the value of Maintenance.
func (s *UpdateDbaasServicePgReq) GetMaintenance() OptUpdateDbaasServicePgReqMaintenance {
	return s.Maintenance
}

// GetPlan returns the value of Plan.
func (s *UpdateDbaasServicePgReq) GetPlan() OptString {
	return s.Plan
}

// GetWorkMinusMem returns the value of WorkMinusMem.
func (s *UpdateDbaasServicePgReq) GetWorkMinusMem() OptInt64 {
	return s.WorkMinusMem
}

// GetSharedMinusBuffersMinusPercentage returns the value of SharedMinusBuffersMinusPercentage.
func (s *UpdateDbaasServicePgReq) GetSharedMinusBuffersMinusPercentage() OptInt64 {
	return s.SharedMinusBuffersMinusPercentage
}

// GetPgMinusSettings returns the value of PgMinusSettings.
func (s *UpdateDbaasServicePgReq) GetPgMinusSettings() *UpdateDbaasServicePgReqPgMinusSettings {
	return s.PgMinusSettings
}

// GetMigration returns the value of Migration.
func (s *UpdateDbaasServicePgReq) GetMigration() OptUpdateDbaasServicePgReqMigration {
	return s.Migration
}

// SetPgbouncerMinusSettings sets the value of PgbouncerMinusSettings.
func (s *UpdateDbaasServicePgReq) SetPgbouncerMinusSettings(val *UpdateDbaasServicePgReqPgbouncerMinusSettings) {
	s.PgbouncerMinusSettings = val
}

// SetBackupMinusSchedule sets the value of BackupMinusSchedule.
func (s *UpdateDbaasServicePgReq) SetBackupMinusSchedule(val OptUpdateDbaasServicePgReqBackupMinusSchedule) {
	s.BackupMinusSchedule = val
}

// SetVariant sets the value of Variant.
func (s *UpdateDbaasServicePgReq) SetVariant(val OptEnumPgVariant) {
	s.Variant = val
}

// SetTimescaledbMinusSettings sets the value of TimescaledbMinusSettings.
func (s *UpdateDbaasServicePgReq) SetTimescaledbMinusSettings(val *UpdateDbaasServicePgReqTimescaledbMinusSettings) {
	s.TimescaledbMinusSettings = val
}

// SetIPMinusFilter sets the value of IPMinusFilter.
func (s *UpdateDbaasServicePgReq) SetIPMinusFilter(val []string) {
	s.IPMinusFilter = val
}

// SetTerminationMinusProtection sets the value of TerminationMinusProtection.
func (s *UpdateDbaasServicePgReq) SetTerminationMinusProtection(val OptBool) {
	s.TerminationMinusProtection = val
}

// SetSynchronousMinusReplication sets the value of SynchronousMinusReplication.
func (s *UpdateDbaasServicePgReq) SetSynchronousMinusReplication(val OptEnumPgSynchronousReplication) {
	s.SynchronousMinusReplication = val
}

// SetPglookoutMinusSettings sets the value of PglookoutMinusSettings.
func (s *UpdateDbaasServicePgReq) SetPglookoutMinusSettings(val *UpdateDbaasServicePgReqPglookoutMinusSettings) {
	s.PglookoutMinusSettings = val
}

// SetMaintenance sets the value of Maintenance.
func (s *UpdateDbaasServicePgReq) SetMaintenance(val OptUpdateDbaasServicePgReqMaintenance) {
	s.Maintenance = val
}

// SetPlan sets the value of Plan.
func (s *UpdateDbaasServicePgReq) SetPlan(val OptString) {
	s.Plan = val
}

// SetWorkMinusMem sets the value of WorkMinusMem.
func (s *UpdateDbaasServicePgReq) SetWorkMinusMem(val OptInt64) {
	s.WorkMinusMem = val
}

// SetSharedMinusBuffersMinusPercentage sets the value of SharedMinusBuffersMinusPercentage.
func (s *UpdateDbaasServicePgReq) SetSharedMinusBuffersMinusPercentage(val OptInt64) {
	s.SharedMinusBuffersMinusPercentage = val
}

// SetPgMinusSettings sets the value of PgMinusSettings.
func (s *UpdateDbaasServicePgReq) SetPgMinusSettings(val *UpdateDbaasServicePgReqPgMinusSettings) {
	s.PgMinusSettings = val
}

// SetMigration sets the value of Migration.
func (s *UpdateDbaasServicePgReq) SetMigration(val OptUpdateDbaasServicePgReqMigration) {
	s.Migration = val
}

type UpdateDbaasServicePgReqBackupMinusSchedule struct {
	// The hour of day (in UTC) when backup for the service is started. New backup is only started if
	// previous backup has already completed.
	BackupMinusHour OptInt64 `json:"backup-hour"`
	// The minute of an hour when backup for the service is started. New backup is only started if
	// previous backup has already completed.
	BackupMinusMinute OptInt64 `json:"backup-minute"`
}

// GetBackupMinusHour returns the value of BackupMinusHour.
func (s *UpdateDbaasServicePgReqBackupMinusSchedule) GetBackupMinusHour() OptInt64 {
	return s.BackupMinusHour
}

// GetBackupMinusMinute returns the value of BackupMinusMinute.
func (s *UpdateDbaasServicePgReqBackupMinusSchedule) GetBackupMinusMinute() OptInt64 {
	return s.BackupMinusMinute
}

// SetBackupMinusHour sets the value of BackupMinusHour.
func (s *UpdateDbaasServicePgReqBackupMinusSchedule) SetBackupMinusHour(val OptInt64) {
	s.BackupMinusHour = val
}

// SetBackupMinusMinute sets the value of BackupMinusMinute.
func (s *UpdateDbaasServicePgReqBackupMinusSchedule) SetBackupMinusMinute(val OptInt64) {
	s.BackupMinusMinute = val
}

// Automatic maintenance settings.
type UpdateDbaasServicePgReqMaintenance struct {
	// Day of week for installing updates.
	Dow UpdateDbaasServicePgReqMaintenanceDow `json:"dow"`
	// Time for installing updates, UTC.
	Time string `json:"time"`
}

// GetDow returns the value of Dow.
func (s *UpdateDbaasServicePgReqMaintenance) GetDow() UpdateDbaasServicePgReqMaintenanceDow {
	return s.Dow
}

// GetTime returns the value of Time.
func (s *UpdateDbaasServicePgReqMaintenance) GetTime() string {
	return s.Time
}

// SetDow sets the value of Dow.
func (s *UpdateDbaasServicePgReqMaintenance) SetDow(val UpdateDbaasServicePgReqMaintenanceDow) {
	s.Dow = val
}

// SetTime sets the value of Time.
func (s *UpdateDbaasServicePgReqMaintenance) SetTime(val string) {
	s.Time = val
}

// Day of week for installing updates.
type UpdateDbaasServicePgReqMaintenanceDow string

const (
	UpdateDbaasServicePgReqMaintenanceDowSaturday  UpdateDbaasServicePgReqMaintenanceDow = "saturday"
	UpdateDbaasServicePgReqMaintenanceDowTuesday   UpdateDbaasServicePgReqMaintenanceDow = "tuesday"
	UpdateDbaasServicePgReqMaintenanceDowNever     UpdateDbaasServicePgReqMaintenanceDow = "never"
	UpdateDbaasServicePgReqMaintenanceDowWednesday UpdateDbaasServicePgReqMaintenanceDow = "wednesday"
	UpdateDbaasServicePgReqMaintenanceDowSunday    UpdateDbaasServicePgReqMaintenanceDow = "sunday"
	UpdateDbaasServicePgReqMaintenanceDowFriday    UpdateDbaasServicePgReqMaintenanceDow = "friday"
	UpdateDbaasServicePgReqMaintenanceDowMonday    UpdateDbaasServicePgReqMaintenanceDow = "monday"
	UpdateDbaasServicePgReqMaintenanceDowThursday  UpdateDbaasServicePgReqMaintenanceDow = "thursday"
)

// MarshalText implements encoding.TextMarshaler.
func (s UpdateDbaasServicePgReqMaintenanceDow) MarshalText() ([]byte, error) {
	switch s {
	case UpdateDbaasServicePgReqMaintenanceDowSaturday:
		return []byte(s), nil
	case UpdateDbaasServicePgReqMaintenanceDowTuesday:
		return []byte(s), nil
	case UpdateDbaasServicePgReqMaintenanceDowNever:
		return []byte(s), nil
	case UpdateDbaasServicePgReqMaintenanceDowWednesday:
		return []byte(s), nil
	case UpdateDbaasServicePgReqMaintenanceDowSunday:
		return []byte(s), nil
	case UpdateDbaasServicePgReqMaintenanceDowFriday:
		return []byte(s), nil
	case UpdateDbaasServicePgReqMaintenanceDowMonday:
		return []byte(s), nil
	case UpdateDbaasServicePgReqMaintenanceDowThursday:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *UpdateDbaasServicePgReqMaintenanceDow) UnmarshalText(data []byte) error {
	switch UpdateDbaasServicePgReqMaintenanceDow(data) {
	case UpdateDbaasServicePgReqMaintenanceDowSaturday:
		*s = UpdateDbaasServicePgReqMaintenanceDowSaturday
		return nil
	case UpdateDbaasServicePgReqMaintenanceDowTuesday:
		*s = UpdateDbaasServicePgReqMaintenanceDowTuesday
		return nil
	case UpdateDbaasServicePgReqMaintenanceDowNever:
		*s = UpdateDbaasServicePgReqMaintenanceDowNever
		return nil
	case UpdateDbaasServicePgReqMaintenanceDowWednesday:
		*s = UpdateDbaasServicePgReqMaintenanceDowWednesday
		return nil
	case UpdateDbaasServicePgReqMaintenanceDowSunday:
		*s = UpdateDbaasServicePgReqMaintenanceDowSunday
		return nil
	case UpdateDbaasServicePgReqMaintenanceDowFriday:
		*s = UpdateDbaasServicePgReqMaintenanceDowFriday
		return nil
	case UpdateDbaasServicePgReqMaintenanceDowMonday:
		*s = UpdateDbaasServicePgReqMaintenanceDowMonday
		return nil
	case UpdateDbaasServicePgReqMaintenanceDowThursday:
		*s = UpdateDbaasServicePgReqMaintenanceDowThursday
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Migrate data from existing server.
type UpdateDbaasServicePgReqMigration struct {
	// Hostname or IP address of the server where to migrate data from.
	Host string `json:"host"`
	// Port number of the server where to migrate data from.
	Port int64 `json:"port"`
	// Password for authentication with the server where to migrate data from.
	Password OptString `json:"password"`
	// The server where to migrate data from is secured with SSL.
	Ssl OptBool `json:"ssl"`
	// User name for authentication with the server where to migrate data from.
	Username OptString `json:"username"`
	// Database name for bootstrapping the initial connection.
	Dbname OptString `json:"dbname"`
	// Comma-separated list of databases, which should be ignored during migration (supported by MySQL
	// only at the moment).
	IgnoreMinusDbs OptString `json:"ignore-dbs"`
	// The migration method to be used.
	Method OptEnumMigrationMethod `json:"method"`
}

// GetHost returns the value of Host.
func (s *UpdateDbaasServicePgReqMigration) GetHost() string {
	return s.Host
}

// GetPort returns the value of Port.
func (s *UpdateDbaasServicePgReqMigration) GetPort() int64 {
	return s.Port
}

// GetPassword returns the value of Password.
func (s *UpdateDbaasServicePgReqMigration) GetPassword() OptString {
	return s.Password
}

// GetSsl returns the value of Ssl.
func (s *UpdateDbaasServicePgReqMigration) GetSsl() OptBool {
	return s.Ssl
}

// GetUsername returns the value of Username.
func (s *UpdateDbaasServicePgReqMigration) GetUsername() OptString {
	return s.Username
}

// GetDbname returns the value of Dbname.
func (s *UpdateDbaasServicePgReqMigration) GetDbname() OptString {
	return s.Dbname
}

// GetIgnoreMinusDbs returns the value of IgnoreMinusDbs.
func (s *UpdateDbaasServicePgReqMigration) GetIgnoreMinusDbs() OptString {
	return s.IgnoreMinusDbs
}

// GetMethod returns the value of Method.
func (s *UpdateDbaasServicePgReqMigration) GetMethod() OptEnumMigrationMethod {
	return s.Method
}

// SetHost sets the value of Host.
func (s *UpdateDbaasServicePgReqMigration) SetHost(val string) {
	s.Host = val
}

// SetPort sets the value of Port.
func (s *UpdateDbaasServicePgReqMigration) SetPort(val int64) {
	s.Port = val
}

// SetPassword sets the value of Password.
func (s *UpdateDbaasServicePgReqMigration) SetPassword(val OptString) {
	s.Password = val
}

// SetSsl sets the value of Ssl.
func (s *UpdateDbaasServicePgReqMigration) SetSsl(val OptBool) {
	s.Ssl = val
}

// SetUsername sets the value of Username.
func (s *UpdateDbaasServicePgReqMigration) SetUsername(val OptString) {
	s.Username = val
}

// SetDbname sets the value of Dbname.
func (s *UpdateDbaasServicePgReqMigration) SetDbname(val OptString) {
	s.Dbname = val
}

// SetIgnoreMinusDbs sets the value of IgnoreMinusDbs.
func (s *UpdateDbaasServicePgReqMigration) SetIgnoreMinusDbs(val OptString) {
	s.IgnoreMinusDbs = val
}

// SetMethod sets the value of Method.
func (s *UpdateDbaasServicePgReqMigration) SetMethod(val OptEnumMigrationMethod) {
	s.Method = val
}

// PostgreSQL-specific settings.
type UpdateDbaasServicePgReqPgMinusSettings struct{}

// PGBouncer connection pooling settings.
type UpdateDbaasServicePgReqPgbouncerMinusSettings struct{}

// PGLookout settings.
type UpdateDbaasServicePgReqPglookoutMinusSettings struct{}

// TimescaleDB extension configuration values.
type UpdateDbaasServicePgReqTimescaledbMinusSettings struct{}

type UpdateDbaasServiceRedisReq struct {
	// Automatic maintenance settings.
	Maintenance OptUpdateDbaasServiceRedisReqMaintenance `json:"maintenance"`
	// Subscription plan.
	Plan OptString `json:"plan"`
	// Service is protected against termination and powering off.
	TerminationMinusProtection OptBool `json:"termination-protection"`
	// Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
	IPMinusFilter []string `json:"ip-filter"`
	// Migrate data from existing server.
	Migration OptUpdateDbaasServiceRedisReqMigration `json:"migration"`
	// Redis.conf settings.
	RedisMinusSettings *UpdateDbaasServiceRedisReqRedisMinusSettings `json:"redis-settings"`
}

// GetMaintenance returns the value of Maintenance.
func (s *UpdateDbaasServiceRedisReq) GetMaintenance() OptUpdateDbaasServiceRedisReqMaintenance {
	return s.Maintenance
}

// GetPlan returns the value of Plan.
func (s *UpdateDbaasServiceRedisReq) GetPlan() OptString {
	return s.Plan
}

// GetTerminationMinusProtection returns the value of TerminationMinusProtection.
func (s *UpdateDbaasServiceRedisReq) GetTerminationMinusProtection() OptBool {
	return s.TerminationMinusProtection
}

// GetIPMinusFilter returns the value of IPMinusFilter.
func (s *UpdateDbaasServiceRedisReq) GetIPMinusFilter() []string {
	return s.IPMinusFilter
}

// GetMigration returns the value of Migration.
func (s *UpdateDbaasServiceRedisReq) GetMigration() OptUpdateDbaasServiceRedisReqMigration {
	return s.Migration
}

// GetRedisMinusSettings returns the value of RedisMinusSettings.
func (s *UpdateDbaasServiceRedisReq) GetRedisMinusSettings() *UpdateDbaasServiceRedisReqRedisMinusSettings {
	return s.RedisMinusSettings
}

// SetMaintenance sets the value of Maintenance.
func (s *UpdateDbaasServiceRedisReq) SetMaintenance(val OptUpdateDbaasServiceRedisReqMaintenance) {
	s.Maintenance = val
}

// SetPlan sets the value of Plan.
func (s *UpdateDbaasServiceRedisReq) SetPlan(val OptString) {
	s.Plan = val
}

// SetTerminationMinusProtection sets the value of TerminationMinusProtection.
func (s *UpdateDbaasServiceRedisReq) SetTerminationMinusProtection(val OptBool) {
	s.TerminationMinusProtection = val
}

// SetIPMinusFilter sets the value of IPMinusFilter.
func (s *UpdateDbaasServiceRedisReq) SetIPMinusFilter(val []string) {
	s.IPMinusFilter = val
}

// SetMigration sets the value of Migration.
func (s *UpdateDbaasServiceRedisReq) SetMigration(val OptUpdateDbaasServiceRedisReqMigration) {
	s.Migration = val
}

// SetRedisMinusSettings sets the value of RedisMinusSettings.
func (s *UpdateDbaasServiceRedisReq) SetRedisMinusSettings(val *UpdateDbaasServiceRedisReqRedisMinusSettings) {
	s.RedisMinusSettings = val
}

// Automatic maintenance settings.
type UpdateDbaasServiceRedisReqMaintenance struct {
	// Day of week for installing updates.
	Dow UpdateDbaasServiceRedisReqMaintenanceDow `json:"dow"`
	// Time for installing updates, UTC.
	Time string `json:"time"`
}

// GetDow returns the value of Dow.
func (s *UpdateDbaasServiceRedisReqMaintenance) GetDow() UpdateDbaasServiceRedisReqMaintenanceDow {
	return s.Dow
}

// GetTime returns the value of Time.
func (s *UpdateDbaasServiceRedisReqMaintenance) GetTime() string {
	return s.Time
}

// SetDow sets the value of Dow.
func (s *UpdateDbaasServiceRedisReqMaintenance) SetDow(val UpdateDbaasServiceRedisReqMaintenanceDow) {
	s.Dow = val
}

// SetTime sets the value of Time.
func (s *UpdateDbaasServiceRedisReqMaintenance) SetTime(val string) {
	s.Time = val
}

// Day of week for installing updates.
type UpdateDbaasServiceRedisReqMaintenanceDow string

const (
	UpdateDbaasServiceRedisReqMaintenanceDowSaturday  UpdateDbaasServiceRedisReqMaintenanceDow = "saturday"
	UpdateDbaasServiceRedisReqMaintenanceDowTuesday   UpdateDbaasServiceRedisReqMaintenanceDow = "tuesday"
	UpdateDbaasServiceRedisReqMaintenanceDowNever     UpdateDbaasServiceRedisReqMaintenanceDow = "never"
	UpdateDbaasServiceRedisReqMaintenanceDowWednesday UpdateDbaasServiceRedisReqMaintenanceDow = "wednesday"
	UpdateDbaasServiceRedisReqMaintenanceDowSunday    UpdateDbaasServiceRedisReqMaintenanceDow = "sunday"
	UpdateDbaasServiceRedisReqMaintenanceDowFriday    UpdateDbaasServiceRedisReqMaintenanceDow = "friday"
	UpdateDbaasServiceRedisReqMaintenanceDowMonday    UpdateDbaasServiceRedisReqMaintenanceDow = "monday"
	UpdateDbaasServiceRedisReqMaintenanceDowThursday  UpdateDbaasServiceRedisReqMaintenanceDow = "thursday"
)

// MarshalText implements encoding.TextMarshaler.
func (s UpdateDbaasServiceRedisReqMaintenanceDow) MarshalText() ([]byte, error) {
	switch s {
	case UpdateDbaasServiceRedisReqMaintenanceDowSaturday:
		return []byte(s), nil
	case UpdateDbaasServiceRedisReqMaintenanceDowTuesday:
		return []byte(s), nil
	case UpdateDbaasServiceRedisReqMaintenanceDowNever:
		return []byte(s), nil
	case UpdateDbaasServiceRedisReqMaintenanceDowWednesday:
		return []byte(s), nil
	case UpdateDbaasServiceRedisReqMaintenanceDowSunday:
		return []byte(s), nil
	case UpdateDbaasServiceRedisReqMaintenanceDowFriday:
		return []byte(s), nil
	case UpdateDbaasServiceRedisReqMaintenanceDowMonday:
		return []byte(s), nil
	case UpdateDbaasServiceRedisReqMaintenanceDowThursday:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *UpdateDbaasServiceRedisReqMaintenanceDow) UnmarshalText(data []byte) error {
	switch UpdateDbaasServiceRedisReqMaintenanceDow(data) {
	case UpdateDbaasServiceRedisReqMaintenanceDowSaturday:
		*s = UpdateDbaasServiceRedisReqMaintenanceDowSaturday
		return nil
	case UpdateDbaasServiceRedisReqMaintenanceDowTuesday:
		*s = UpdateDbaasServiceRedisReqMaintenanceDowTuesday
		return nil
	case UpdateDbaasServiceRedisReqMaintenanceDowNever:
		*s = UpdateDbaasServiceRedisReqMaintenanceDowNever
		return nil
	case UpdateDbaasServiceRedisReqMaintenanceDowWednesday:
		*s = UpdateDbaasServiceRedisReqMaintenanceDowWednesday
		return nil
	case UpdateDbaasServiceRedisReqMaintenanceDowSunday:
		*s = UpdateDbaasServiceRedisReqMaintenanceDowSunday
		return nil
	case UpdateDbaasServiceRedisReqMaintenanceDowFriday:
		*s = UpdateDbaasServiceRedisReqMaintenanceDowFriday
		return nil
	case UpdateDbaasServiceRedisReqMaintenanceDowMonday:
		*s = UpdateDbaasServiceRedisReqMaintenanceDowMonday
		return nil
	case UpdateDbaasServiceRedisReqMaintenanceDowThursday:
		*s = UpdateDbaasServiceRedisReqMaintenanceDowThursday
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Migrate data from existing server.
type UpdateDbaasServiceRedisReqMigration struct {
	// Hostname or IP address of the server where to migrate data from.
	Host string `json:"host"`
	// Port number of the server where to migrate data from.
	Port int64 `json:"port"`
	// Password for authentication with the server where to migrate data from.
	Password OptString `json:"password"`
	// The server where to migrate data from is secured with SSL.
	Ssl OptBool `json:"ssl"`
	// User name for authentication with the server where to migrate data from.
	Username OptString `json:"username"`
	// Database name for bootstrapping the initial connection.
	Dbname OptString `json:"dbname"`
	// Comma-separated list of databases, which should be ignored during migration (supported by MySQL
	// only at the moment).
	IgnoreMinusDbs OptString `json:"ignore-dbs"`
	// The migration method to be used.
	Method OptEnumMigrationMethod `json:"method"`
}

// GetHost returns the value of Host.
func (s *UpdateDbaasServiceRedisReqMigration) GetHost() string {
	return s.Host
}

// GetPort returns the value of Port.
func (s *UpdateDbaasServiceRedisReqMigration) GetPort() int64 {
	return s.Port
}

// GetPassword returns the value of Password.
func (s *UpdateDbaasServiceRedisReqMigration) GetPassword() OptString {
	return s.Password
}

// GetSsl returns the value of Ssl.
func (s *UpdateDbaasServiceRedisReqMigration) GetSsl() OptBool {
	return s.Ssl
}

// GetUsername returns the value of Username.
func (s *UpdateDbaasServiceRedisReqMigration) GetUsername() OptString {
	return s.Username
}

// GetDbname returns the value of Dbname.
func (s *UpdateDbaasServiceRedisReqMigration) GetDbname() OptString {
	return s.Dbname
}

// GetIgnoreMinusDbs returns the value of IgnoreMinusDbs.
func (s *UpdateDbaasServiceRedisReqMigration) GetIgnoreMinusDbs() OptString {
	return s.IgnoreMinusDbs
}

// GetMethod returns the value of Method.
func (s *UpdateDbaasServiceRedisReqMigration) GetMethod() OptEnumMigrationMethod {
	return s.Method
}

// SetHost sets the value of Host.
func (s *UpdateDbaasServiceRedisReqMigration) SetHost(val string) {
	s.Host = val
}

// SetPort sets the value of Port.
func (s *UpdateDbaasServiceRedisReqMigration) SetPort(val int64) {
	s.Port = val
}

// SetPassword sets the value of Password.
func (s *UpdateDbaasServiceRedisReqMigration) SetPassword(val OptString) {
	s.Password = val
}

// SetSsl sets the value of Ssl.
func (s *UpdateDbaasServiceRedisReqMigration) SetSsl(val OptBool) {
	s.Ssl = val
}

// SetUsername sets the value of Username.
func (s *UpdateDbaasServiceRedisReqMigration) SetUsername(val OptString) {
	s.Username = val
}

// SetDbname sets the value of Dbname.
func (s *UpdateDbaasServiceRedisReqMigration) SetDbname(val OptString) {
	s.Dbname = val
}

// SetIgnoreMinusDbs sets the value of IgnoreMinusDbs.
func (s *UpdateDbaasServiceRedisReqMigration) SetIgnoreMinusDbs(val OptString) {
	s.IgnoreMinusDbs = val
}

// SetMethod sets the value of Method.
func (s *UpdateDbaasServiceRedisReqMigration) SetMethod(val OptEnumMigrationMethod) {
	s.Method = val
}

// Redis.conf settings.
type UpdateDbaasServiceRedisReqRedisMinusSettings struct{}

type UpdateElasticIPReq struct {
	// Elastic IP description.
	Description OptString `json:"description"`
	// Elastic IP healthcheck.
	Healthcheck OptElasticIPHealthcheck `json:"healthcheck"`
	// Elastic IP labels.
	Labels OptLabels `json:"labels"`
}

// GetDescription returns the value of Description.
func (s *UpdateElasticIPReq) GetDescription() OptString {
	return s.Description
}

// GetHealthcheck returns the value of Healthcheck.
func (s *UpdateElasticIPReq) GetHealthcheck() OptElasticIPHealthcheck {
	return s.Healthcheck
}

// GetLabels returns the value of Labels.
func (s *UpdateElasticIPReq) GetLabels() OptLabels {
	return s.Labels
}

// SetDescription sets the value of Description.
func (s *UpdateElasticIPReq) SetDescription(val OptString) {
	s.Description = val
}

// SetHealthcheck sets the value of Healthcheck.
func (s *UpdateElasticIPReq) SetHealthcheck(val OptElasticIPHealthcheck) {
	s.Healthcheck = val
}

// SetLabels sets the value of Labels.
func (s *UpdateElasticIPReq) SetLabels(val OptLabels) {
	s.Labels = val
}

type UpdateIamRoleReq struct {
	// IAM Role description.
	Description OptString `json:"description"`
	// IAM Role labels.
	Labels OptLabels `json:"labels"`
}

// GetDescription returns the value of Description.
func (s *UpdateIamRoleReq) GetDescription() OptString {
	return s.Description
}

// GetLabels returns the value of Labels.
func (s *UpdateIamRoleReq) GetLabels() OptLabels {
	return s.Labels
}

// SetDescription sets the value of Description.
func (s *UpdateIamRoleReq) SetDescription(val OptString) {
	s.Description = val
}

// SetLabels sets the value of Labels.
func (s *UpdateIamRoleReq) SetLabels(val OptLabels) {
	s.Labels = val
}

type UpdateInstanceReq struct {
	// Instance name.
	Name OptString `json:"name"`
	// Instance Cloud-init user-data.
	UserMinusData OptString `json:"user-data"`
	// Assign public IP to the Instance.
	PublicMinusIPMinusAssignment OptPublicIPAssignment `json:"public-ip-assignment"`
	// Instance labels.
	Labels OptLabels `json:"labels"`
}

// GetName returns the value of Name.
func (s *UpdateInstanceReq) GetName() OptString {
	return s.Name
}

// GetUserMinusData returns the value of UserMinusData.
func (s *UpdateInstanceReq) GetUserMinusData() OptString {
	return s.UserMinusData
}

// GetPublicMinusIPMinusAssignment returns the value of PublicMinusIPMinusAssignment.
func (s *UpdateInstanceReq) GetPublicMinusIPMinusAssignment() OptPublicIPAssignment {
	return s.PublicMinusIPMinusAssignment
}

// GetLabels returns the value of Labels.
func (s *UpdateInstanceReq) GetLabels() OptLabels {
	return s.Labels
}

// SetName sets the value of Name.
func (s *UpdateInstanceReq) SetName(val OptString) {
	s.Name = val
}

// SetUserMinusData sets the value of UserMinusData.
func (s *UpdateInstanceReq) SetUserMinusData(val OptString) {
	s.UserMinusData = val
}

// SetPublicMinusIPMinusAssignment sets the value of PublicMinusIPMinusAssignment.
func (s *UpdateInstanceReq) SetPublicMinusIPMinusAssignment(val OptPublicIPAssignment) {
	s.PublicMinusIPMinusAssignment = val
}

// SetLabels sets the value of Labels.
func (s *UpdateInstanceReq) SetLabels(val OptLabels) {
	s.Labels = val
}

type UpdateLoadBalancerReq struct {
	Name        OptString    `json:"name"`
	Description OptNilString `json:"description"`
	Labels      OptLabels    `json:"labels"`
}

// GetName returns the value of Name.
func (s *UpdateLoadBalancerReq) GetName() OptString {
	return s.Name
}

// GetDescription returns the value of Description.
func (s *UpdateLoadBalancerReq) GetDescription() OptNilString {
	return s.Description
}

// GetLabels returns the value of Labels.
func (s *UpdateLoadBalancerReq) GetLabels() OptLabels {
	return s.Labels
}

// SetName sets the value of Name.
func (s *UpdateLoadBalancerReq) SetName(val OptString) {
	s.Name = val
}

// SetDescription sets the value of Description.
func (s *UpdateLoadBalancerReq) SetDescription(val OptNilString) {
	s.Description = val
}

// SetLabels sets the value of Labels.
func (s *UpdateLoadBalancerReq) SetLabels(val OptLabels) {
	s.Labels = val
}

type UpdateLoadBalancerServiceReq struct {
	// Load Balancer Service name.
	Name OptString `json:"name"`
	// Load Balancer Service description.
	Description OptNilString `json:"description"`
	// Network traffic protocol.
	Protocol OptUpdateLoadBalancerServiceReqProtocol `json:"protocol"`
	// Load balancing strategy.
	Strategy OptUpdateLoadBalancerServiceReqStrategy `json:"strategy"`
	// Port exposed on the Load Balancer's public IP.
	Port OptInt64 `json:"port"`
	// Port on which the network traffic will be forwarded to on the receiving instance.
	TargetMinusPort OptInt64 `json:"target-port"`
	// Healthcheck configuration.
	Healthcheck OptLoadBalancerServiceHealthcheck `json:"healthcheck"`
}

// GetName returns the value of Name.
func (s *UpdateLoadBalancerServiceReq) GetName() OptString {
	return s.Name
}

// GetDescription returns the value of Description.
func (s *UpdateLoadBalancerServiceReq) GetDescription() OptNilString {
	return s.Description
}

// GetProtocol returns the value of Protocol.
func (s *UpdateLoadBalancerServiceReq) GetProtocol() OptUpdateLoadBalancerServiceReqProtocol {
	return s.Protocol
}

// GetStrategy returns the value of Strategy.
func (s *UpdateLoadBalancerServiceReq) GetStrategy() OptUpdateLoadBalancerServiceReqStrategy {
	return s.Strategy
}

// GetPort returns the value of Port.
func (s *UpdateLoadBalancerServiceReq) GetPort() OptInt64 {
	return s.Port
}

// GetTargetMinusPort returns the value of TargetMinusPort.
func (s *UpdateLoadBalancerServiceReq) GetTargetMinusPort() OptInt64 {
	return s.TargetMinusPort
}

// GetHealthcheck returns the value of Healthcheck.
func (s *UpdateLoadBalancerServiceReq) GetHealthcheck() OptLoadBalancerServiceHealthcheck {
	return s.Healthcheck
}

// SetName sets the value of Name.
func (s *UpdateLoadBalancerServiceReq) SetName(val OptString) {
	s.Name = val
}

// SetDescription sets the value of Description.
func (s *UpdateLoadBalancerServiceReq) SetDescription(val OptNilString) {
	s.Description = val
}

// SetProtocol sets the value of Protocol.
func (s *UpdateLoadBalancerServiceReq) SetProtocol(val OptUpdateLoadBalancerServiceReqProtocol) {
	s.Protocol = val
}

// SetStrategy sets the value of Strategy.
func (s *UpdateLoadBalancerServiceReq) SetStrategy(val OptUpdateLoadBalancerServiceReqStrategy) {
	s.Strategy = val
}

// SetPort sets the value of Port.
func (s *UpdateLoadBalancerServiceReq) SetPort(val OptInt64) {
	s.Port = val
}

// SetTargetMinusPort sets the value of TargetMinusPort.
func (s *UpdateLoadBalancerServiceReq) SetTargetMinusPort(val OptInt64) {
	s.TargetMinusPort = val
}

// SetHealthcheck sets the value of Healthcheck.
func (s *UpdateLoadBalancerServiceReq) SetHealthcheck(val OptLoadBalancerServiceHealthcheck) {
	s.Healthcheck = val
}

// Network traffic protocol.
type UpdateLoadBalancerServiceReqProtocol string

const (
	UpdateLoadBalancerServiceReqProtocolTCP UpdateLoadBalancerServiceReqProtocol = "tcp"
	UpdateLoadBalancerServiceReqProtocolUDP UpdateLoadBalancerServiceReqProtocol = "udp"
)

// MarshalText implements encoding.TextMarshaler.
func (s UpdateLoadBalancerServiceReqProtocol) MarshalText() ([]byte, error) {
	switch s {
	case UpdateLoadBalancerServiceReqProtocolTCP:
		return []byte(s), nil
	case UpdateLoadBalancerServiceReqProtocolUDP:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *UpdateLoadBalancerServiceReqProtocol) UnmarshalText(data []byte) error {
	switch UpdateLoadBalancerServiceReqProtocol(data) {
	case UpdateLoadBalancerServiceReqProtocolTCP:
		*s = UpdateLoadBalancerServiceReqProtocolTCP
		return nil
	case UpdateLoadBalancerServiceReqProtocolUDP:
		*s = UpdateLoadBalancerServiceReqProtocolUDP
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Load balancing strategy.
type UpdateLoadBalancerServiceReqStrategy string

const (
	UpdateLoadBalancerServiceReqStrategyRoundRobin UpdateLoadBalancerServiceReqStrategy = "round-robin"
	UpdateLoadBalancerServiceReqStrategySourceHash UpdateLoadBalancerServiceReqStrategy = "source-hash"
)

// MarshalText implements encoding.TextMarshaler.
func (s UpdateLoadBalancerServiceReqStrategy) MarshalText() ([]byte, error) {
	switch s {
	case UpdateLoadBalancerServiceReqStrategyRoundRobin:
		return []byte(s), nil
	case UpdateLoadBalancerServiceReqStrategySourceHash:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *UpdateLoadBalancerServiceReqStrategy) UnmarshalText(data []byte) error {
	switch UpdateLoadBalancerServiceReqStrategy(data) {
	case UpdateLoadBalancerServiceReqStrategyRoundRobin:
		*s = UpdateLoadBalancerServiceReqStrategyRoundRobin
		return nil
	case UpdateLoadBalancerServiceReqStrategySourceHash:
		*s = UpdateLoadBalancerServiceReqStrategySourceHash
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type UpdatePrivateNetworkReq struct {
	// Private Network name.
	Name OptString `json:"name"`
	// Private Network description.
	Description OptString `json:"description"`
	// Private Network netmask.
	Netmask OptIPv4 `json:"netmask"`
	// Private Network start IP address.
	StartMinusIP OptIPv4 `json:"start-ip"`
	// Private Network end IP address.
	EndMinusIP OptIPv4 `json:"end-ip"`
	// Private Network labels.
	Labels OptLabels `json:"labels"`
}

// GetName returns the value of Name.
func (s *UpdatePrivateNetworkReq) GetName() OptString {
	return s.Name
}

// GetDescription returns the value of Description.
func (s *UpdatePrivateNetworkReq) GetDescription() OptString {
	return s.Description
}

// GetNetmask returns the value of Netmask.
func (s *UpdatePrivateNetworkReq) GetNetmask() OptIPv4 {
	return s.Netmask
}

// GetStartMinusIP returns the value of StartMinusIP.
func (s *UpdatePrivateNetworkReq) GetStartMinusIP() OptIPv4 {
	return s.StartMinusIP
}

// GetEndMinusIP returns the value of EndMinusIP.
func (s *UpdatePrivateNetworkReq) GetEndMinusIP() OptIPv4 {
	return s.EndMinusIP
}

// GetLabels returns the value of Labels.
func (s *UpdatePrivateNetworkReq) GetLabels() OptLabels {
	return s.Labels
}

// SetName sets the value of Name.
func (s *UpdatePrivateNetworkReq) SetName(val OptString) {
	s.Name = val
}

// SetDescription sets the value of Description.
func (s *UpdatePrivateNetworkReq) SetDescription(val OptString) {
	s.Description = val
}

// SetNetmask sets the value of Netmask.
func (s *UpdatePrivateNetworkReq) SetNetmask(val OptIPv4) {
	s.Netmask = val
}

// SetStartMinusIP sets the value of StartMinusIP.
func (s *UpdatePrivateNetworkReq) SetStartMinusIP(val OptIPv4) {
	s.StartMinusIP = val
}

// SetEndMinusIP sets the value of EndMinusIP.
func (s *UpdatePrivateNetworkReq) SetEndMinusIP(val OptIPv4) {
	s.EndMinusIP = val
}

// SetLabels sets the value of Labels.
func (s *UpdatePrivateNetworkReq) SetLabels(val OptLabels) {
	s.Labels = val
}

type UpdateReverseDNSElasticIPReq struct {
	DomainMinusName OptString `json:"domain-name"`
}

// GetDomainMinusName returns the value of DomainMinusName.
func (s *UpdateReverseDNSElasticIPReq) GetDomainMinusName() OptString {
	return s.DomainMinusName
}

// SetDomainMinusName sets the value of DomainMinusName.
func (s *UpdateReverseDNSElasticIPReq) SetDomainMinusName(val OptString) {
	s.DomainMinusName = val
}

type UpdateReverseDNSInstanceReq struct {
	DomainMinusName OptString `json:"domain-name"`
}

// GetDomainMinusName returns the value of DomainMinusName.
func (s *UpdateReverseDNSInstanceReq) GetDomainMinusName() OptString {
	return s.DomainMinusName
}

// SetDomainMinusName sets the value of DomainMinusName.
func (s *UpdateReverseDNSInstanceReq) SetDomainMinusName(val OptString) {
	s.DomainMinusName = val
}

type UpdateSksClusterReq struct {
	// Cluster name.
	Name OptString `json:"name"`
	// Cluster description.
	Description OptNilString `json:"description"`
	// Cluster labels.
	Labels OptLabels `json:"labels"`
	// Enable auto upgrade of the control plane to the latest patch version available.
	AutoMinusUpgrade OptBool `json:"auto-upgrade"`
	// Cluster addons.
	Addons []UpdateSksClusterReqAddonsItem `json:"addons"`
}

// GetName returns the value of Name.
func (s *UpdateSksClusterReq) GetName() OptString {
	return s.Name
}

// GetDescription returns the value of Description.
func (s *UpdateSksClusterReq) GetDescription() OptNilString {
	return s.Description
}

// GetLabels returns the value of Labels.
func (s *UpdateSksClusterReq) GetLabels() OptLabels {
	return s.Labels
}

// GetAutoMinusUpgrade returns the value of AutoMinusUpgrade.
func (s *UpdateSksClusterReq) GetAutoMinusUpgrade() OptBool {
	return s.AutoMinusUpgrade
}

// GetAddons returns the value of Addons.
func (s *UpdateSksClusterReq) GetAddons() []UpdateSksClusterReqAddonsItem {
	return s.Addons
}

// SetName sets the value of Name.
func (s *UpdateSksClusterReq) SetName(val OptString) {
	s.Name = val
}

// SetDescription sets the value of Description.
func (s *UpdateSksClusterReq) SetDescription(val OptNilString) {
	s.Description = val
}

// SetLabels sets the value of Labels.
func (s *UpdateSksClusterReq) SetLabels(val OptLabels) {
	s.Labels = val
}

// SetAutoMinusUpgrade sets the value of AutoMinusUpgrade.
func (s *UpdateSksClusterReq) SetAutoMinusUpgrade(val OptBool) {
	s.AutoMinusUpgrade = val
}

// SetAddons sets the value of Addons.
func (s *UpdateSksClusterReq) SetAddons(val []UpdateSksClusterReqAddonsItem) {
	s.Addons = val
}

type UpdateSksClusterReqAddonsItem string

const (
	UpdateSksClusterReqAddonsItemExoscaleCloudController UpdateSksClusterReqAddonsItem = "exoscale-cloud-controller"
	UpdateSksClusterReqAddonsItemMetricsServer           UpdateSksClusterReqAddonsItem = "metrics-server"
)

// MarshalText implements encoding.TextMarshaler.
func (s UpdateSksClusterReqAddonsItem) MarshalText() ([]byte, error) {
	switch s {
	case UpdateSksClusterReqAddonsItemExoscaleCloudController:
		return []byte(s), nil
	case UpdateSksClusterReqAddonsItemMetricsServer:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *UpdateSksClusterReqAddonsItem) UnmarshalText(data []byte) error {
	switch UpdateSksClusterReqAddonsItem(data) {
	case UpdateSksClusterReqAddonsItemExoscaleCloudController:
		*s = UpdateSksClusterReqAddonsItemExoscaleCloudController
		return nil
	case UpdateSksClusterReqAddonsItemMetricsServer:
		*s = UpdateSksClusterReqAddonsItemMetricsServer
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type UpdateTemplateReq struct {
	// Template name.
	Name OptString `json:"name"`
	// Template Description.
	Description OptString `json:"description"`
}

// GetName returns the value of Name.
func (s *UpdateTemplateReq) GetName() OptString {
	return s.Name
}

// GetDescription returns the value of Description.
func (s *UpdateTemplateReq) GetDescription() OptString {
	return s.Description
}

// SetName sets the value of Name.
func (s *UpdateTemplateReq) SetName(val OptString) {
	s.Name = val
}

// SetDescription sets the value of Description.
func (s *UpdateTemplateReq) SetDescription(val OptString) {
	s.Description = val
}

type UpgradeSksClusterReq struct {
	// Control plane Kubernetes version.
	Version string `json:"version"`
}

// GetVersion returns the value of Version.
func (s *UpgradeSksClusterReq) GetVersion() string {
	return s.Version
}

// SetVersion sets the value of Version.
func (s *UpgradeSksClusterReq) SetVersion(val string) {
	s.Version = val
}

// Zone.
// Ref: #/components/schemas/zone
type Zone struct {
	// Zone short name.
	Name OptZoneName `json:"name"`
}

// GetName returns the value of Name.
func (s *Zone) GetName() OptZoneName {
	return s.Name
}

// SetName sets the value of Name.
func (s *Zone) SetName(val OptZoneName) {
	s.Name = val
}

// Ref: #/components/schemas/zone-name
type ZoneName string

const (
	ZoneNameChDk2  ZoneName = "ch-dk-2"
	ZoneNameDeMuc1 ZoneName = "de-muc-1"
	ZoneNameChGva2 ZoneName = "ch-gva-2"
	ZoneNameAtVie1 ZoneName = "at-vie-1"
	ZoneNameDeFra1 ZoneName = "de-fra-1"
	ZoneNameBgSof1 ZoneName = "bg-sof-1"
	ZoneNameAtVie2 ZoneName = "at-vie-2"
)

// MarshalText implements encoding.TextMarshaler.
func (s ZoneName) MarshalText() ([]byte, error) {
	switch s {
	case ZoneNameChDk2:
		return []byte(s), nil
	case ZoneNameDeMuc1:
		return []byte(s), nil
	case ZoneNameChGva2:
		return []byte(s), nil
	case ZoneNameAtVie1:
		return []byte(s), nil
	case ZoneNameDeFra1:
		return []byte(s), nil
	case ZoneNameBgSof1:
		return []byte(s), nil
	case ZoneNameAtVie2:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *ZoneName) UnmarshalText(data []byte) error {
	switch ZoneName(data) {
	case ZoneNameChDk2:
		*s = ZoneNameChDk2
		return nil
	case ZoneNameDeMuc1:
		*s = ZoneNameDeMuc1
		return nil
	case ZoneNameChGva2:
		*s = ZoneNameChGva2
		return nil
	case ZoneNameAtVie1:
		*s = ZoneNameAtVie1
		return nil
	case ZoneNameDeFra1:
		*s = ZoneNameDeFra1
		return nil
	case ZoneNameBgSof1:
		*s = ZoneNameBgSof1
		return nil
	case ZoneNameAtVie2:
		*s = ZoneNameAtVie2
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}
