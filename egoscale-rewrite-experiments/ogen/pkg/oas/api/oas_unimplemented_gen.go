// Code generated by ogen, DO NOT EDIT.

package api

import (
	"context"

	ht "github.com/ogen-go/ogen/http"
)

// UnimplementedHandler is no-op Handler which returns http.ErrNotImplemented.
type UnimplementedHandler struct{}

var _ Handler = UnimplementedHandler{}

// AddExternalSourceToSecurityGroup implements add-external-source-to-security-group operation.
//
// Add an external source as a member of a Security Group.
//
// PUT /security-group/{id}:add-source
func (UnimplementedHandler) AddExternalSourceToSecurityGroup(ctx context.Context, req *AddExternalSourceToSecurityGroupReq, params AddExternalSourceToSecurityGroupParams) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// AddInstanceProtection implements add-instance-protection operation.
//
// Set instance destruction protection.
//
// PUT /instance/{id}:add-protection
func (UnimplementedHandler) AddInstanceProtection(ctx context.Context, params AddInstanceProtectionParams) error {
	return ht.ErrNotImplemented
}

// AddRuleToSecurityGroup implements add-rule-to-security-group operation.
//
// Create a Security Group rule.
//
// POST /security-group/{id}/rules
func (UnimplementedHandler) AddRuleToSecurityGroup(ctx context.Context, req *AddRuleToSecurityGroupReq, params AddRuleToSecurityGroupParams) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// AttachInstanceToPrivateNetwork implements attach-instance-to-private-network operation.
//
// Attach a Compute instance to a Private Network.
//
// PUT /private-network/{id}:attach
func (UnimplementedHandler) AttachInstanceToPrivateNetwork(ctx context.Context, req *AttachInstanceToPrivateNetworkReq, params AttachInstanceToPrivateNetworkParams) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// CopyTemplate implements copy-template operation.
//
// Copy a Template from a zone to another.
//
// POST /template/{id}
func (UnimplementedHandler) CopyTemplate(ctx context.Context, req *CopyTemplateReq, params CopyTemplateParams) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// CreateAPIKey implements create-api-key operation.
//
// Create a new v3 API key.
//
// POST /api-key
func (UnimplementedHandler) CreateAPIKey(ctx context.Context, req *CreateAPIKeyReq) (r *IamAPIKeyCreated, _ error) {
	return r, ht.ErrNotImplemented
}

// CreateAccessKey implements create-access-key operation.
//
// This operation creates a new IAM Access Key, which can either be restricted to specific API
// operations or unrestricted. The corresponding secret is only available in the response returned by
// this operation, the caller must take care of storing it safely as there is no other way to
// retrieve it.
//
// POST /access-key
func (UnimplementedHandler) CreateAccessKey(ctx context.Context, req *CreateAccessKeyReq) (r *AccessKey, _ error) {
	return r, ht.ErrNotImplemented
}

// CreateAntiAffinityGroup implements create-anti-affinity-group operation.
//
// Create an Anti-affinity Group.
//
// POST /anti-affinity-group
func (UnimplementedHandler) CreateAntiAffinityGroup(ctx context.Context, req *CreateAntiAffinityGroupReq) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// CreateDNSDomain implements create-dns-domain operation.
//
// Create DNS domain.
//
// POST /dns-domain
func (UnimplementedHandler) CreateDNSDomain(ctx context.Context, req *CreateDNSDomainReq) (r *DNSDomain, _ error) {
	return r, ht.ErrNotImplemented
}

// CreateDNSDomainRecord implements create-dns-domain-record operation.
//
// Create DNS domain record.
//
// POST /dns-domain/{domain-id}/record
func (UnimplementedHandler) CreateDNSDomainRecord(ctx context.Context, req *CreateDNSDomainRecordReq, params CreateDNSDomainRecordParams) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// CreateDbaasIntegration implements create-dbaas-integration operation.
//
// Create a new DBaaS integration between two services.
//
// POST /dbaas-integration
func (UnimplementedHandler) CreateDbaasIntegration(ctx context.Context, req *CreateDbaasIntegrationReq) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// CreateDbaasKafkaSchemaRegistryACLConfig implements create-dbaas-kafka-schema-registry-acl-config operation.
//
// Add a Kafka Schema Registry ACL entry.
//
// POST /dbaas-kafka/{name}/schema-registry/acl-config
func (UnimplementedHandler) CreateDbaasKafkaSchemaRegistryACLConfig(ctx context.Context, req *DbaasKafkaSchemaRegistryACLEntry, params CreateDbaasKafkaSchemaRegistryACLConfigParams) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// CreateDbaasKafkaTopicACLConfig implements create-dbaas-kafka-topic-acl-config operation.
//
// Add a Kafka topic ACL entry.
//
// POST /dbaas-kafka/{name}/topic/acl-config
func (UnimplementedHandler) CreateDbaasKafkaTopicACLConfig(ctx context.Context, req *DbaasKafkaTopicACLEntry, params CreateDbaasKafkaTopicACLConfigParams) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// CreateDbaasKafkaUser implements create-dbaas-kafka-user operation.
//
// Create a DBaaS Kafka user.
//
// POST /dbaas-kafka/{service-name}/user
func (UnimplementedHandler) CreateDbaasKafkaUser(ctx context.Context, req *CreateDbaasKafkaUserReq, params CreateDbaasKafkaUserParams) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// CreateDbaasPostgresUser implements create-dbaas-postgres-user operation.
//
// Create a DBaaS Postgres user.
//
// POST /dbaas-postgres/{service-name}/user
func (UnimplementedHandler) CreateDbaasPostgresUser(ctx context.Context, req *CreateDbaasPostgresUserReq, params CreateDbaasPostgresUserParams) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// CreateDbaasServiceKafka implements create-dbaas-service-kafka operation.
//
// Create a DBaaS Kafka service.
//
// POST /dbaas-kafka/{name}
func (UnimplementedHandler) CreateDbaasServiceKafka(ctx context.Context, req *CreateDbaasServiceKafkaReq, params CreateDbaasServiceKafkaParams) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// CreateDbaasServiceMysql implements create-dbaas-service-mysql operation.
//
// Create a DBaaS MySQL service.
//
// POST /dbaas-mysql/{name}
func (UnimplementedHandler) CreateDbaasServiceMysql(ctx context.Context, req *CreateDbaasServiceMysqlReq, params CreateDbaasServiceMysqlParams) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// CreateDbaasServiceOpensearch implements create-dbaas-service-opensearch operation.
//
// Create a DBaaS OpenSearch service.
//
// POST /dbaas-opensearch/{name}
func (UnimplementedHandler) CreateDbaasServiceOpensearch(ctx context.Context, req *CreateDbaasServiceOpensearchReq, params CreateDbaasServiceOpensearchParams) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// CreateDbaasServicePg implements create-dbaas-service-pg operation.
//
// Create a DBaaS PostgreSQL service.
//
// POST /dbaas-postgres/{name}
func (UnimplementedHandler) CreateDbaasServicePg(ctx context.Context, req *CreateDbaasServicePgReq, params CreateDbaasServicePgParams) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// CreateDbaasServiceRedis implements create-dbaas-service-redis operation.
//
// Create a DBaaS Redis service.
//
// POST /dbaas-redis/{name}
func (UnimplementedHandler) CreateDbaasServiceRedis(ctx context.Context, req *CreateDbaasServiceRedisReq, params CreateDbaasServiceRedisParams) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// CreateDbaasTaskMigrationCheck implements create-dbaas-task-migration-check operation.
//
// Create a DBaaS task to check migration.
//
// POST /dbaas-task-migration-check/{service}
func (UnimplementedHandler) CreateDbaasTaskMigrationCheck(ctx context.Context, req *CreateDbaasTaskMigrationCheckReq, params CreateDbaasTaskMigrationCheckParams) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// CreateElasticIP implements create-elastic-ip operation.
//
// Create an Elastic IP.
//
// POST /elastic-ip
func (UnimplementedHandler) CreateElasticIP(ctx context.Context, req *CreateElasticIPReq) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// CreateIamRole implements create-iam-role operation.
//
// Create IAM Role.
//
// POST /iam-role
func (UnimplementedHandler) CreateIamRole(ctx context.Context, req *CreateIamRoleReq) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// CreateLoadBalancer implements create-load-balancer operation.
//
// Create a Load Balancer.
//
// POST /load-balancer
func (UnimplementedHandler) CreateLoadBalancer(ctx context.Context, req *CreateLoadBalancerReq) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// CreatePrivateNetwork implements create-private-network operation.
//
// Create a Private Network.
//
// POST /private-network
func (UnimplementedHandler) CreatePrivateNetwork(ctx context.Context, req *CreatePrivateNetworkReq) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// CreateSecurityGroup implements create-security-group operation.
//
// Create a Security Group.
//
// POST /security-group
func (UnimplementedHandler) CreateSecurityGroup(ctx context.Context, req *CreateSecurityGroupReq) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// CreateSksCluster implements create-sks-cluster operation.
//
// Create an SKS cluster.
//
// POST /sks-cluster
func (UnimplementedHandler) CreateSksCluster(ctx context.Context, req *CreateSksClusterReq) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// CreateSnapshot implements create-snapshot operation.
//
// Create a Snapshot of a Compute instance.
//
// POST /instance/{id}:create-snapshot
func (UnimplementedHandler) CreateSnapshot(ctx context.Context, params CreateSnapshotParams) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// DeleteAPIKey implements delete-api-key operation.
//
// Delete a v3 API key.
//
// DELETE /api-key/{id}
func (UnimplementedHandler) DeleteAPIKey(ctx context.Context, params DeleteAPIKeyParams) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// DeleteAntiAffinityGroup implements delete-anti-affinity-group operation.
//
// Delete an Anti-affinity Group.
//
// DELETE /anti-affinity-group/{id}
func (UnimplementedHandler) DeleteAntiAffinityGroup(ctx context.Context, params DeleteAntiAffinityGroupParams) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// DeleteDNSDomain implements delete-dns-domain operation.
//
// Delete DNS Domain.
//
// DELETE /dns-domain/{id}
func (UnimplementedHandler) DeleteDNSDomain(ctx context.Context, params DeleteDNSDomainParams) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// DeleteDNSDomainRecord implements delete-dns-domain-record operation.
//
// Delete DNS domain record.
//
// DELETE /dns-domain/{domain-id}/record/{record-id}
func (UnimplementedHandler) DeleteDNSDomainRecord(ctx context.Context, params DeleteDNSDomainRecordParams) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// DeleteDbaasIntegration implements delete-dbaas-integration operation.
//
// Delete a DBaaS Integration.
//
// DELETE /dbaas-integration/{id}
func (UnimplementedHandler) DeleteDbaasIntegration(ctx context.Context, params DeleteDbaasIntegrationParams) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// DeleteDbaasKafkaSchemaRegistryACLConfig implements delete-dbaas-kafka-schema-registry-acl-config operation.
//
// Delete a Kafka ACL entry.
//
// DELETE /dbaas-kafka/{name}/schema-registry/acl-config/{acl-id}
func (UnimplementedHandler) DeleteDbaasKafkaSchemaRegistryACLConfig(ctx context.Context, params DeleteDbaasKafkaSchemaRegistryACLConfigParams) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// DeleteDbaasKafkaTopicACLConfig implements delete-dbaas-kafka-topic-acl-config operation.
//
// Delete a Kafka ACL entry.
//
// DELETE /dbaas-kafka/{name}/topic/acl-config/{acl-id}
func (UnimplementedHandler) DeleteDbaasKafkaTopicACLConfig(ctx context.Context, params DeleteDbaasKafkaTopicACLConfigParams) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// DeleteDbaasKafkaUser implements delete-dbaas-kafka-user operation.
//
// Delete a DBaaS kafka user.
//
// DELETE /dbaas-kafka/{service-name}/user/{username}
func (UnimplementedHandler) DeleteDbaasKafkaUser(ctx context.Context, params DeleteDbaasKafkaUserParams) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// DeleteDbaasPostgresUser implements delete-dbaas-postgres-user operation.
//
// Delete a DBaaS Postgres user.
//
// DELETE /dbaas-postgres/{service-name}/user/{username}
func (UnimplementedHandler) DeleteDbaasPostgresUser(ctx context.Context, params DeleteDbaasPostgresUserParams) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// DeleteDbaasService implements delete-dbaas-service operation.
//
// Delete a DBaaS service.
//
// DELETE /dbaas-service/{name}
func (UnimplementedHandler) DeleteDbaasService(ctx context.Context, params DeleteDbaasServiceParams) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// DeleteElasticIP implements delete-elastic-ip operation.
//
// Delete an Elastic IP.
//
// DELETE /elastic-ip/{id}
func (UnimplementedHandler) DeleteElasticIP(ctx context.Context, params DeleteElasticIPParams) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// DeleteIamRole implements delete-iam-role operation.
//
// Delete IAM Role.
//
// DELETE /iam-role/{id}
func (UnimplementedHandler) DeleteIamRole(ctx context.Context, params DeleteIamRoleParams) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// DeleteInstance implements delete-instance operation.
//
// Delete a Compute instance.
//
// DELETE /instance/{id}
func (UnimplementedHandler) DeleteInstance(ctx context.Context, params DeleteInstanceParams) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// DeleteInstancePool implements delete-instance-pool operation.
//
// Delete an Instance Pool.
//
// DELETE /instance-pool/{id}
func (UnimplementedHandler) DeleteInstancePool(ctx context.Context, params DeleteInstancePoolParams) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// DeleteLoadBalancer implements delete-load-balancer operation.
//
// Delete a Load Balancer.
//
// DELETE /load-balancer/{id}
func (UnimplementedHandler) DeleteLoadBalancer(ctx context.Context, params DeleteLoadBalancerParams) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// DeleteLoadBalancerService implements delete-load-balancer-service operation.
//
// Delete a Load Balancer Service.
//
// DELETE /load-balancer/{id}/service/{service-id}
func (UnimplementedHandler) DeleteLoadBalancerService(ctx context.Context, params DeleteLoadBalancerServiceParams) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// DeletePrivateNetwork implements delete-private-network operation.
//
// Delete a Private Network.
//
// DELETE /private-network/{id}
func (UnimplementedHandler) DeletePrivateNetwork(ctx context.Context, params DeletePrivateNetworkParams) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// DeleteReverseDNSElasticIP implements delete-reverse-dns-elastic-ip operation.
//
// Delete the PTR DNS record for an elastic IP.
//
// DELETE /reverse-dns/elastic-ip/{id}
func (UnimplementedHandler) DeleteReverseDNSElasticIP(ctx context.Context, params DeleteReverseDNSElasticIPParams) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// DeleteReverseDNSInstance implements delete-reverse-dns-instance operation.
//
// Delete the PTR DNS record for an instance.
//
// DELETE /reverse-dns/instance/{id}
func (UnimplementedHandler) DeleteReverseDNSInstance(ctx context.Context, params DeleteReverseDNSInstanceParams) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// DeleteRuleFromSecurityGroup implements delete-rule-from-security-group operation.
//
// Delete a Security Group rule.
//
// DELETE /security-group/{id}/rules/{rule-id}
func (UnimplementedHandler) DeleteRuleFromSecurityGroup(ctx context.Context, params DeleteRuleFromSecurityGroupParams) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// DeleteSSHKey implements delete-ssh-key operation.
//
// Delete a SSH key.
//
// DELETE /ssh-key/{name}
func (UnimplementedHandler) DeleteSSHKey(ctx context.Context, params DeleteSSHKeyParams) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// DeleteSecurityGroup implements delete-security-group operation.
//
// Delete a Security Group.
//
// DELETE /security-group/{id}
func (UnimplementedHandler) DeleteSecurityGroup(ctx context.Context, params DeleteSecurityGroupParams) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// DeleteSksCluster implements delete-sks-cluster operation.
//
// Delete an SKS cluster.
//
// DELETE /sks-cluster/{id}
func (UnimplementedHandler) DeleteSksCluster(ctx context.Context, params DeleteSksClusterParams) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// DeleteSksNodepool implements delete-sks-nodepool operation.
//
// Delete an SKS Nodepool.
//
// DELETE /sks-cluster/{id}/nodepool/{sks-nodepool-id}
func (UnimplementedHandler) DeleteSksNodepool(ctx context.Context, params DeleteSksNodepoolParams) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// DeleteSnapshot implements delete-snapshot operation.
//
// Delete a Snapshot.
//
// DELETE /snapshot/{id}
func (UnimplementedHandler) DeleteSnapshot(ctx context.Context, params DeleteSnapshotParams) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// DeleteTemplate implements delete-template operation.
//
// Delete a Template.
//
// DELETE /template/{id}
func (UnimplementedHandler) DeleteTemplate(ctx context.Context, params DeleteTemplateParams) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// EvictInstancePoolMembers implements evict-instance-pool-members operation.
//
// This operation evicts the specified Compute instances member from the Instance Pool, shrinking it
// to `&lt;current pool size&gt; - &lt;# evicted members&gt;`.
//
// PUT /instance-pool/{id}:evict
func (UnimplementedHandler) EvictInstancePoolMembers(ctx context.Context, req *EvictInstancePoolMembersReq, params EvictInstancePoolMembersParams) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// EvictSksNodepoolMembers implements evict-sks-nodepool-members operation.
//
// This operation evicts the specified Compute instances member from the Nodepool, shrinking it to
// `&lt;current nodepool size&gt; - &lt;# evicted members&gt;`.
//
// PUT /sks-cluster/{id}/nodepool/{sks-nodepool-id}:evict
func (UnimplementedHandler) EvictSksNodepoolMembers(ctx context.Context, req *EvictSksNodepoolMembersReq, params EvictSksNodepoolMembersParams) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// ExportSnapshot implements export-snapshot operation.
//
// Export a Snapshot.
//
// POST /snapshot/{id}:export
func (UnimplementedHandler) ExportSnapshot(ctx context.Context, params ExportSnapshotParams) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// GenerateSksClusterKubeconfig implements generate-sks-cluster-kubeconfig operation.
//
// This operation returns a Kubeconfig file encoded in base64.
//
// POST /sks-cluster-kubeconfig/{id}
func (UnimplementedHandler) GenerateSksClusterKubeconfig(ctx context.Context, req *SksKubeconfigRequest, params GenerateSksClusterKubeconfigParams) (r *GenerateSksClusterKubeconfigOK, _ error) {
	return r, ht.ErrNotImplemented
}

// GetAPIKey implements get-api-key operation.
//
// Get v3 API key.
//
// GET /api-key/{id}
func (UnimplementedHandler) GetAPIKey(ctx context.Context, params GetAPIKeyParams) (r *IamAPIKey, _ error) {
	return r, ht.ErrNotImplemented
}

// GetAccessKey implements get-access-key operation.
//
// Retrieve IAM Access Key details.
//
// GET /access-key/{key}
func (UnimplementedHandler) GetAccessKey(ctx context.Context, params GetAccessKeyParams) (r *AccessKey, _ error) {
	return r, ht.ErrNotImplemented
}

// GetDNSDomain implements get-dns-domain operation.
//
// Retrieve DNS domain details.
//
// GET /dns-domain/{id}
func (UnimplementedHandler) GetDNSDomain(ctx context.Context, params GetDNSDomainParams) (r *DNSDomain, _ error) {
	return r, ht.ErrNotImplemented
}

// GetDNSDomainRecord implements get-dns-domain-record operation.
//
// Retrieve DNS domain record details.
//
// GET /dns-domain/{domain-id}/record/{record-id}
func (UnimplementedHandler) GetDNSDomainRecord(ctx context.Context, params GetDNSDomainRecordParams) (r *DNSDomainRecord, _ error) {
	return r, ht.ErrNotImplemented
}

// GetDNSDomainZoneFile implements get-dns-domain-zone-file operation.
//
// Retrieve DNS domain zone file.
//
// GET /dns-domain/{id}/zone
func (UnimplementedHandler) GetDNSDomainZoneFile(ctx context.Context, params GetDNSDomainZoneFileParams) (r *GetDNSDomainZoneFileOK, _ error) {
	return r, ht.ErrNotImplemented
}

// GetDbaasCaCertificate implements get-dbaas-ca-certificate operation.
//
// Returns a CA Certificate required to reach a DBaaS service through a TLS-protected connection.
//
// GET /dbaas-ca-certificate
func (UnimplementedHandler) GetDbaasCaCertificate(ctx context.Context) (r *GetDbaasCaCertificateOK, _ error) {
	return r, ht.ErrNotImplemented
}

// GetDbaasIntegration implements get-dbaas-integration operation.
//
// Get a DBaaS Integration.
//
// GET /dbaas-integration/{id}
func (UnimplementedHandler) GetDbaasIntegration(ctx context.Context, params GetDbaasIntegrationParams) (r *DbaasIntegration, _ error) {
	return r, ht.ErrNotImplemented
}

// GetDbaasKafkaACLConfig implements get-dbaas-kafka-acl-config operation.
//
// Get DBaaS kafka ACL configuration.
//
// GET /dbaas-kafka/{name}/acl-config
func (UnimplementedHandler) GetDbaasKafkaACLConfig(ctx context.Context, params GetDbaasKafkaACLConfigParams) (r *DbaasKafkaAcls, _ error) {
	return r, ht.ErrNotImplemented
}

// GetDbaasMigrationStatus implements get-dbaas-migration-status operation.
//
// Get a DBaaS migration status.
//
// GET /dbaas-migration-status/{name}
func (UnimplementedHandler) GetDbaasMigrationStatus(ctx context.Context, params GetDbaasMigrationStatusParams) (r *DbaasMigrationStatus, _ error) {
	return r, ht.ErrNotImplemented
}

// GetDbaasServiceKafka implements get-dbaas-service-kafka operation.
//
// Get a DBaaS Kafka service.
//
// GET /dbaas-kafka/{name}
func (UnimplementedHandler) GetDbaasServiceKafka(ctx context.Context, params GetDbaasServiceKafkaParams) (r *DbaasServiceKafka, _ error) {
	return r, ht.ErrNotImplemented
}

// GetDbaasServiceLogs implements get-dbaas-service-logs operation.
//
// Get logs of DBaaS service.
//
// POST /dbaas-service-logs/{service-name}
func (UnimplementedHandler) GetDbaasServiceLogs(ctx context.Context, req *GetDbaasServiceLogsReq, params GetDbaasServiceLogsParams) (r *DbaasServiceLogs, _ error) {
	return r, ht.ErrNotImplemented
}

// GetDbaasServiceMetrics implements get-dbaas-service-metrics operation.
//
// Get metrics of DBaaS service.
//
// POST /dbaas-service-metrics/{service-name}
func (UnimplementedHandler) GetDbaasServiceMetrics(ctx context.Context, req *GetDbaasServiceMetricsReq, params GetDbaasServiceMetricsParams) (r *GetDbaasServiceMetricsOK, _ error) {
	return r, ht.ErrNotImplemented
}

// GetDbaasServiceMysql implements get-dbaas-service-mysql operation.
//
// Get a DBaaS MySQL service.
//
// GET /dbaas-mysql/{name}
func (UnimplementedHandler) GetDbaasServiceMysql(ctx context.Context, params GetDbaasServiceMysqlParams) (r *DbaasServiceMysql, _ error) {
	return r, ht.ErrNotImplemented
}

// GetDbaasServiceOpensearch implements get-dbaas-service-opensearch operation.
//
// Get a DBaaS OpenSearch service.
//
// GET /dbaas-opensearch/{name}
func (UnimplementedHandler) GetDbaasServiceOpensearch(ctx context.Context, params GetDbaasServiceOpensearchParams) (r *DbaasServiceOpensearch, _ error) {
	return r, ht.ErrNotImplemented
}

// GetDbaasServicePg implements get-dbaas-service-pg operation.
//
// Get a DBaaS PostgreSQL service.
//
// GET /dbaas-postgres/{name}
func (UnimplementedHandler) GetDbaasServicePg(ctx context.Context, params GetDbaasServicePgParams) (r *DbaasServicePg, _ error) {
	return r, ht.ErrNotImplemented
}

// GetDbaasServiceRedis implements get-dbaas-service-redis operation.
//
// Get a DBaaS Redis service.
//
// GET /dbaas-redis/{name}
func (UnimplementedHandler) GetDbaasServiceRedis(ctx context.Context, params GetDbaasServiceRedisParams) (r *DbaasServiceRedis, _ error) {
	return r, ht.ErrNotImplemented
}

// GetDbaasServiceType implements get-dbaas-service-type operation.
//
// Get a DBaaS service type.
//
// GET /dbaas-service-type/{service-type-name}
func (UnimplementedHandler) GetDbaasServiceType(ctx context.Context, params GetDbaasServiceTypeParams) (r *DbaasServiceType, _ error) {
	return r, ht.ErrNotImplemented
}

// GetDbaasSettingsKafka implements get-dbaas-settings-kafka operation.
//
// Get DBaaS Kafka settings.
//
// GET /dbaas-settings-kafka
func (UnimplementedHandler) GetDbaasSettingsKafka(ctx context.Context) (r *GetDbaasSettingsKafkaOK, _ error) {
	return r, ht.ErrNotImplemented
}

// GetDbaasSettingsMysql implements get-dbaas-settings-mysql operation.
//
// Get DBaaS MySQL settings.
//
// GET /dbaas-settings-mysql
func (UnimplementedHandler) GetDbaasSettingsMysql(ctx context.Context) (r *GetDbaasSettingsMysqlOK, _ error) {
	return r, ht.ErrNotImplemented
}

// GetDbaasSettingsOpensearch implements get-dbaas-settings-opensearch operation.
//
// Get DBaaS OpenSearch settings.
//
// GET /dbaas-settings-opensearch
func (UnimplementedHandler) GetDbaasSettingsOpensearch(ctx context.Context) (r *GetDbaasSettingsOpensearchOK, _ error) {
	return r, ht.ErrNotImplemented
}

// GetDbaasSettingsPg implements get-dbaas-settings-pg operation.
//
// Get DBaaS PostgreSQL settings.
//
// GET /dbaas-settings-pg
func (UnimplementedHandler) GetDbaasSettingsPg(ctx context.Context) (r *GetDbaasSettingsPgOK, _ error) {
	return r, ht.ErrNotImplemented
}

// GetDbaasSettingsRedis implements get-dbaas-settings-redis operation.
//
// Returns the default settings for Redis.
//
// GET /dbaas-settings-redis
func (UnimplementedHandler) GetDbaasSettingsRedis(ctx context.Context) (r *GetDbaasSettingsRedisOK, _ error) {
	return r, ht.ErrNotImplemented
}

// GetDbaasTask implements get-dbaas-task operation.
//
// Get a DBaaS task.
//
// GET /dbaas-task/{service}/{id}
func (UnimplementedHandler) GetDbaasTask(ctx context.Context, params GetDbaasTaskParams) (r *GetDbaasTaskOK, _ error) {
	return r, ht.ErrNotImplemented
}

// GetDeployTarget implements get-deploy-target operation.
//
// Retrieve Deploy Target details.
//
// GET /deploy-target/{id}
func (UnimplementedHandler) GetDeployTarget(ctx context.Context, params GetDeployTargetParams) (r *DeployTarget, _ error) {
	return r, ht.ErrNotImplemented
}

// GetElasticIP implements get-elastic-ip operation.
//
// Retrieve Elastic IP details.
//
// GET /elastic-ip/{id}
func (UnimplementedHandler) GetElasticIP(ctx context.Context, params GetElasticIPParams) (r *ElasticIP, _ error) {
	return r, ht.ErrNotImplemented
}

// GetIamOrganizationPolicy implements get-iam-organization-policy operation.
//
// Retrieve IAM Organization Policy.
//
// GET /iam-organization-policy
func (UnimplementedHandler) GetIamOrganizationPolicy(ctx context.Context) (r []IamPolicy, _ error) {
	return r, ht.ErrNotImplemented
}

// GetIamRole implements get-iam-role operation.
//
// Retrieve IAM Role.
//
// GET /iam-role/{id}
func (UnimplementedHandler) GetIamRole(ctx context.Context, params GetIamRoleParams) (r *IamRole, _ error) {
	return r, ht.ErrNotImplemented
}

// GetInstanceType implements get-instance-type operation.
//
// Retrieve Instance Type details.
//
// GET /instance-type/{id}
func (UnimplementedHandler) GetInstanceType(ctx context.Context, params GetInstanceTypeParams) (r *InstanceType, _ error) {
	return r, ht.ErrNotImplemented
}

// GetOperation implements get-operation operation.
//
// Retrieve Operation details.
//
// GET /operation/{id}
func (UnimplementedHandler) GetOperation(ctx context.Context, params GetOperationParams) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// GetPrivateNetwork implements get-private-network operation.
//
// Retrieve Private Network details.
//
// GET /private-network/{id}
func (UnimplementedHandler) GetPrivateNetwork(ctx context.Context, params GetPrivateNetworkParams) (r *PrivateNetwork, _ error) {
	return r, ht.ErrNotImplemented
}

// GetQuota implements get-quota operation.
//
// Retrieve Resource Quota.
//
// GET /quota/{entity}
func (UnimplementedHandler) GetQuota(ctx context.Context, params GetQuotaParams) (r *Quota, _ error) {
	return r, ht.ErrNotImplemented
}

// GetReverseDNSElasticIP implements get-reverse-dns-elastic-ip operation.
//
// Query the PTR DNS records for an elastic IP.
//
// GET /reverse-dns/elastic-ip/{id}
func (UnimplementedHandler) GetReverseDNSElasticIP(ctx context.Context, params GetReverseDNSElasticIPParams) (r *ReverseDNSRecord, _ error) {
	return r, ht.ErrNotImplemented
}

// GetReverseDNSInstance implements get-reverse-dns-instance operation.
//
// Query the PTR DNS records for an instance.
//
// GET /reverse-dns/instance/{id}
func (UnimplementedHandler) GetReverseDNSInstance(ctx context.Context, params GetReverseDNSInstanceParams) (r *ReverseDNSRecord, _ error) {
	return r, ht.ErrNotImplemented
}

// GetSSHKey implements get-ssh-key operation.
//
// Retrieve SSH key details.
//
// GET /ssh-key/{name}
func (UnimplementedHandler) GetSSHKey(ctx context.Context, params GetSSHKeyParams) (r *SSHKey, _ error) {
	return r, ht.ErrNotImplemented
}

// GetSksClusterAuthorityCert implements get-sks-cluster-authority-cert operation.
//
// This operation returns the certificate for the given SKS cluster authority encoded in base64.
//
// GET /sks-cluster/{id}/authority/{authority}/cert
func (UnimplementedHandler) GetSksClusterAuthorityCert(ctx context.Context, params GetSksClusterAuthorityCertParams) (r *GetSksClusterAuthorityCertOK, _ error) {
	return r, ht.ErrNotImplemented
}

// GetSosPresignedURL implements get-sos-presigned-url operation.
//
// Generates Presigned Download URL for SOS object.
//
// GET /sos/{bucket}/presigned-url
func (UnimplementedHandler) GetSosPresignedURL(ctx context.Context, params GetSosPresignedURLParams) (r *GetSosPresignedURLOK, _ error) {
	return r, ht.ErrNotImplemented
}

// GetTemplate implements get-template operation.
//
// Retrieve Template details.
//
// GET /template/{id}
func (UnimplementedHandler) GetTemplate(ctx context.Context, params GetTemplateParams) (r *Template, _ error) {
	return r, ht.ErrNotImplemented
}

// ListAPIKeys implements list-api-keys operation.
//
// List v3 API keys.
//
// GET /api-key
func (UnimplementedHandler) ListAPIKeys(ctx context.Context) (r *ListAPIKeysOK, _ error) {
	return r, ht.ErrNotImplemented
}

// ListAccessKeyKnownOperations implements list-access-key-known-operations operation.
//
// Retrieve all known available IAM Access Key operations and associated tags.
//
// GET /access-key-known-operations
func (UnimplementedHandler) ListAccessKeyKnownOperations(ctx context.Context) (r *ListAccessKeyKnownOperationsOK, _ error) {
	return r, ht.ErrNotImplemented
}

// ListAccessKeyOperations implements list-access-key-operations operation.
//
// Retrieve IAM Access Key operations and associated tags for the signing key.
//
// GET /access-key-operations
func (UnimplementedHandler) ListAccessKeyOperations(ctx context.Context) (r *ListAccessKeyOperationsOK, _ error) {
	return r, ht.ErrNotImplemented
}

// ListAccessKeys implements list-access-keys operation.
//
// List IAM Access Keys.
//
// GET /access-key
func (UnimplementedHandler) ListAccessKeys(ctx context.Context) (r *ListAccessKeysOK, _ error) {
	return r, ht.ErrNotImplemented
}

// ListDNSDomainRecords implements list-dns-domain-records operation.
//
// List DNS domain records.
//
// GET /dns-domain/{domain-id}/record
func (UnimplementedHandler) ListDNSDomainRecords(ctx context.Context, params ListDNSDomainRecordsParams) (r *ListDNSDomainRecordsOK, _ error) {
	return r, ht.ErrNotImplemented
}

// ListDNSDomains implements list-dns-domains operation.
//
// List DNS domains.
//
// GET /dns-domain
func (UnimplementedHandler) ListDNSDomains(ctx context.Context) (r *ListDNSDomainsOK, _ error) {
	return r, ht.ErrNotImplemented
}

// ListDbaasIntegrationSettings implements list-dbaas-integration-settings operation.
//
// Get DBaaS integration settings.
//
// GET /dbaas-integration-settings/{integration-type}/{source-type}/{dest-type}
func (UnimplementedHandler) ListDbaasIntegrationSettings(ctx context.Context, params ListDbaasIntegrationSettingsParams) (r *ListDbaasIntegrationSettingsOK, _ error) {
	return r, ht.ErrNotImplemented
}

// ListDbaasIntegrationTypes implements list-dbaas-integration-types operation.
//
// Get DBaaS integration types.
//
// GET /dbaas-integration-types
func (UnimplementedHandler) ListDbaasIntegrationTypes(ctx context.Context) (r *ListDbaasIntegrationTypesOK, _ error) {
	return r, ht.ErrNotImplemented
}

// ListDbaasServiceTypes implements list-dbaas-service-types operation.
//
// List available service types for DBaaS.
//
// GET /dbaas-service-type
func (UnimplementedHandler) ListDbaasServiceTypes(ctx context.Context) (r *ListDbaasServiceTypesOK, _ error) {
	return r, ht.ErrNotImplemented
}

// ListDbaasServices implements list-dbaas-services operation.
//
// List DBaaS services.
//
// GET /dbaas-service
func (UnimplementedHandler) ListDbaasServices(ctx context.Context) (r *ListDbaasServicesOK, _ error) {
	return r, ht.ErrNotImplemented
}

// ListDeployTargets implements list-deploy-targets operation.
//
// List Deploy Targets.
//
// GET /deploy-target
func (UnimplementedHandler) ListDeployTargets(ctx context.Context) (r *ListDeployTargetsOK, _ error) {
	return r, ht.ErrNotImplemented
}

// ListElasticIps implements list-elastic-ips operation.
//
// List Elastic IPs.
//
// GET /elastic-ip
func (UnimplementedHandler) ListElasticIps(ctx context.Context) (r *ListElasticIpsOK, _ error) {
	return r, ht.ErrNotImplemented
}

// ListEvents implements list-events operation.
//
// Retrieve Mutation Events for a given date range. Defaults to retrieving Events for the past 24
// hours.
// Both a `from` and `to` arguments can be specified to filter Events over a specific period.
// Events will be the the most descriptive possible but not all fields are mandatory.
//
// GET /event
func (UnimplementedHandler) ListEvents(ctx context.Context, params ListEventsParams) (r []Event, _ error) {
	return r, ht.ErrNotImplemented
}

// ListIamRoles implements list-iam-roles operation.
//
// List IAM Roles.
//
// GET /iam-role
func (UnimplementedHandler) ListIamRoles(ctx context.Context) (r *ListIamRolesOK, _ error) {
	return r, ht.ErrNotImplemented
}

// ListInstanceTypes implements list-instance-types operation.
//
// List Compute instance Types.
//
// GET /instance-type
func (UnimplementedHandler) ListInstanceTypes(ctx context.Context) (r *ListInstanceTypesOK, _ error) {
	return r, ht.ErrNotImplemented
}

// ListPrivateNetworks implements list-private-networks operation.
//
// List Private Networks.
//
// GET /private-network
func (UnimplementedHandler) ListPrivateNetworks(ctx context.Context) (r *ListPrivateNetworksOK, _ error) {
	return r, ht.ErrNotImplemented
}

// ListQuotas implements list-quotas operation.
//
// List Organization Quotas.
//
// GET /quota
func (UnimplementedHandler) ListQuotas(ctx context.Context) (r *ListQuotasOK, _ error) {
	return r, ht.ErrNotImplemented
}

// ListSSHKeys implements list-ssh-keys operation.
//
// List SSH keys.
//
// GET /ssh-key
func (UnimplementedHandler) ListSSHKeys(ctx context.Context) (r *ListSSHKeysOK, _ error) {
	return r, ht.ErrNotImplemented
}

// ListSksClusterDeprecatedResources implements list-sks-cluster-deprecated-resources operation.
//
// This operation returns the deprecated resources for a given cluster.
//
// GET /sks-cluster-deprecated-resources/{id}
func (UnimplementedHandler) ListSksClusterDeprecatedResources(ctx context.Context, params ListSksClusterDeprecatedResourcesParams) (r []SksClusterDeprecatedResource, _ error) {
	return r, ht.ErrNotImplemented
}

// ListSksClusterVersions implements list-sks-cluster-versions operation.
//
// List available versions for SKS clusters.
//
// GET /sks-cluster-version
func (UnimplementedHandler) ListSksClusterVersions(ctx context.Context, params ListSksClusterVersionsParams) (r *ListSksClusterVersionsOK, _ error) {
	return r, ht.ErrNotImplemented
}

// ListSosBucketsUsage implements list-sos-buckets-usage operation.
//
// List SOS Buckets Usage.
//
// GET /sos-buckets-usage
func (UnimplementedHandler) ListSosBucketsUsage(ctx context.Context) (r *ListSosBucketsUsageOK, _ error) {
	return r, ht.ErrNotImplemented
}

// ListTemplates implements list-templates operation.
//
// List Templates.
//
// GET /template
func (UnimplementedHandler) ListTemplates(ctx context.Context, params ListTemplatesParams) (r *ListTemplatesOK, _ error) {
	return r, ht.ErrNotImplemented
}

// ListZones implements list-zones operation.
//
// List Zones.
//
// GET /zone
func (UnimplementedHandler) ListZones(ctx context.Context) (r *ListZonesOK, _ error) {
	return r, ht.ErrNotImplemented
}

// PromoteSnapshotToTemplate implements promote-snapshot-to-template operation.
//
// Promote a Snapshot to a Template.
//
// POST /snapshot/{id}:promote
func (UnimplementedHandler) PromoteSnapshotToTemplate(ctx context.Context, req *PromoteSnapshotToTemplateReq, params PromoteSnapshotToTemplateParams) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// RebootInstance implements reboot-instance operation.
//
// Reboot a Compute instance.
//
// PUT /instance/{id}:reboot
func (UnimplementedHandler) RebootInstance(ctx context.Context, params RebootInstanceParams) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// RegisterSSHKey implements register-ssh-key operation.
//
// Import SSH key.
//
// POST /ssh-key
func (UnimplementedHandler) RegisterSSHKey(ctx context.Context, req *RegisterSSHKeyReq) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// RegisterTemplate implements register-template operation.
//
// Register a Template.
//
// POST /template
func (UnimplementedHandler) RegisterTemplate(ctx context.Context, req *RegisterTemplateReq) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// RemoveExternalSourceFromSecurityGroup implements remove-external-source-from-security-group operation.
//
// Remove an external source from a Security Group.
//
// PUT /security-group/{id}:remove-source
func (UnimplementedHandler) RemoveExternalSourceFromSecurityGroup(ctx context.Context, req *RemoveExternalSourceFromSecurityGroupReq, params RemoveExternalSourceFromSecurityGroupParams) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// RemoveInstanceProtection implements remove-instance-protection operation.
//
// Remove instance destruction protection.
//
// PUT /instance/{id}:remove-protection
func (UnimplementedHandler) RemoveInstanceProtection(ctx context.Context, params RemoveInstanceProtectionParams) error {
	return ht.ErrNotImplemented
}

// ResetDbaasKafkaUserPassword implements reset-dbaas-kafka-user-password operation.
//
// If no password is provided one will be generated automatically.
//
// PUT /dbaas-kafka/{service-name}/user/{username}/password/reset
func (UnimplementedHandler) ResetDbaasKafkaUserPassword(ctx context.Context, req *ResetDbaasKafkaUserPasswordReq, params ResetDbaasKafkaUserPasswordParams) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// ResetDbaasPostgresUserPassword implements reset-dbaas-postgres-user-password operation.
//
// If no password is provided one will be generated automatically.
//
// PUT /dbaas-postgres/{service-name}/user/{username}/password/reset
func (UnimplementedHandler) ResetDbaasPostgresUserPassword(ctx context.Context, req *ResetDbaasPostgresUserPasswordReq, params ResetDbaasPostgresUserPasswordParams) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// ResetElasticIPField implements reset-elastic-ip-field operation.
//
// Reset an Elastic IP field to its default value.
//
// DELETE /elastic-ip/{id}/{field}
func (UnimplementedHandler) ResetElasticIPField(ctx context.Context, params ResetElasticIPFieldParams) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// ResetInstance implements reset-instance operation.
//
// This operation re-installs a Compute instance to a base template. If target template is provided
// it will be used to recreated instance from. Warning: the operation wipes all data stored on the
// disk.
//
// PUT /instance/{id}:reset
func (UnimplementedHandler) ResetInstance(ctx context.Context, req *ResetInstanceReq, params ResetInstanceParams) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// ResetInstanceField implements reset-instance-field operation.
//
// Reset Instance field.
//
// DELETE /instance/{id}/{field}
func (UnimplementedHandler) ResetInstanceField(ctx context.Context, params ResetInstanceFieldParams) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// ResetInstancePoolField implements reset-instance-pool-field operation.
//
// Reset an Instance Pool field to its default value.
//
// DELETE /instance-pool/{id}/{field}
func (UnimplementedHandler) ResetInstancePoolField(ctx context.Context, params ResetInstancePoolFieldParams) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// ResetLoadBalancerField implements reset-load-balancer-field operation.
//
// Reset a Load Balancer field to its default value.
//
// DELETE /load-balancer/{id}/{field}
func (UnimplementedHandler) ResetLoadBalancerField(ctx context.Context, params ResetLoadBalancerFieldParams) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// ResetLoadBalancerServiceField implements reset-load-balancer-service-field operation.
//
// Reset a Load Balancer Service field to its default value.
//
// DELETE /load-balancer/{id}/service/{service-id}/{field}
func (UnimplementedHandler) ResetLoadBalancerServiceField(ctx context.Context, params ResetLoadBalancerServiceFieldParams) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// ResetPrivateNetworkField implements reset-private-network-field operation.
//
// Reset Private Network field.
//
// DELETE /private-network/{id}/{field}
func (UnimplementedHandler) ResetPrivateNetworkField(ctx context.Context, params ResetPrivateNetworkFieldParams) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// ResetSksClusterField implements reset-sks-cluster-field operation.
//
// Reset an SKS cluster field to its default value.
//
// DELETE /sks-cluster/{id}/{field}
func (UnimplementedHandler) ResetSksClusterField(ctx context.Context, params ResetSksClusterFieldParams) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// ResetSksNodepoolField implements reset-sks-nodepool-field operation.
//
// Reset an SKS Nodepool field to its default value.
//
// DELETE /sks-cluster/{id}/nodepool/{sks-nodepool-id}/{field}
func (UnimplementedHandler) ResetSksNodepoolField(ctx context.Context, params ResetSksNodepoolFieldParams) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// ResizeInstanceDisk implements resize-instance-disk operation.
//
// This operation resizes a Compute instance's disk volume. Note: the disk can only grow, cannot be
// shrunk.
//
// PUT /instance/{id}:resize-disk
func (UnimplementedHandler) ResizeInstanceDisk(ctx context.Context, req *ResizeInstanceDiskReq, params ResizeInstanceDiskParams) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// RevealInstancePassword implements reveal-instance-password operation.
//
// Reveal the password used during instance creation or the latest password reset.
// This is only available for VMs created against templates having the `password-enabled`
// property set to `true`.
// Passwords are transiently stored for at most 24 hours and intended to be retrieved shortly after
// creation or resets.
//
// GET /instance/{id}:password
func (UnimplementedHandler) RevealInstancePassword(ctx context.Context, params RevealInstancePasswordParams) (r *InstancePassword, _ error) {
	return r, ht.ErrNotImplemented
}

// RevertInstanceToSnapshot implements revert-instance-to-snapshot operation.
//
// This operation reverts the snapshot to the Compute instance volume, restoring stored data as it
// was at the time of the snapshot.
// The Compute instance must be previously stopped.
//
// POST /instance/{instance-id}:revert-snapshot
func (UnimplementedHandler) RevertInstanceToSnapshot(ctx context.Context, req *RevertInstanceToSnapshotReq, params RevertInstanceToSnapshotParams) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// RevokeAccessKey implements revoke-access-key operation.
//
// This operation revokes the specified IAM Access Key. Access Keys created by the revoked Access Key
// will not be revoked.
//
// DELETE /access-key/{key}
func (UnimplementedHandler) RevokeAccessKey(ctx context.Context, params RevokeAccessKeyParams) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// RotateSksCcmCredentials implements rotate-sks-ccm-credentials operation.
//
// Rotate Exoscale CCM credentials.
//
// PUT /sks-cluster/{id}/rotate-ccm-credentials
func (UnimplementedHandler) RotateSksCcmCredentials(ctx context.Context, params RotateSksCcmCredentialsParams) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// RotateSksOperatorsCa implements rotate-sks-operators-ca operation.
//
// Rotate operators certificate authority.
//
// PUT /sks-cluster/{id}/rotate-operators-ca
func (UnimplementedHandler) RotateSksOperatorsCa(ctx context.Context, params RotateSksOperatorsCaParams) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// ScaleInstance implements scale-instance operation.
//
// This operation changes the Compute instance's type. Note: the new Instance Type must be within the
// same family (e.g. a standard instance cannot be scaled to gpu2 or storage).
//
// PUT /instance/{id}:scale
func (UnimplementedHandler) ScaleInstance(ctx context.Context, req *ScaleInstanceReq, params ScaleInstanceParams) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// ScaleInstancePool implements scale-instance-pool operation.
//
// Scale an Instance Pool.
//
// PUT /instance-pool/{id}:scale
func (UnimplementedHandler) ScaleInstancePool(ctx context.Context, req *ScaleInstancePoolReq, params ScaleInstancePoolParams) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// ScaleSksNodepool implements scale-sks-nodepool operation.
//
// Scale a SKS Nodepool.
//
// PUT /sks-cluster/{id}/nodepool/{sks-nodepool-id}:scale
func (UnimplementedHandler) ScaleSksNodepool(ctx context.Context, req *ScaleSksNodepoolReq, params ScaleSksNodepoolParams) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// StartDbaasKafkaMaintenance implements start-dbaas-kafka-maintenance operation.
//
// Initiate Kafka maintenance update.
//
// PUT /dbaas-kafka/{name}/maintenance/start
func (UnimplementedHandler) StartDbaasKafkaMaintenance(ctx context.Context, params StartDbaasKafkaMaintenanceParams) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// StartDbaasMysqlMaintenance implements start-dbaas-mysql-maintenance operation.
//
// Initiate MySQL maintenance update.
//
// PUT /dbaas-mysql/{name}/maintenance/start
func (UnimplementedHandler) StartDbaasMysqlMaintenance(ctx context.Context, params StartDbaasMysqlMaintenanceParams) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// StartDbaasOpensearchMaintenance implements start-dbaas-opensearch-maintenance operation.
//
// Initiate OpenSearch maintenance update.
//
// PUT /dbaas-opensearch/{name}/maintenance/start
func (UnimplementedHandler) StartDbaasOpensearchMaintenance(ctx context.Context, params StartDbaasOpensearchMaintenanceParams) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// StartDbaasPgMaintenance implements start-dbaas-pg-maintenance operation.
//
// Initiate PostgreSQL maintenance update.
//
// PUT /dbaas-postgres/{name}/maintenance/start
func (UnimplementedHandler) StartDbaasPgMaintenance(ctx context.Context, params StartDbaasPgMaintenanceParams) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// StartDbaasRedisMaintenance implements start-dbaas-redis-maintenance operation.
//
// Initiate Redis maintenance update.
//
// PUT /dbaas-redis/{name}/maintenance/start
func (UnimplementedHandler) StartDbaasRedisMaintenance(ctx context.Context, params StartDbaasRedisMaintenanceParams) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// StartInstance implements start-instance operation.
//
// This operation starts a virtual machine, potentially using a rescue profile if specified.
//
// PUT /instance/{id}:start
func (UnimplementedHandler) StartInstance(ctx context.Context, req *StartInstanceReq, params StartInstanceParams) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// StopDbaasMysqlMigration implements stop-dbaas-mysql-migration operation.
//
// Stop a DBaaS MySQL migration.
//
// POST /dbaas-mysql/{name}/migration/stop
func (UnimplementedHandler) StopDbaasMysqlMigration(ctx context.Context, params StopDbaasMysqlMigrationParams) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// StopDbaasPgMigration implements stop-dbaas-pg-migration operation.
//
// Stop a DBaaS PostgreSQL migration.
//
// POST /dbaas-postgres/{name}/migration/stop
func (UnimplementedHandler) StopDbaasPgMigration(ctx context.Context, params StopDbaasPgMigrationParams) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// StopDbaasRedisMigration implements stop-dbaas-redis-migration operation.
//
// Stop a DBaaS Redis migration.
//
// POST /dbaas-redis/{name}/migration/stop
func (UnimplementedHandler) StopDbaasRedisMigration(ctx context.Context, params StopDbaasRedisMigrationParams) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// StopInstance implements stop-instance operation.
//
// Stop a Compute instance.
//
// PUT /instance/{id}:stop
func (UnimplementedHandler) StopInstance(ctx context.Context, params StopInstanceParams) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// UpdateDNSDomainRecord implements update-dns-domain-record operation.
//
// Update DNS domain record.
//
// PUT /dns-domain/{domain-id}/record/{record-id}
func (UnimplementedHandler) UpdateDNSDomainRecord(ctx context.Context, req *UpdateDNSDomainRecordReq, params UpdateDNSDomainRecordParams) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// UpdateDbaasIntegration implements update-dbaas-integration operation.
//
// Update a existing DBaaS integration.
//
// PUT /dbaas-integration/{id}
func (UnimplementedHandler) UpdateDbaasIntegration(ctx context.Context, req *UpdateDbaasIntegrationReq, params UpdateDbaasIntegrationParams) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// UpdateDbaasPostgresAllowReplication implements update-dbaas-postgres-allow-replication operation.
//
// Update access control for one service user.
//
// PUT /dbaas-postgres/{service-name}/user/{username}/allow-replication
func (UnimplementedHandler) UpdateDbaasPostgresAllowReplication(ctx context.Context, req *UpdateDbaasPostgresAllowReplicationReq, params UpdateDbaasPostgresAllowReplicationParams) (r *DbaasPostgresUsers, _ error) {
	return r, ht.ErrNotImplemented
}

// UpdateDbaasServiceKafka implements update-dbaas-service-kafka operation.
//
// Update a DBaaS Kafka service.
//
// PUT /dbaas-kafka/{name}
func (UnimplementedHandler) UpdateDbaasServiceKafka(ctx context.Context, req *UpdateDbaasServiceKafkaReq, params UpdateDbaasServiceKafkaParams) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// UpdateDbaasServiceMysql implements update-dbaas-service-mysql operation.
//
// Update a DBaaS MySQL service.
//
// PUT /dbaas-mysql/{name}
func (UnimplementedHandler) UpdateDbaasServiceMysql(ctx context.Context, req *UpdateDbaasServiceMysqlReq, params UpdateDbaasServiceMysqlParams) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// UpdateDbaasServiceOpensearch implements update-dbaas-service-opensearch operation.
//
// Update a DBaaS OpenSearch service.
//
// PUT /dbaas-opensearch/{name}
func (UnimplementedHandler) UpdateDbaasServiceOpensearch(ctx context.Context, req *UpdateDbaasServiceOpensearchReq, params UpdateDbaasServiceOpensearchParams) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// UpdateDbaasServicePg implements update-dbaas-service-pg operation.
//
// Update a DBaaS PostgreSQL service.
//
// PUT /dbaas-postgres/{name}
func (UnimplementedHandler) UpdateDbaasServicePg(ctx context.Context, req *UpdateDbaasServicePgReq, params UpdateDbaasServicePgParams) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// UpdateDbaasServiceRedis implements update-dbaas-service-redis operation.
//
// Update a DBaaS Redis service.
//
// PUT /dbaas-redis/{name}
func (UnimplementedHandler) UpdateDbaasServiceRedis(ctx context.Context, req *UpdateDbaasServiceRedisReq, params UpdateDbaasServiceRedisParams) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// UpdateElasticIP implements update-elastic-ip operation.
//
// Update an Elastic IP.
//
// PUT /elastic-ip/{id}
func (UnimplementedHandler) UpdateElasticIP(ctx context.Context, req *UpdateElasticIPReq, params UpdateElasticIPParams) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// UpdateIamOrganizationPolicy implements update-iam-organization-policy operation.
//
// Update IAM Organization Policy.
//
// PUT /iam-organization-policy
func (UnimplementedHandler) UpdateIamOrganizationPolicy(ctx context.Context, req *IamPolicy) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// UpdateIamRole implements update-iam-role operation.
//
// Update IAM Role.
//
// PUT /iam-role/{id}
func (UnimplementedHandler) UpdateIamRole(ctx context.Context, req *UpdateIamRoleReq, params UpdateIamRoleParams) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// UpdateIamRolePolicy implements update-iam-role-policy operation.
//
// Update IAM Role Policy.
//
// PUT /iam-role/{id}:policy
func (UnimplementedHandler) UpdateIamRolePolicy(ctx context.Context, req *IamPolicy, params UpdateIamRolePolicyParams) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// UpdateInstance implements update-instance operation.
//
// Update a Compute instance.
//
// PUT /instance/{id}
func (UnimplementedHandler) UpdateInstance(ctx context.Context, req *UpdateInstanceReq, params UpdateInstanceParams) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// UpdateLoadBalancer implements update-load-balancer operation.
//
// Update a Load Balancer.
//
// PUT /load-balancer/{id}
func (UnimplementedHandler) UpdateLoadBalancer(ctx context.Context, req *UpdateLoadBalancerReq, params UpdateLoadBalancerParams) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// UpdateLoadBalancerService implements update-load-balancer-service operation.
//
// Update a Load Balancer Service.
//
// PUT /load-balancer/{id}/service/{service-id}
func (UnimplementedHandler) UpdateLoadBalancerService(ctx context.Context, req *UpdateLoadBalancerServiceReq, params UpdateLoadBalancerServiceParams) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// UpdatePrivateNetwork implements update-private-network operation.
//
// Update a Private Network.
//
// PUT /private-network/{id}
func (UnimplementedHandler) UpdatePrivateNetwork(ctx context.Context, req *UpdatePrivateNetworkReq, params UpdatePrivateNetworkParams) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// UpdateReverseDNSElasticIP implements update-reverse-dns-elastic-ip operation.
//
// Update/Create the PTR DNS record for an elastic IP.
//
// POST /reverse-dns/elastic-ip/{id}
func (UnimplementedHandler) UpdateReverseDNSElasticIP(ctx context.Context, req *UpdateReverseDNSElasticIPReq, params UpdateReverseDNSElasticIPParams) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// UpdateReverseDNSInstance implements update-reverse-dns-instance operation.
//
// Update/Create the PTR DNS record for an instance.
//
// POST /reverse-dns/instance/{id}
func (UnimplementedHandler) UpdateReverseDNSInstance(ctx context.Context, req *UpdateReverseDNSInstanceReq, params UpdateReverseDNSInstanceParams) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// UpdateSksCluster implements update-sks-cluster operation.
//
// Update an SKS cluster.
//
// PUT /sks-cluster/{id}
func (UnimplementedHandler) UpdateSksCluster(ctx context.Context, req *UpdateSksClusterReq, params UpdateSksClusterParams) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// UpdateTemplate implements update-template operation.
//
// Update template attributes.
//
// PUT /template/{id}
func (UnimplementedHandler) UpdateTemplate(ctx context.Context, req *UpdateTemplateReq, params UpdateTemplateParams) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// UpgradeSksCluster implements upgrade-sks-cluster operation.
//
// Upgrade an SKS cluster.
//
// PUT /sks-cluster/{id}/upgrade
func (UnimplementedHandler) UpgradeSksCluster(ctx context.Context, req *UpgradeSksClusterReq, params UpgradeSksClusterParams) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}

// UpgradeSksClusterServiceLevel implements upgrade-sks-cluster-service-level operation.
//
// Upgrade a SKS cluster to pro.
//
// PUT /sks-cluster/{id}/upgrade-service-level
func (UnimplementedHandler) UpgradeSksClusterServiceLevel(ctx context.Context, params UpgradeSksClusterServiceLevelParams) (r *Operation, _ error) {
	return r, ht.ErrNotImplemented
}
