// Code generated by v3/generator; DO NOT EDIT.
package replayer

import (
	"context"

{{if .OAPITypesImport }}
	openapi_types "github.com/deepmap/oapi-codegen/pkg/types"
{{end -}}

	v3 "github.com/exoscale/egoscale/v3"
	"github.com/exoscale/egoscale/v3/testing/recorder"
)

type {{.RootName}}API struct {
    Replayer *Replayer
{{ range .Fns}}
    {{.Name}}Hook func(ctx context.Context{{if .OptArgsDef}}{{printf ", %s" .OptArgsDef}}{{end}}) error
{{ end }}
}

{{ range .Fns}}
func (a *{{$.RootName}}API) {{.Name}}(ctx context.Context{{if .OptArgsDef}}{{printf ", %s" .OptArgsDef}}{{end}}) ({{.ResDef}}, error) {
    resp := InitializeReturnType[{{.ResDef}}](a.{{.Name}})

    expectedArgs := make(recorder.CallParameters)
    var returnErr error
    err := a.Replayer.GetTestCall(&resp, &expectedArgs, &returnErr)
    if err != nil {
        panic(err)
    }

    if a.{{.Name}}Hook == nil {
        {{if .OptArgsDef}}
             a.Replayer.AssertArgs(expectedArgs, {{.OptArgsPassthrough}})
        {{end}}
    } else {
        if err := a.{{.Name}}Hook(ctx{{if .OptArgsDef}}, {{.OptArgsPassthrough}}{{end}}); err != nil {
            panic(err)
        }
    }

    return resp, returnErr
}
{{ end }}
