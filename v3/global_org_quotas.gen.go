// Code generated by v3/generator; DO NOT EDIT.
package v3

import (
	"context"

)

type OrgQuotasAPI struct {
	client *Client
}


func (a *OrgQuotasAPI) List(ctx context.Context) ([]Quota, error) {
	req, err := newListQuotasRequest(a.client.server)
	if err != nil {
		return nil, err
	}

	req = req.WithContext(ctx)

	for _, e := range a.client.reqEditors {
		err = e(ctx, req)
		if err != nil {
			return nil, err
		}
	}

	r, err := a.client.httpClient.Do(req)
	if err != nil {
		return nil, err
	}

	resp, err := parseListQuotasResponse(r)
	if err != nil {
		return nil, err
	}

	err = ParseResponseError(resp.StatusCode(), resp.Body)
	if err != nil {
		return nil, err
	}

	return *resp.JSON200.Quotas, nil
}

func (a *OrgQuotasAPI) Get(ctx context.Context, entity string) (*Quota, error) {
	req, err := newGetQuotaRequest(a.client.server, entity)
	if err != nil {
		return nil, err
	}

	req = req.WithContext(ctx)

	for _, e := range a.client.reqEditors {
		err = e(ctx, req)
		if err != nil {
			return nil, err
		}
	}

	r, err := a.client.httpClient.Do(req)
	if err != nil {
		return nil, err
	}

	resp, err := parseGetQuotaResponse(r)
	if err != nil {
		return nil, err
	}

	err = ParseResponseError(resp.StatusCode(), resp.Body)
	if err != nil {
		return nil, err
	}

	return resp.JSON200, nil
}

